[
    {
        "comment": "Retrieve an Oauth access token, to be used for authentication of 'private' requests.",
        "endpoint": {
            "name": "public_auth",
            "path": "/public/auth",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "client_signature",
                            "refresh_token",
                            "client_credentials"
                        ],
                        "name": "grant_type"
                    }
                ],
                "fields": [
                    {
                        "comment": "Method of authentication",
                        "name": "grant_type",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "grant_type"
                        }
                    },
                    {
                        "comment": "Required for grant type client_credentials and client_signature",
                        "name": "client_id",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Required for grant type client_credentials",
                        "name": "client_secret",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Required for grant type refresh_token",
                        "name": "refresh_token",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Required for grant type client_signature, provides time when request has been generated (milliseconds since the UNIX epoch)",
                        "name": "timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Required for grant type client_signature; it's a cryptographic signature calculated over provided fields using user secret key. The signature should be calculated as an HMAC (Hash-based Message Authentication Code) with SHA256 hash algorithm",
                        "name": "signature",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Optional for grant type client_signature; delivers user generated initialization vector for the server token",
                        "name": "nonce",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Optional for grant type client_signature; contains any user specific value",
                        "name": "data",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Will be passed back in the response",
                        "name": "state",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Describes type of the access for assigned token, possible values: connection, session:name, trade:[read, read_write, none], wallet:[read, read_write, none], account:[read, read_write, none], expires:NUMBER, ip:ADDR. Details are elucidated in Access scope",
                        "name": "scope",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_auth_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_auth_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_auth_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_auth_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_auth_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "access_token",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "List of enabled advanced on-key features. Available options:  - restricted_block_trades: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key  - block_trade_approval: Block trades created using this API key require additional user approval. Methods that use block_rfq scope are not affected by Block Trade approval feature",
                            "name": "enabled_features",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Token lifetime in seconds",
                            "name": "expires_in",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The access token was acquired by logging in through Google.",
                            "name": "google_login",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "2FA is required for privileged methods",
                            "name": "mandatory_tfa_status",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Can be used to request a new token (with a new lifetime)",
                            "name": "refresh_token",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Type of the access for assigned token",
                            "name": "scope",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional Session id",
                            "name": "sid",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Copied from the input (if applicable)",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Authorization type, allowed value - bearer",
                            "name": "token_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_auth_response_result"
                }
            ]
        },
        "name": "public_auth",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "access_token",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "List of enabled advanced on-key features. Available options:  - restricted_block_trades: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key  - block_trade_approval: Block trades created using this API key require additional user approval. Methods that use block_rfq scope are not affected by Block Trade approval feature",
                    "name": "enabled_features",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Token lifetime in seconds",
                    "name": "expires_in",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "The access token was acquired by logging in through Google.",
                    "name": "google_login",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "2FA is required for privileged methods",
                    "name": "mandatory_tfa_status",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Can be used to request a new token (with a new lifetime)",
                    "name": "refresh_token",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Type of the access for assigned token",
                    "name": "scope",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional Session id",
                    "name": "sid",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Copied from the input (if applicable)",
                    "name": "state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Authorization type, allowed value - bearer",
                    "name": "token_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_auth_response_result"
        }
    },
    {
        "comment": "Generates a token for a new subject id. This method can be used to switch between subaccounts.",
        "endpoint": {
            "name": "public_exchange_token",
            "path": "/public/exchange_token",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Refresh token",
                        "name": "refresh_token",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "New subject id",
                        "name": "subject_id",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Optional scope override for the new session. Cannot exceed caller's permissions. Supports session scope for direct session creation during token exchange.",
                        "name": "scope",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_exchange_token_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_exchange_token_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_exchange_token_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_exchange_token_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_exchange_token_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "access_token",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Token lifetime in seconds",
                            "name": "expires_in",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Can be used to request a new token (with a new lifetime)",
                            "name": "refresh_token",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Type of the access for assigned token",
                            "name": "scope",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional Session id",
                            "name": "sid",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Authorization type, allowed value - bearer",
                            "name": "token_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_exchange_token_response_result"
                }
            ]
        },
        "name": "public_exchange_token",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "access_token",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Token lifetime in seconds",
                    "name": "expires_in",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Can be used to request a new token (with a new lifetime)",
                    "name": "refresh_token",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Type of the access for assigned token",
                    "name": "scope",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional Session id",
                    "name": "sid",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Authorization type, allowed value - bearer",
                    "name": "token_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_exchange_token_response_result"
        }
    },
    {
        "comment": "Generates a token for a new named session. This method can be used only with session scoped tokens.",
        "endpoint": {
            "name": "public_fork_token",
            "path": "/public/fork_token",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Refresh token",
                        "name": "refresh_token",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "New session name",
                        "name": "session_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_fork_token_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_fork_token_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_fork_token_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_fork_token_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_fork_token_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "access_token",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Token lifetime in seconds",
                            "name": "expires_in",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Can be used to request a new token (with a new lifetime)",
                            "name": "refresh_token",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Type of the access for assigned token",
                            "name": "scope",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional Session id",
                            "name": "sid",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Authorization type, allowed value - bearer",
                            "name": "token_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_fork_token_response_result"
                }
            ]
        },
        "name": "public_fork_token",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "access_token",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Token lifetime in seconds",
                    "name": "expires_in",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Can be used to request a new token (with a new lifetime)",
                    "name": "refresh_token",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Type of the access for assigned token",
                    "name": "scope",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional Session id",
                    "name": "sid",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Authorization type, allowed value - bearer",
                    "name": "token_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_fork_token_response_result"
        }
    },
    {
        "comment": "Gracefully close websocket connection, when COD (Cancel On Disconnect) is enabled orders are not cancelled",
        "endpoint": {
            "name": "private_logout",
            "path": "/private/logout",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "If value is true all tokens created in current session are invalidated, default: true",
                        "name": "invalidate_token",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_logout_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": true,
                "name": "private_logout_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": true,
                    "name": "private_logout_response"
                }
            ]
        },
        "name": "private_logout",
        "requires_auth": true,
        "response_type": null
    },
    {
        "comment": "Enable Cancel On Disconnect for the connection. After enabling, all orders created via this connection will be automatically cancelled when the connection is closed. Cancel is triggered in the following cases: when the TCP connection is properly terminated, when the connection is closed due to 10 minutes of inactivity, or when a heartbeat detects a disconnection. To reduce the inactivity timeout, consider using public/set_heartbeat. Note: If the connection is gracefully closed using private/logout, cancel-on-disconnect will not be triggered. Notice: Cancel-on-Disconnect does not affect orders created by other connections - they will remain active! When change is applied on the account scope, then every newly opened connection will start with active Cancel on Disconnect.",
        "endpoint": {
            "name": "private_enable_cancel_on_disconnect",
            "path": "/private/enable_cancel_on_disconnect",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "account",
                            "connection"
                        ],
                        "name": "scope"
                    }
                ],
                "fields": [
                    {
                        "comment": "Specifies if Cancel On Disconnect change should be applied/checked for the current connection or the account (default - connection)  NOTICE: Scope connection can be used only when working via Websocket.",
                        "name": "scope",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "scope"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_enable_cancel_on_disconnect_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Result of method execution. ok in case of success",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_enable_cancel_on_disconnect_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Result of method execution. ok in case of success",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_enable_cancel_on_disconnect_response"
                }
            ]
        },
        "name": "private_enable_cancel_on_disconnect",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Disable Cancel On Disconnect for the connection. When change is applied for the account, then every newly opened connection will start with inactive Cancel on Disconnect.",
        "endpoint": {
            "name": "private_disable_cancel_on_disconnect",
            "path": "/private/disable_cancel_on_disconnect",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "account",
                            "connection"
                        ],
                        "name": "scope"
                    }
                ],
                "fields": [
                    {
                        "comment": "Specifies if Cancel On Disconnect change should be applied/checked for the current connection or the account (default - connection)  NOTICE: Scope connection can be used only when working via Websocket.",
                        "name": "scope",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "scope"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_disable_cancel_on_disconnect_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Result of method execution. ok in case of success",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_disable_cancel_on_disconnect_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Result of method execution. ok in case of success",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_disable_cancel_on_disconnect_response"
                }
            ]
        },
        "name": "private_disable_cancel_on_disconnect",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Read current Cancel On Disconnect configuration for the account.",
        "endpoint": {
            "name": "private_get_cancel_on_disconnect",
            "path": "/private/get_cancel_on_disconnect",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "account",
                            "connection"
                        ],
                        "name": "scope"
                    }
                ],
                "fields": [
                    {
                        "comment": "Specifies if Cancel On Disconnect change should be applied/checked for the current connection or the account (default - connection)  NOTICE: Scope connection can be used only when working via Websocket.",
                        "name": "scope",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "scope"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_cancel_on_disconnect_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_cancel_on_disconnect_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_cancel_on_disconnect_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_cancel_on_disconnect_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_cancel_on_disconnect_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Current configuration status",
                            "name": "enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Informs if Cancel on Disconnect was checked for the current connection or the account",
                            "name": "scope",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_cancel_on_disconnect_response_result"
                }
            ]
        },
        "name": "private_get_cancel_on_disconnect",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Current configuration status",
                    "name": "enabled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Informs if Cancel on Disconnect was checked for the current connection or the account",
                    "name": "scope",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_cancel_on_disconnect_response_result"
        }
    },
    {
        "comment": "Retrieves the current time (in milliseconds). This API endpoint can be used to check the clock skew between your software and Deribit's systems.",
        "endpoint": {
            "name": "public_get_time",
            "path": "/public/get_time",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": null,
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Current timestamp (milliseconds since the UNIX epoch)",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_time_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Current timestamp (milliseconds since the UNIX epoch)",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_time_response"
                }
            ]
        },
        "name": "public_get_time",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "integer"
        }
    },
    {
        "comment": "Method used to get information about locked currencies",
        "endpoint": {
            "name": "public_status",
            "path": "/public/status",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": null,
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_status_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_status_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_status_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_status_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "true when platform is locked in all currencies, partial when some currencies are locked, false - when there are not currencies locked",
                            "name": "locked",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "List of currency indices locked platform-wise",
                            "name": "locked_indices",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_status_response_result"
                }
            ]
        },
        "name": "public_status",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "true when platform is locked in all currencies, partial when some currencies are locked, false - when there are not currencies locked",
                    "name": "locked",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "List of currency indices locked platform-wise",
                    "name": "locked_indices",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_status_response_result"
        }
    },
    {
        "comment": "Tests the connection to the API server, and returns its version. You can use this to make sure the API is reachable, and matches the expected version.",
        "endpoint": {
            "name": "public_test",
            "path": "/public/test",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "exception"
                        ],
                        "name": "expected_result"
                    }
                ],
                "fields": [
                    {
                        "comment": "The value \"exception\" will trigger an error response. This may be useful for testing wrapper libraries.",
                        "name": "expected_result",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "expected_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_test_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_test_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_test_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_test_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_test_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The API version",
                            "name": "version",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_test_response_result"
                }
            ]
        },
        "name": "public_test",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "The API version",
                    "name": "version",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_test_response_result"
        }
    },
    {
        "comment": "Retrieves historical APR data for specified currency. Only applicable to yield-generating tokens (USDE, STETH, USDC, BUILD).",
        "endpoint": {
            "name": "public_get_apr_history",
            "path": "/public/get_apr_history",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "usde",
                            "build",
                            "usdc",
                            "steth"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "Currency for which to retrieve APR history",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Number of days to retrieve (default 365, maximum 365)",
                        "name": "limit",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Used to receive APR history before given epoch day",
                        "name": "before",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_apr_history_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_apr_history_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_apr_history_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_apr_history_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_apr_history_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Continuation token for pagination.",
                            "name": "continuation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "data",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_apr_history_response_datum"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_apr_history_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The APR of the day",
                            "name": "apr",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The full epoch day",
                            "name": "day",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_apr_history_response_datum"
                }
            ]
        },
        "name": "public_get_apr_history",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Continuation token for pagination.",
                    "name": "continuation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "",
                    "name": "data",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "public_get_apr_history_response_datum"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_apr_history_response_result"
        }
    },
    {
        "comment": "Retrieves the summary information such as open interest, 24h volume, etc. for all instruments for the currency (optionally filtered by kind).\nNote - For real-time updates, we recommend using the WebSocket subscription to ticker.{instrument_name}.{interval} instead of polling this endpoint.",
        "endpoint": {
            "name": "public_get_book_summary_by_currency",
            "path": "/public/get_book_summary_by_currency",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    },
                    {
                        "items": [
                            "future",
                            "option_combo",
                            "future_combo",
                            "option",
                            "spot"
                        ],
                        "name": "kind"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Instrument kind, if not provided instruments of all kinds are considered",
                        "name": "kind",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "kind"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_book_summary_by_currency_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_book_summary_by_currency_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_book_summary_by_currency_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_book_summary_by_currency_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_book_summary_by_currency_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The current best ask price, null if there aren't any asks",
                            "name": "ask_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Base currency",
                            "name": "base_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The current best bid price, null if there aren't any bids",
                            "name": "bid_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Current funding (perpetual only)",
                            "name": "current_funding",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional (only for derivatives). Estimated delivery price for the market. For more details, see Contract Specification > General Documentation > Expiration Price.",
                            "name": "estimated_delivery_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Funding 8h (perpetual only)",
                            "name": "funding_8h",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Price of the 24h highest trade",
                            "name": "high",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Interest rate used in implied volatility calculations (options only)",
                            "name": "interest_rate",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The price of the latest trade, null if there weren't any trades",
                            "name": "last",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Price of the 24h lowest trade, null if there weren't any trades",
                            "name": "low",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "(Only for option) implied volatility for mark price",
                            "name": "mark_iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The current instrument market price",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The average of the best bid and ask, null if there aren't any asks or bids",
                            "name": "mid_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional (only for derivatives). The total amount of outstanding contracts in the corresponding amount units. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "open_interest",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "24-hour price change expressed as a percentage, null if there weren't any trades",
                            "name": "price_change",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Quote currency",
                            "name": "quote_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Name of the underlying future, or 'index_price' (options only)",
                            "name": "underlying_index",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "underlying price for implied volatility calculations (options only)",
                            "name": "underlying_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The total 24h traded volume (in base currency)",
                            "name": "volume",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Volume in quote currency (futures and spots only)",
                            "name": "volume_notional",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Volume in USD",
                            "name": "volume_usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_book_summary_by_currency_response_result"
                }
            ]
        },
        "name": "public_get_book_summary_by_currency",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "The current best ask price, null if there aren't any asks",
                    "name": "ask_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Base currency",
                    "name": "base_currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The current best bid price, null if there aren't any bids",
                    "name": "bid_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Current funding (perpetual only)",
                    "name": "current_funding",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Optional (only for derivatives). Estimated delivery price for the market. For more details, see Contract Specification > General Documentation > Expiration Price.",
                    "name": "estimated_delivery_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Funding 8h (perpetual only)",
                    "name": "funding_8h",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Price of the 24h highest trade",
                    "name": "high",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Unique instrument identifier",
                    "name": "instrument_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Interest rate used in implied volatility calculations (options only)",
                    "name": "interest_rate",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The price of the latest trade, null if there weren't any trades",
                    "name": "last",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Price of the 24h lowest trade, null if there weren't any trades",
                    "name": "low",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "(Only for option) implied volatility for mark price",
                    "name": "mark_iv",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The current instrument market price",
                    "name": "mark_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The average of the best bid and ask, null if there aren't any asks or bids",
                    "name": "mid_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Optional (only for derivatives). The total amount of outstanding contracts in the corresponding amount units. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                    "name": "open_interest",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "24-hour price change expressed as a percentage, null if there weren't any trades",
                    "name": "price_change",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Quote currency",
                    "name": "quote_currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Name of the underlying future, or 'index_price' (options only)",
                    "name": "underlying_index",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "underlying price for implied volatility calculations (options only)",
                    "name": "underlying_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The total 24h traded volume (in base currency)",
                    "name": "volume",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Volume in quote currency (futures and spots only)",
                    "name": "volume_notional",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Volume in USD",
                    "name": "volume_usd",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_book_summary_by_currency_response_result"
        }
    },
    {
        "comment": "Retrieves the summary information such as open interest, 24h volume, etc. for a specific instrument.",
        "endpoint": {
            "name": "public_get_book_summary_by_instrument",
            "path": "/public/get_book_summary_by_instrument",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_book_summary_by_instrument_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_book_summary_by_instrument_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_book_summary_by_instrument_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_book_summary_by_instrument_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_book_summary_by_instrument_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The current best ask price, null if there aren't any asks",
                            "name": "ask_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Base currency",
                            "name": "base_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The current best bid price, null if there aren't any bids",
                            "name": "bid_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Current funding (perpetual only)",
                            "name": "current_funding",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional (only for derivatives). Estimated delivery price for the market. For more details, see Contract Specification > General Documentation > Expiration Price.",
                            "name": "estimated_delivery_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Funding 8h (perpetual only)",
                            "name": "funding_8h",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Price of the 24h highest trade",
                            "name": "high",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Interest rate used in implied volatility calculations (options only)",
                            "name": "interest_rate",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The price of the latest trade, null if there weren't any trades",
                            "name": "last",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Price of the 24h lowest trade, null if there weren't any trades",
                            "name": "low",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "(Only for option) implied volatility for mark price",
                            "name": "mark_iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The current instrument market price",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The average of the best bid and ask, null if there aren't any asks or bids",
                            "name": "mid_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional (only for derivatives). The total amount of outstanding contracts in the corresponding amount units. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "open_interest",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "24-hour price change expressed as a percentage, null if there weren't any trades",
                            "name": "price_change",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Quote currency",
                            "name": "quote_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Name of the underlying future, or 'index_price' (options only)",
                            "name": "underlying_index",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "underlying price for implied volatility calculations (options only)",
                            "name": "underlying_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The total 24h traded volume (in base currency)",
                            "name": "volume",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Volume in quote currency (futures and spots only)",
                            "name": "volume_notional",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Volume in USD",
                            "name": "volume_usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_book_summary_by_instrument_response_result"
                }
            ]
        },
        "name": "public_get_book_summary_by_instrument",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "The current best ask price, null if there aren't any asks",
                    "name": "ask_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Base currency",
                    "name": "base_currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The current best bid price, null if there aren't any bids",
                    "name": "bid_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Current funding (perpetual only)",
                    "name": "current_funding",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Optional (only for derivatives). Estimated delivery price for the market. For more details, see Contract Specification > General Documentation > Expiration Price.",
                    "name": "estimated_delivery_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Funding 8h (perpetual only)",
                    "name": "funding_8h",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Price of the 24h highest trade",
                    "name": "high",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Unique instrument identifier",
                    "name": "instrument_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Interest rate used in implied volatility calculations (options only)",
                    "name": "interest_rate",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The price of the latest trade, null if there weren't any trades",
                    "name": "last",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Price of the 24h lowest trade, null if there weren't any trades",
                    "name": "low",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "(Only for option) implied volatility for mark price",
                    "name": "mark_iv",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The current instrument market price",
                    "name": "mark_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The average of the best bid and ask, null if there aren't any asks or bids",
                    "name": "mid_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Optional (only for derivatives). The total amount of outstanding contracts in the corresponding amount units. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                    "name": "open_interest",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "24-hour price change expressed as a percentage, null if there weren't any trades",
                    "name": "price_change",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Quote currency",
                    "name": "quote_currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Name of the underlying future, or 'index_price' (options only)",
                    "name": "underlying_index",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "underlying price for implied volatility calculations (options only)",
                    "name": "underlying_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The total 24h traded volume (in base currency)",
                    "name": "volume",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Volume in quote currency (futures and spots only)",
                    "name": "volume_notional",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Volume in USD",
                    "name": "volume_usd",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_book_summary_by_instrument_response_result"
        }
    },
    {
        "comment": "Retrieves contract size of provided instrument.",
        "endpoint": {
            "name": "public_get_contract_size",
            "path": "/public/get_contract_size",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_contract_size_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_contract_size_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_contract_size_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_contract_size_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_contract_size_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Contract size, for futures in USD, for options in base currency of the instrument (BTC, ETH, ...)",
                            "name": "contract_size",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_contract_size_response_result"
                }
            ]
        },
        "name": "public_get_contract_size",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Contract size, for futures in USD, for options in base currency of the instrument (BTC, ETH, ...)",
                    "name": "contract_size",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_contract_size_response_result"
        }
    },
    {
        "comment": "Retrieves all cryptocurrencies supported by the API.",
        "endpoint": {
            "name": "public_get_currencies",
            "path": "/public/get_currencies",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": null,
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_currencies_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_currencies_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_currencies_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_currencies_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Simple Moving Average (SMA) of the last 7 days of rewards. If fewer than 7 days of reward data are available, the APR is calculated as the average of the available rewards. Only applicable to yield-generating tokens (USDE, STETH, USDC, BUILD).",
                            "name": "apr",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The type of the currency.",
                            "name": "coin_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The abbreviation of the currency. This abbreviation is used elsewhere in the API to identify the currency.",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The full name for the currency.",
                            "name": "currency_long",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The number of decimal places for the currency",
                            "name": "decimals",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "true if the currency is part of the cross collateral pool",
                            "name": "in_cross_collateral_pool",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Minimum number of block chain confirmations before deposit is accepted.",
                            "name": "min_confirmations",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The minimum transaction fee paid for withdrawals",
                            "name": "min_withdrawal_fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The currency of the network",
                            "name": "network_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The network fee",
                            "name": "network_fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The total transaction fee paid for withdrawals",
                            "name": "withdrawal_fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "withdrawal_priorities",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_currencies_response_withdrawal_priority"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_currencies_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "value",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_currencies_response_withdrawal_priority"
                }
            ]
        },
        "name": "public_get_currencies",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Simple Moving Average (SMA) of the last 7 days of rewards. If fewer than 7 days of reward data are available, the APR is calculated as the average of the available rewards. Only applicable to yield-generating tokens (USDE, STETH, USDC, BUILD).",
                    "name": "apr",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The type of the currency.",
                    "name": "coin_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The abbreviation of the currency. This abbreviation is used elsewhere in the API to identify the currency.",
                    "name": "currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The full name for the currency.",
                    "name": "currency_long",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The number of decimal places for the currency",
                    "name": "decimals",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "true if the currency is part of the cross collateral pool",
                    "name": "in_cross_collateral_pool",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Minimum number of block chain confirmations before deposit is accepted.",
                    "name": "min_confirmations",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "The minimum transaction fee paid for withdrawals",
                    "name": "min_withdrawal_fee",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The currency of the network",
                    "name": "network_currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The network fee",
                    "name": "network_fee",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The total transaction fee paid for withdrawals",
                    "name": "withdrawal_fee",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "",
                    "name": "withdrawal_priorities",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "public_get_currencies_response_withdrawal_priority"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_currencies_response_result"
        }
    },
    {
        "comment": "Retrieves delivery prices for then given index",
        "endpoint": {
            "name": "public_get_delivery_prices",
            "path": "/public/get_delivery_prices",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "avax_usdc",
                            "btc_usdc",
                            "dot_usdc",
                            "usyc_usdc",
                            "paxg_btc",
                            "eurr_usdc",
                            "sol_usdt",
                            "link_usdc",
                            "trump_usdc",
                            "eurr_usdt",
                            "drbfix-btc_usdc",
                            "sol_usdc",
                            "steth_eth",
                            "bnb_usdc",
                            "ton_usdc",
                            "ltc_usdc",
                            "eth_eurr",
                            "paxg_usdc",
                            "eth_usdt",
                            "steth_usdt",
                            "btcdvol_usdc",
                            "ethdvol_usdc",
                            "xrp_usdc",
                            "btc_usdt",
                            "ada_usdc",
                            "btc_usyc",
                            "eth_usde",
                            "drbfix-eth_usdc",
                            "shib_usdc",
                            "steth_usdc",
                            "eth_usyc",
                            "usde_usdt",
                            "btc_eurr",
                            "trx_usdc",
                            "eth_usd",
                            "doge_usdc",
                            "usdc_usdt",
                            "uni_usdc",
                            "btc_usde",
                            "btc_usd",
                            "eth_btc",
                            "eth_usdc",
                            "algo_usdc",
                            "bch_usdc",
                            "usde_usdc",
                            "near_usdc",
                            "buidl_usdc"
                        ],
                        "name": "index_name"
                    }
                ],
                "fields": [
                    {
                        "comment": "Index identifier, matches (base) cryptocurrency with quote currency",
                        "name": "index_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "index_name"
                        }
                    },
                    {
                        "comment": "The offset for pagination, default - 0",
                        "name": "offset",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Number of requested items, default - 10, maximum - 1000",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_delivery_prices_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_delivery_prices_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_delivery_prices_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_delivery_prices_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_delivery_prices_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "data",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_delivery_prices_response_datum"
                            }
                        },
                        {
                            "comment": "Available delivery prices",
                            "name": "records_total",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_delivery_prices_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The event date with year, month and day",
                            "name": "date",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The settlement price for the instrument. Only when state = closed",
                            "name": "delivery_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_delivery_prices_response_datum"
                }
            ]
        },
        "name": "public_get_delivery_prices",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "data",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "public_get_delivery_prices_response_datum"
                    }
                },
                {
                    "comment": "Available delivery prices",
                    "name": "records_total",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_delivery_prices_response_result"
        }
    },
    {
        "comment": "Retrieves expirations for instruments. This method can be used to see instruments's expirations.",
        "endpoint": {
            "name": "public_get_expirations",
            "path": "/public/get_expirations",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "grouped",
                            "ETH",
                            "any",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    },
                    {
                        "items": [
                            "option",
                            "future",
                            "any"
                        ],
                        "name": "kind"
                    },
                    {
                        "items": [
                            "avax_usdc",
                            "btc_usdc",
                            "dot_usdc",
                            "usyc_usdc",
                            "paxg_btc",
                            "eurr_usdc",
                            "sol_usdt",
                            "link_usdc",
                            "trump_usdc",
                            "eurr_usdt",
                            "drbfix-btc_usdc",
                            "sol_usdc",
                            "steth_eth",
                            "bnb_usdc",
                            "ton_usdc",
                            "ltc_usdc",
                            "eth_eurr",
                            "paxg_usdc",
                            "eth_usdt",
                            "steth_usdt",
                            "btcdvol_usdc",
                            "ethdvol_usdc",
                            "xrp_usdc",
                            "btc_usdt",
                            "ada_usdc",
                            "btc_usyc",
                            "eth_usde",
                            "drbfix-eth_usdc",
                            "shib_usdc",
                            "steth_usdc",
                            "eth_usyc",
                            "usde_usdt",
                            "btc_eurr",
                            "trx_usdc",
                            "eth_usd",
                            "doge_usdc",
                            "usdc_usdt",
                            "uni_usdc",
                            "btc_usde",
                            "btc_usd",
                            "eth_btc",
                            "eth_usdc",
                            "algo_usdc",
                            "bch_usdc",
                            "usde_usdc",
                            "near_usdc",
                            "buidl_usdc"
                        ],
                        "name": "currency_pair"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol or \"any\" for all or '\"grouped\"' for all grouped by currency",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Instrument kind, \"future\" or \"option\" or \"any\"",
                        "name": "kind",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "kind"
                        }
                    },
                    {
                        "comment": "The currency pair symbol",
                        "name": "currency_pair",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency_pair"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_expirations_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "A map where each key is valid currency (e.g. btc, eth, usdc), and the value is a list of expirations or a map where each key is a valid kind (future or options) and value is a list of expirations from every instrument",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_expirations_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_expirations_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "A map where each key is valid currency (e.g. btc, eth, usdc), and the value is a list of expirations or a map where each key is a valid kind (future or options) and value is a list of expirations from every instrument",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_expirations_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_expirations_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Currency name or \"any\" if don't care or \"grouped\" if grouped by currencies",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Instrument kind: \"future\", \"option\" or \"any\" for all",
                            "name": "kind",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_expirations_response_result"
                }
            ]
        },
        "name": "public_get_expirations",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Currency name or \"any\" if don't care or \"grouped\" if grouped by currencies",
                    "name": "currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Instrument kind: \"future\", \"option\" or \"any\" for all",
                    "name": "kind",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_expirations_response_result"
        }
    },
    {
        "comment": "Retrieve the list of the latest PERPETUAL funding chart points within a given time period.",
        "endpoint": {
            "name": "public_get_funding_chart_data",
            "path": "/public/get_funding_chart_data",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "24h",
                            "8h",
                            "1m"
                        ],
                        "name": "length"
                    }
                ],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Specifies time period. 8h - 8 hours, 24h - 24 hours, 1m - 1 month",
                        "name": "length",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "length"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_funding_chart_data_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_funding_chart_data_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_funding_chart_data_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_funding_chart_data_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_funding_chart_data_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Current interest",
                            "name": "current_interest",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "data",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_funding_chart_data_response_datum"
                            }
                        },
                        {
                            "comment": "Current interest 8h",
                            "name": "interest_8h",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_funding_chart_data_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Current index price",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Historical interest 8h value",
                            "name": "interest_8h",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_funding_chart_data_response_datum"
                }
            ]
        },
        "name": "public_get_funding_chart_data",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Current interest",
                    "name": "current_interest",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "",
                    "name": "data",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "public_get_funding_chart_data_response_datum"
                    }
                },
                {
                    "comment": "Current interest 8h",
                    "name": "interest_8h",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_funding_chart_data_response_result"
        }
    },
    {
        "comment": "Retrieves hourly historical interest rate for requested PERPETUAL instrument.",
        "endpoint": {
            "name": "public_get_funding_rate_history",
            "path": "/public/get_funding_rate_history",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The earliest timestamp to return result from (milliseconds since the UNIX epoch)",
                        "name": "start_timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The most recent timestamp to return result from (milliseconds since the UNIX epoch)",
                        "name": "end_timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_funding_rate_history_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_funding_rate_history_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_funding_rate_history_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_funding_rate_history_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_funding_rate_history_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Price in base currency",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "1hour interest rate",
                            "name": "interest_1h",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "float"
                            }
                        },
                        {
                            "comment": "8hour interest rate",
                            "name": "interest_8h",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "float"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "prev_index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_funding_rate_history_response_result"
                }
            ]
        },
        "name": "public_get_funding_rate_history",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Price in base currency",
                    "name": "index_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "1hour interest rate",
                    "name": "interest_1h",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "float"
                    }
                },
                {
                    "comment": "8hour interest rate",
                    "name": "interest_8h",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "float"
                    }
                },
                {
                    "comment": "Price in base currency",
                    "name": "prev_index_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_funding_rate_history_response_result"
        }
    },
    {
        "comment": "Retrieves interest rate value for requested period. Applicable only for PERPETUAL instruments.",
        "endpoint": {
            "name": "public_get_funding_rate_value",
            "path": "/public/get_funding_rate_value",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The earliest timestamp to return result from (milliseconds since the UNIX epoch)",
                        "name": "start_timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The most recent timestamp to return result from (milliseconds since the UNIX epoch)",
                        "name": "end_timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_funding_rate_value_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "float"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_funding_rate_value_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "float"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_funding_rate_value_response"
                }
            ]
        },
        "name": "public_get_funding_rate_value",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "float"
        }
    },
    {
        "comment": "Provides information about historical volatility for given cryptocurrency.",
        "endpoint": {
            "name": "public_get_historical_volatility",
            "path": "/public/get_historical_volatility",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_historical_volatility_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "float[]"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_historical_volatility_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "float[]"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_historical_volatility_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "",
                            "name": "value",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": true,
                    "is_primitive": false,
                    "name": "public_get_historical_volatility_response_result"
                }
            ]
        },
        "name": "public_get_historical_volatility",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "",
                    "name": "value",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": true,
            "is_primitive": false,
            "name": "public_get_historical_volatility_response_result"
        }
    },
    {
        "comment": "Retrieves the current index price value for given index name.",
        "endpoint": {
            "name": "public_get_index_price",
            "path": "/public/get_index_price",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "avax_usdc",
                            "btc_usdc",
                            "dot_usdc",
                            "usyc_usdc",
                            "paxg_btc",
                            "eurr_usdc",
                            "sol_usdt",
                            "link_usdc",
                            "trump_usdc",
                            "eurr_usdt",
                            "drbfix-btc_usdc",
                            "sol_usdc",
                            "steth_eth",
                            "bnb_usdc",
                            "ton_usdc",
                            "ltc_usdc",
                            "eth_eurr",
                            "paxg_usdc",
                            "eth_usdt",
                            "steth_usdt",
                            "btcdvol_usdc",
                            "ethdvol_usdc",
                            "xrp_usdc",
                            "btc_usdt",
                            "ada_usdc",
                            "btc_usyc",
                            "eth_usde",
                            "drbfix-eth_usdc",
                            "shib_usdc",
                            "steth_usdc",
                            "eth_usyc",
                            "usde_usdt",
                            "btc_eurr",
                            "trx_usdc",
                            "eth_usd",
                            "doge_usdc",
                            "usdc_usdt",
                            "uni_usdc",
                            "btc_usde",
                            "btc_usd",
                            "eth_btc",
                            "eth_usdc",
                            "algo_usdc",
                            "bch_usdc",
                            "usde_usdc",
                            "near_usdc",
                            "buidl_usdc"
                        ],
                        "name": "index_name"
                    }
                ],
                "fields": [
                    {
                        "comment": "Index identifier, matches (base) cryptocurrency with quote currency",
                        "name": "index_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "index_name"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_index_price_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_index_price_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_index_price_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_index_price_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_index_price_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Estimated delivery price for the market. For more details, see Documentation > General > Expiration Price",
                            "name": "estimated_delivery_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Value of requested index",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_index_price_response_result"
                }
            ]
        },
        "name": "public_get_index_price",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Estimated delivery price for the market. For more details, see Documentation > General > Expiration Price",
                    "name": "estimated_delivery_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Value of requested index",
                    "name": "index_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_index_price_response_result"
        }
    },
    {
        "comment": "Retrieves the identifiers of all supported Price Indexes",
        "endpoint": {
            "name": "public_get_index_price_names",
            "path": "/public/get_index_price_names",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "When set to true, returns additional information including future_combo_creation_enabled and option_combo_creation_enabled for each index",
                        "name": "extended",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_index_price_names_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_index_price_names_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_index_price_names_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_index_price_names_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_index_price_names_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Whether future combo creation is enabled for this index (only present when extended=true)",
                            "name": "future_combo_creation_enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Index name",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Whether option combo creation is enabled for this index (only present when extended=true)",
                            "name": "option_combo_creation_enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_index_price_names_response_result"
                }
            ]
        },
        "name": "public_get_index_price_names",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Whether future combo creation is enabled for this index (only present when extended=true)",
                    "name": "future_combo_creation_enabled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Index name",
                    "name": "name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Whether option combo creation is enabled for this index (only present when extended=true)",
                    "name": "option_combo_creation_enabled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_index_price_names_response_result"
        }
    },
    {
        "comment": "Retrieves information about instrument",
        "endpoint": {
            "name": "public_get_instrument",
            "path": "/public/get_instrument",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_instrument_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_instrument_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_instrument_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_instrument_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_instrument_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The underlying currency being traded.",
                            "name": "base_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block Trade commission for instrument.",
                            "name": "block_trade_commission",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Minimum amount for block trading.",
                            "name": "block_trade_min_trade_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Specifies minimal price change for block trading.",
                            "name": "block_trade_tick_size",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Contract size for instrument.",
                            "name": "contract_size",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Counter currency for the instrument.",
                            "name": "counter_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The time when the instrument was first created (milliseconds since the UNIX epoch).",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The time when the instrument will expire (milliseconds since the UNIX epoch).",
                            "name": "expiration_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Future type (only for futures)(field is deprecated and will be removed in the future, instrument_type should be used instead).",
                            "name": "future_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Instrument ID",
                            "name": "instrument_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Type of the instrument. linear or reversed",
                            "name": "instrument_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Indicates if the instrument can currently be traded.",
                            "name": "is_active",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Instrument kind: \"future\", \"option\", \"spot\", \"future_combo\", \"option_combo\"",
                            "name": "kind",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Maker commission for instrument.",
                            "name": "maker_commission",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Maximal leverage for instrument (only for futures).",
                            "name": "max_leverage",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Maximal liquidation trade commission for instrument (only for futures).",
                            "name": "max_liquidation_commission",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Minimum amount for trading. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "min_trade_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The option type (only for options).",
                            "name": "option_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Name of price index that is used for this instrument",
                            "name": "price_index",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The currency in which the instrument prices are quoted.",
                            "name": "quote_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). Settlement currency for the instrument.",
                            "name": "settlement_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). The settlement period.",
                            "name": "settlement_period",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The strike value (only for options).",
                            "name": "strike",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Taker commission for instrument.",
                            "name": "taker_commission",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Specifies minimal price change and, as follows, the number of decimal places for instrument prices.",
                            "name": "tick_size",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "tick_size_steps",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_instrument_response_tick_size_steps"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_instrument_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The price from which the increased tick size applies",
                            "name": "above_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_instrument_response_above_price"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_instrument_response_tick_size_steps"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Tick size to be used above the price. It must be multiple of the minimum tick size.",
                            "name": "tick_size",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_instrument_response_above_price"
                }
            ]
        },
        "name": "public_get_instrument",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "The underlying currency being traded.",
                    "name": "base_currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Block Trade commission for instrument.",
                    "name": "block_trade_commission",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Minimum amount for block trading.",
                    "name": "block_trade_min_trade_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Specifies minimal price change for block trading.",
                    "name": "block_trade_tick_size",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Contract size for instrument.",
                    "name": "contract_size",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Counter currency for the instrument.",
                    "name": "counter_currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The time when the instrument was first created (milliseconds since the UNIX epoch).",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "The time when the instrument will expire (milliseconds since the UNIX epoch).",
                    "name": "expiration_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Future type (only for futures)(field is deprecated and will be removed in the future, instrument_type should be used instead).",
                    "name": "future_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Instrument ID",
                    "name": "instrument_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Unique instrument identifier",
                    "name": "instrument_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Type of the instrument. linear or reversed",
                    "name": "instrument_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Indicates if the instrument can currently be traded.",
                    "name": "is_active",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Instrument kind: \"future\", \"option\", \"spot\", \"future_combo\", \"option_combo\"",
                    "name": "kind",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Maker commission for instrument.",
                    "name": "maker_commission",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Maximal leverage for instrument (only for futures).",
                    "name": "max_leverage",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Maximal liquidation trade commission for instrument (only for futures).",
                    "name": "max_liquidation_commission",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Minimum amount for trading. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                    "name": "min_trade_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The option type (only for options).",
                    "name": "option_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Name of price index that is used for this instrument",
                    "name": "price_index",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The currency in which the instrument prices are quoted.",
                    "name": "quote_currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (not added for spot). Settlement currency for the instrument.",
                    "name": "settlement_currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (not added for spot). The settlement period.",
                    "name": "settlement_period",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The strike value (only for options).",
                    "name": "strike",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Taker commission for instrument.",
                    "name": "taker_commission",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Specifies minimal price change and, as follows, the number of decimal places for instrument prices.",
                    "name": "tick_size",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "",
                    "name": "tick_size_steps",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "public_get_instrument_response_tick_size_steps"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_instrument_response_result"
        }
    },
    {
        "comment": "Retrieves available trading instruments. This method can be used to see which instruments are available for trading, or which instruments have recently expired.\nNote - This endpoint has distinct API rate limiting requirements: 1 request per 10 seconds, with a burst of 5. To avoid rate limits, we recommend using either the REST requests for server-cached data or the WebSocket subscription to instrument_state.{kind}.{currency} for real-time updates. For more information, see Rate Limits.",
        "endpoint": {
            "name": "public_get_instruments",
            "path": "/public/get_instruments",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "any",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    },
                    {
                        "items": [
                            "future",
                            "option_combo",
                            "future_combo",
                            "option",
                            "spot"
                        ],
                        "name": "kind"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol or \"any\" for all",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Instrument kind, if not provided instruments of all kinds are considered",
                        "name": "kind",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "kind"
                        }
                    },
                    {
                        "comment": "Set to true to show recently expired instruments instead of active ones.",
                        "name": "expired",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_instruments_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_instruments_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_instruments_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_instruments_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_instruments_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The underlying currency being traded.",
                            "name": "base_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block Trade commission for instrument.",
                            "name": "block_trade_commission",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Minimum amount for block trading.",
                            "name": "block_trade_min_trade_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Specifies minimal price change for block trading.",
                            "name": "block_trade_tick_size",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Contract size for instrument.",
                            "name": "contract_size",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Counter currency for the instrument.",
                            "name": "counter_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The time when the instrument was first created (milliseconds since the UNIX epoch).",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The time when the instrument will expire (milliseconds since the UNIX epoch).",
                            "name": "expiration_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Future type (only for futures)(field is deprecated and will be removed in the future, instrument_type should be used instead).",
                            "name": "future_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Instrument ID",
                            "name": "instrument_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Type of the instrument. linear or reversed",
                            "name": "instrument_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Indicates if the instrument can currently be traded.",
                            "name": "is_active",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Instrument kind: \"future\", \"option\", \"spot\", \"future_combo\", \"option_combo\"",
                            "name": "kind",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Maker commission for instrument.",
                            "name": "maker_commission",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Maximal leverage for instrument (only for futures).",
                            "name": "max_leverage",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Maximal liquidation trade commission for instrument (only for futures).",
                            "name": "max_liquidation_commission",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Minimum amount for trading. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "min_trade_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The option type (only for options).",
                            "name": "option_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Name of price index that is used for this instrument",
                            "name": "price_index",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The currency in which the instrument prices are quoted.",
                            "name": "quote_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). Settlement currency for the instrument.",
                            "name": "settlement_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). The settlement period.",
                            "name": "settlement_period",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The strike value (only for options).",
                            "name": "strike",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Taker commission for instrument.",
                            "name": "taker_commission",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Specifies minimal price change and, as follows, the number of decimal places for instrument prices.",
                            "name": "tick_size",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "tick_size_steps",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_instruments_response_tick_size_steps"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_instruments_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The price from which the increased tick size applies",
                            "name": "above_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_instruments_response_above_price"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_instruments_response_tick_size_steps"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Tick size to be used above the price. It must be multiple of the minimum tick size.",
                            "name": "tick_size",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_instruments_response_above_price"
                }
            ]
        },
        "name": "public_get_instruments",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "The underlying currency being traded.",
                    "name": "base_currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Block Trade commission for instrument.",
                    "name": "block_trade_commission",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Minimum amount for block trading.",
                    "name": "block_trade_min_trade_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Specifies minimal price change for block trading.",
                    "name": "block_trade_tick_size",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Contract size for instrument.",
                    "name": "contract_size",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Counter currency for the instrument.",
                    "name": "counter_currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The time when the instrument was first created (milliseconds since the UNIX epoch).",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "The time when the instrument will expire (milliseconds since the UNIX epoch).",
                    "name": "expiration_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Future type (only for futures)(field is deprecated and will be removed in the future, instrument_type should be used instead).",
                    "name": "future_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Instrument ID",
                    "name": "instrument_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Unique instrument identifier",
                    "name": "instrument_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Type of the instrument. linear or reversed",
                    "name": "instrument_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Indicates if the instrument can currently be traded.",
                    "name": "is_active",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Instrument kind: \"future\", \"option\", \"spot\", \"future_combo\", \"option_combo\"",
                    "name": "kind",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Maker commission for instrument.",
                    "name": "maker_commission",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Maximal leverage for instrument (only for futures).",
                    "name": "max_leverage",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Maximal liquidation trade commission for instrument (only for futures).",
                    "name": "max_liquidation_commission",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Minimum amount for trading. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                    "name": "min_trade_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The option type (only for options).",
                    "name": "option_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Name of price index that is used for this instrument",
                    "name": "price_index",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The currency in which the instrument prices are quoted.",
                    "name": "quote_currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (not added for spot). Settlement currency for the instrument.",
                    "name": "settlement_currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (not added for spot). The settlement period.",
                    "name": "settlement_period",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The strike value (only for options).",
                    "name": "strike",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Taker commission for instrument.",
                    "name": "taker_commission",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Specifies minimal price change and, as follows, the number of decimal places for instrument prices.",
                    "name": "tick_size",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "",
                    "name": "tick_size_steps",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "public_get_instruments_response_tick_size_steps"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_instruments_response_result"
        }
    },
    {
        "comment": "Retrieves historical settlement, delivery and bankruptcy events coming from all instruments within a given currency.",
        "endpoint": {
            "name": "public_get_last_settlements_by_currency",
            "path": "/public/get_last_settlements_by_currency",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    },
                    {
                        "items": [
                            "bankruptcy",
                            "settlement",
                            "delivery"
                        ],
                        "name": "type"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Settlement type",
                        "name": "type",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "type"
                        }
                    },
                    {
                        "comment": "Number of requested items, default - 20, maximum - 1000",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Continuation token for pagination",
                        "name": "continuation",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The latest timestamp to return result from (milliseconds since the UNIX epoch)",
                        "name": "search_start_timestamp",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_last_settlements_by_currency_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_last_settlements_by_currency_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_last_settlements_by_currency_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_last_settlements_by_currency_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_last_settlements_by_currency_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Continuation token for pagination.",
                            "name": "continuation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "settlements",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_last_settlements_by_currency_response_settlement"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_last_settlements_by_currency_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "funded amount (bankruptcy only)",
                            "name": "funded",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "funding (in base currency ; settlement for perpetual product only)",
                            "name": "funding",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "underlying index price at time of event (in quote currency; settlement and delivery only)",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "instrument name (settlement and delivery only)",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "mark price for at the settlement time (in quote currency; settlement and delivery only)",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "position size (in quote currency; settlement and delivery only)",
                            "name": "position",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "profit and loss (in base currency; settlement and delivery only)",
                            "name": "profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "value of session bankruptcy (in base currency; bankruptcy only)",
                            "name": "session_bankruptcy",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "total value of session profit and losses (in base currency)",
                            "name": "session_profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "total amount of paid taxes/fees (in base currency; bankruptcy only)",
                            "name": "session_tax",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "rate of paid taxes/fees (in base currency; bankruptcy only)",
                            "name": "session_tax_rate",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "the amount of the socialized losses (in base currency; bankruptcy only)",
                            "name": "socialized",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The type of settlement. settlement, delivery or bankruptcy.",
                            "name": "type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_last_settlements_by_currency_response_settlement"
                }
            ]
        },
        "name": "public_get_last_settlements_by_currency",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Continuation token for pagination.",
                    "name": "continuation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "",
                    "name": "settlements",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "public_get_last_settlements_by_currency_response_settlement"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_last_settlements_by_currency_response_result"
        }
    },
    {
        "comment": "Retrieves historical public settlement, delivery and bankruptcy events filtered by instrument name.",
        "endpoint": {
            "name": "public_get_last_settlements_by_instrument",
            "path": "/public/get_last_settlements_by_instrument",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "bankruptcy",
                            "settlement",
                            "delivery"
                        ],
                        "name": "type"
                    }
                ],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Settlement type",
                        "name": "type",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "type"
                        }
                    },
                    {
                        "comment": "Number of requested items, default - 20, maximum - 1000",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Continuation token for pagination",
                        "name": "continuation",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The latest timestamp to return result from (milliseconds since the UNIX epoch)",
                        "name": "search_start_timestamp",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_last_settlements_by_instrument_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_last_settlements_by_instrument_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_last_settlements_by_instrument_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_last_settlements_by_instrument_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_last_settlements_by_instrument_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Continuation token for pagination.",
                            "name": "continuation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "settlements",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_last_settlements_by_instrument_response_settlement"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_last_settlements_by_instrument_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "funded amount (bankruptcy only)",
                            "name": "funded",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "funding (in base currency ; settlement for perpetual product only)",
                            "name": "funding",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "underlying index price at time of event (in quote currency; settlement and delivery only)",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "instrument name (settlement and delivery only)",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "mark price for at the settlement time (in quote currency; settlement and delivery only)",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "position size (in quote currency; settlement and delivery only)",
                            "name": "position",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "profit and loss (in base currency; settlement and delivery only)",
                            "name": "profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "value of session bankruptcy (in base currency; bankruptcy only)",
                            "name": "session_bankruptcy",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "total value of session profit and losses (in base currency)",
                            "name": "session_profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "total amount of paid taxes/fees (in base currency; bankruptcy only)",
                            "name": "session_tax",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "rate of paid taxes/fees (in base currency; bankruptcy only)",
                            "name": "session_tax_rate",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "the amount of the socialized losses (in base currency; bankruptcy only)",
                            "name": "socialized",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The type of settlement. settlement, delivery or bankruptcy.",
                            "name": "type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_last_settlements_by_instrument_response_settlement"
                }
            ]
        },
        "name": "public_get_last_settlements_by_instrument",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Continuation token for pagination.",
                    "name": "continuation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "",
                    "name": "settlements",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "public_get_last_settlements_by_instrument_response_settlement"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_last_settlements_by_instrument_response_result"
        }
    },
    {
        "comment": "Retrieve the latest trades that have occurred for instruments in a specific currency symbol.",
        "endpoint": {
            "name": "public_get_last_trades_by_currency",
            "path": "/public/get_last_trades_by_currency",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    },
                    {
                        "items": [
                            "any",
                            "future",
                            "option_combo",
                            "future_combo",
                            "option",
                            "combo",
                            "spot"
                        ],
                        "name": "kind"
                    },
                    {
                        "items": [
                            "desc",
                            "default",
                            "asc"
                        ],
                        "name": "sorting"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Instrument kind, \"combo\" for any combo or \"any\" for all. If not provided instruments of all kinds are considered",
                        "name": "kind",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "kind"
                        }
                    },
                    {
                        "comment": "The ID of the first trade to be returned. Number for BTC trades, or hyphen name in ex. \"ETH-15\" # \"ETH_USDC-16\"",
                        "name": "start_id",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The ID of the last trade to be returned. Number for BTC trades, or hyphen name in ex. \"ETH-15\" # \"ETH_USDC-16\"",
                        "name": "end_id",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The earliest timestamp to return result from (milliseconds since the UNIX epoch). When param is provided trades are returned from the earliest",
                        "name": "start_timestamp",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The most recent timestamp to return result from (milliseconds since the UNIX epoch). Only one of params: start_timestamp, end_timestamp is truly required",
                        "name": "end_timestamp",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Number of requested items, default - 10, maximum - 1000",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Direction of results sorting (default value means no sorting, results will be returned in order in which they left the database)",
                        "name": "sorting",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "sorting"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_last_trades_by_currency_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_last_trades_by_currency_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_last_trades_by_currency_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_last_trades_by_currency_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_last_trades_by_currency_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "has_more",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "",
                            "name": "trades",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_last_trades_by_currency_response_trade"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_last_trades_by_currency_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ - when trade was part of the Block RFQ",
                            "name": "block_rfq_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Block trade id - when trade was part of a block trade",
                            "name": "block_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block trade leg count - when trade was part of a block trade",
                            "name": "block_trade_leg_count",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Optional field containing combo instrument name if the trade is a combo trade",
                            "name": "combo_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional field containing combo trade identifier if the trade is a combo trade",
                            "name": "combo_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trade size in contract units (optional, may be absent in historical trades)",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Index Price at the moment of trade",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Option implied volatility for the price (Option only)",
                            "name": "iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field (only for trades caused by liquidation): \"M\" when maker side of trade was under liquidation, \"T\" when taker side was under liquidation, \"MT\" when both sides of trade were under liquidation",
                            "name": "liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Mark Price at the moment of trade",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Direction of the \"tick\" (0 = Plus Tick, 1 = Zero-Plus Tick, 2 = Minus Tick, 3 = Zero-Minus Tick).",
                            "name": "tick_direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp of the trade (milliseconds since the UNIX epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Unique (per currency) trade identifier",
                            "name": "trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The sequence number of the trade within instrument",
                            "name": "trade_seq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_last_trades_by_currency_response_trade"
                }
            ]
        },
        "name": "public_get_last_trades_by_currency",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "has_more",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "",
                    "name": "trades",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "public_get_last_trades_by_currency_response_trade"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_last_trades_by_currency_response_result"
        }
    },
    {
        "comment": "Retrieve the latest trades that have occurred for instruments in a specific currency symbol and within a given time range.",
        "endpoint": {
            "name": "public_get_last_trades_by_currency_and_time",
            "path": "/public/get_last_trades_by_currency_and_time",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    },
                    {
                        "items": [
                            "any",
                            "future",
                            "option_combo",
                            "future_combo",
                            "option",
                            "combo",
                            "spot"
                        ],
                        "name": "kind"
                    },
                    {
                        "items": [
                            "desc",
                            "default",
                            "asc"
                        ],
                        "name": "sorting"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Instrument kind, \"combo\" for any combo or \"any\" for all. If not provided instruments of all kinds are considered",
                        "name": "kind",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "kind"
                        }
                    },
                    {
                        "comment": "The earliest timestamp to return result from (milliseconds since the UNIX epoch). When param is provided trades are returned from the earliest",
                        "name": "start_timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The most recent timestamp to return result from (milliseconds since the UNIX epoch). Only one of params: start_timestamp, end_timestamp is truly required",
                        "name": "end_timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Number of requested items, default - 10, maximum - 1000",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Direction of results sorting (default value means no sorting, results will be returned in order in which they left the database)",
                        "name": "sorting",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "sorting"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_last_trades_by_currency_and_time_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_last_trades_by_currency_and_time_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_last_trades_by_currency_and_time_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_last_trades_by_currency_and_time_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_last_trades_by_currency_and_time_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "has_more",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "",
                            "name": "trades",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_last_trades_by_currency_and_time_response_trade"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_last_trades_by_currency_and_time_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ - when trade was part of the Block RFQ",
                            "name": "block_rfq_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Block trade id - when trade was part of a block trade",
                            "name": "block_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block trade leg count - when trade was part of a block trade",
                            "name": "block_trade_leg_count",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Optional field containing combo instrument name if the trade is a combo trade",
                            "name": "combo_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional field containing combo trade identifier if the trade is a combo trade",
                            "name": "combo_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trade size in contract units (optional, may be absent in historical trades)",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Index Price at the moment of trade",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Option implied volatility for the price (Option only)",
                            "name": "iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field (only for trades caused by liquidation): \"M\" when maker side of trade was under liquidation, \"T\" when taker side was under liquidation, \"MT\" when both sides of trade were under liquidation",
                            "name": "liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Mark Price at the moment of trade",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Direction of the \"tick\" (0 = Plus Tick, 1 = Zero-Plus Tick, 2 = Minus Tick, 3 = Zero-Minus Tick).",
                            "name": "tick_direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp of the trade (milliseconds since the UNIX epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Unique (per currency) trade identifier",
                            "name": "trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The sequence number of the trade within instrument",
                            "name": "trade_seq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_last_trades_by_currency_and_time_response_trade"
                }
            ]
        },
        "name": "public_get_last_trades_by_currency_and_time",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "has_more",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "",
                    "name": "trades",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "public_get_last_trades_by_currency_and_time_response_trade"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_last_trades_by_currency_and_time_response_result"
        }
    },
    {
        "comment": "Retrieve the latest trades that have occurred for a specific instrument.",
        "endpoint": {
            "name": "public_get_last_trades_by_instrument",
            "path": "/public/get_last_trades_by_instrument",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "desc",
                            "default",
                            "asc"
                        ],
                        "name": "sorting"
                    }
                ],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The sequence number of the first trade to be returned",
                        "name": "start_seq",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The sequence number of the last trade to be returned",
                        "name": "end_seq",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The earliest timestamp to return result from (milliseconds since the UNIX epoch). When param is provided trades are returned from the earliest",
                        "name": "start_timestamp",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The most recent timestamp to return result from (milliseconds since the UNIX epoch). Only one of params: start_timestamp, end_timestamp is truly required",
                        "name": "end_timestamp",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Number of requested items, default - 10, maximum - 1000",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Direction of results sorting (default value means no sorting, results will be returned in order in which they left the database)",
                        "name": "sorting",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "sorting"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_last_trades_by_instrument_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_last_trades_by_instrument_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_last_trades_by_instrument_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_last_trades_by_instrument_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_last_trades_by_instrument_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "has_more",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "",
                            "name": "trades",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_last_trades_by_instrument_response_trade"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_last_trades_by_instrument_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ - when trade was part of the Block RFQ",
                            "name": "block_rfq_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Block trade id - when trade was part of a block trade",
                            "name": "block_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block trade leg count - when trade was part of a block trade",
                            "name": "block_trade_leg_count",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Optional field containing combo instrument name if the trade is a combo trade",
                            "name": "combo_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional field containing combo trade identifier if the trade is a combo trade",
                            "name": "combo_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trade size in contract units (optional, may be absent in historical trades)",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Index Price at the moment of trade",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Option implied volatility for the price (Option only)",
                            "name": "iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field (only for trades caused by liquidation): \"M\" when maker side of trade was under liquidation, \"T\" when taker side was under liquidation, \"MT\" when both sides of trade were under liquidation",
                            "name": "liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Mark Price at the moment of trade",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Direction of the \"tick\" (0 = Plus Tick, 1 = Zero-Plus Tick, 2 = Minus Tick, 3 = Zero-Minus Tick).",
                            "name": "tick_direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp of the trade (milliseconds since the UNIX epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Unique (per currency) trade identifier",
                            "name": "trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The sequence number of the trade within instrument",
                            "name": "trade_seq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_last_trades_by_instrument_response_trade"
                }
            ]
        },
        "name": "public_get_last_trades_by_instrument",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "has_more",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "",
                    "name": "trades",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "public_get_last_trades_by_instrument_response_trade"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_last_trades_by_instrument_response_result"
        }
    },
    {
        "comment": "Retrieve the latest trades that have occurred for a specific instrument and within a given time range.",
        "endpoint": {
            "name": "public_get_last_trades_by_instrument_and_time",
            "path": "/public/get_last_trades_by_instrument_and_time",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "desc",
                            "default",
                            "asc"
                        ],
                        "name": "sorting"
                    }
                ],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The earliest timestamp to return result from (milliseconds since the UNIX epoch). When param is provided trades are returned from the earliest",
                        "name": "start_timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The most recent timestamp to return result from (milliseconds since the UNIX epoch). Only one of params: start_timestamp, end_timestamp is truly required",
                        "name": "end_timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Number of requested items, default - 10, maximum - 1000",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Direction of results sorting (default value means no sorting, results will be returned in order in which they left the database)",
                        "name": "sorting",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "sorting"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_last_trades_by_instrument_and_time_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_last_trades_by_instrument_and_time_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_last_trades_by_instrument_and_time_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_last_trades_by_instrument_and_time_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_last_trades_by_instrument_and_time_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "has_more",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "",
                            "name": "trades",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_last_trades_by_instrument_and_time_response_trade"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_last_trades_by_instrument_and_time_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ - when trade was part of the Block RFQ",
                            "name": "block_rfq_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Block trade id - when trade was part of a block trade",
                            "name": "block_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block trade leg count - when trade was part of a block trade",
                            "name": "block_trade_leg_count",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Optional field containing combo instrument name if the trade is a combo trade",
                            "name": "combo_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional field containing combo trade identifier if the trade is a combo trade",
                            "name": "combo_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trade size in contract units (optional, may be absent in historical trades)",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Index Price at the moment of trade",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Option implied volatility for the price (Option only)",
                            "name": "iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field (only for trades caused by liquidation): \"M\" when maker side of trade was under liquidation, \"T\" when taker side was under liquidation, \"MT\" when both sides of trade were under liquidation",
                            "name": "liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Mark Price at the moment of trade",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Direction of the \"tick\" (0 = Plus Tick, 1 = Zero-Plus Tick, 2 = Minus Tick, 3 = Zero-Minus Tick).",
                            "name": "tick_direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp of the trade (milliseconds since the UNIX epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Unique (per currency) trade identifier",
                            "name": "trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The sequence number of the trade within instrument",
                            "name": "trade_seq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_last_trades_by_instrument_and_time_response_trade"
                }
            ]
        },
        "name": "public_get_last_trades_by_instrument_and_time",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "has_more",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "",
                    "name": "trades",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "public_get_last_trades_by_instrument_and_time_response_trade"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_last_trades_by_instrument_and_time_response_result"
        }
    },
    {
        "comment": "Public request for 5min history of markprice values for the instrument. For now the markprice history is available only for a subset of options which take part in the volatility index calculations. All other instruments, futures and perpetuals will return an empty list.",
        "endpoint": {
            "name": "public_get_mark_price_history",
            "path": "/public/get_mark_price_history",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The earliest timestamp to return result from (milliseconds since the UNIX epoch)",
                        "name": "start_timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The most recent timestamp to return result from (milliseconds since the UNIX epoch)",
                        "name": "end_timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_mark_price_history_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Markprice history values as an array of arrays with 2 values each. The inner values correspond to the timestamp in ms and the markprice itself.",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_mark_price_history_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Markprice history values as an array of arrays with 2 values each. The inner values correspond to the timestamp in ms and the markprice itself.",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_mark_price_history_response"
                }
            ]
        },
        "name": "public_get_mark_price_history",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Retrieves the order book, along with other market values for a given instrument.",
        "endpoint": {
            "name": "public_get_order_book",
            "path": "/public/get_order_book",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "5",
                            "1",
                            "50",
                            "20",
                            "1000",
                            "10",
                            "10000",
                            "100"
                        ],
                        "name": "depth"
                    }
                ],
                "fields": [
                    {
                        "comment": "The instrument name for which to retrieve the order book, see public/get_instruments to obtain instrument names.",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The number of entries to return for bids and asks, maximum - 10000.",
                        "name": "depth",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "depth"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_order_book_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_order_book_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_order_book_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_order_book_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_order_book_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "(Only for option) implied volatility for best ask",
                            "name": "ask_iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "List of asks",
                            "name": "asks",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "float[]"
                            }
                        },
                        {
                            "comment": "It represents the requested order size of all best asks",
                            "name": "best_ask_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The current best ask price, null if there aren't any asks",
                            "name": "best_ask_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "It represents the requested order size of all best bids",
                            "name": "best_bid_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The current best bid price, null if there aren't any bids",
                            "name": "best_bid_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "(Only for option) implied volatility for best bid",
                            "name": "bid_iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "List of bids",
                            "name": "bids",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "float[]"
                            }
                        },
                        {
                            "comment": "Current funding (perpetual only)",
                            "name": "current_funding",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The settlement price for the instrument. Only when state = closed",
                            "name": "delivery_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Funding 8h (perpetual only)",
                            "name": "funding_8h",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Only for options",
                            "name": "greeks",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_order_book_response_greeks"
                            }
                        },
                        {
                            "comment": "Current index price",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Interest rate used in implied volatility calculations (options only)",
                            "name": "interest_rate",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The price for the last trade",
                            "name": "last_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "(Only for option) implied volatility for mark price",
                            "name": "mark_iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The mark price for the instrument",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The maximum price for the future. Any buy orders you submit higher than this price, will be clamped to this maximum.",
                            "name": "max_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The minimum price for the future. Any sell orders you submit lower than this price will be clamped to this minimum.",
                            "name": "min_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The total amount of outstanding contracts in the corresponding amount units. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "open_interest",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). The settlement price for the instrument. Only when state = open",
                            "name": "settlement_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The state of the order book. Possible values are open and closed.",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "stats",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_order_book_response_stats"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Name of the underlying future, or index_price (options only)",
                            "name": "underlying_index",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Underlying price for implied volatility calculations (options only)",
                            "name": "underlying_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_order_book_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "(Only for option) The delta value for the option",
                            "name": "delta",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "(Only for option) The gamma value for the option",
                            "name": "gamma",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "(Only for option) The rho value for the option",
                            "name": "rho",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "(Only for option) The theta value for the option",
                            "name": "theta",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "(Only for option) The vega value for the option",
                            "name": "vega",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_order_book_response_greeks"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Highest price during 24h",
                            "name": "high",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Lowest price during 24h",
                            "name": "low",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "24-hour price change expressed as a percentage, null if there weren't any trades",
                            "name": "price_change",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Volume during last 24h in base currency",
                            "name": "volume",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Volume in usd (futures only)",
                            "name": "volume_usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_order_book_response_stats"
                }
            ]
        },
        "name": "public_get_order_book",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "(Only for option) implied volatility for best ask",
                    "name": "ask_iv",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "List of asks",
                    "name": "asks",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "float[]"
                    }
                },
                {
                    "comment": "It represents the requested order size of all best asks",
                    "name": "best_ask_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The current best ask price, null if there aren't any asks",
                    "name": "best_ask_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "It represents the requested order size of all best bids",
                    "name": "best_bid_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The current best bid price, null if there aren't any bids",
                    "name": "best_bid_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "(Only for option) implied volatility for best bid",
                    "name": "bid_iv",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "List of bids",
                    "name": "bids",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "float[]"
                    }
                },
                {
                    "comment": "Current funding (perpetual only)",
                    "name": "current_funding",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The settlement price for the instrument. Only when state = closed",
                    "name": "delivery_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Funding 8h (perpetual only)",
                    "name": "funding_8h",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Only for options",
                    "name": "greeks",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "public_get_order_book_response_greeks"
                    }
                },
                {
                    "comment": "Current index price",
                    "name": "index_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Unique instrument identifier",
                    "name": "instrument_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Interest rate used in implied volatility calculations (options only)",
                    "name": "interest_rate",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The price for the last trade",
                    "name": "last_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "(Only for option) implied volatility for mark price",
                    "name": "mark_iv",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The mark price for the instrument",
                    "name": "mark_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The maximum price for the future. Any buy orders you submit higher than this price, will be clamped to this maximum.",
                    "name": "max_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The minimum price for the future. Any sell orders you submit lower than this price will be clamped to this minimum.",
                    "name": "min_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The total amount of outstanding contracts in the corresponding amount units. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                    "name": "open_interest",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Optional (not added for spot). The settlement price for the instrument. Only when state = open",
                    "name": "settlement_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The state of the order book. Possible values are open and closed.",
                    "name": "state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "",
                    "name": "stats",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "public_get_order_book_response_stats"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Name of the underlying future, or index_price (options only)",
                    "name": "underlying_index",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Underlying price for implied volatility calculations (options only)",
                    "name": "underlying_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_order_book_response_result"
        }
    },
    {
        "comment": "Retrieves the order book, along with other market values for a given instrument ID.",
        "endpoint": {
            "name": "public_get_order_book_by_instrument_id",
            "path": "/public/get_order_book_by_instrument_id",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "5",
                            "1",
                            "50",
                            "20",
                            "1000",
                            "10",
                            "10000",
                            "100"
                        ],
                        "name": "depth"
                    }
                ],
                "fields": [
                    {
                        "comment": "The instrument ID for which to retrieve the order book, see public/get_instruments to obtain instrument IDs.",
                        "name": "instrument_id",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The number of entries to return for bids and asks, maximum - 10000.",
                        "name": "depth",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "depth"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_order_book_by_instrument_id_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_order_book_by_instrument_id_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_order_book_by_instrument_id_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_order_book_by_instrument_id_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_order_book_by_instrument_id_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "(Only for option) implied volatility for best ask",
                            "name": "ask_iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "List of asks",
                            "name": "asks",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "float[]"
                            }
                        },
                        {
                            "comment": "It represents the requested order size of all best asks",
                            "name": "best_ask_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The current best ask price, null if there aren't any asks",
                            "name": "best_ask_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "It represents the requested order size of all best bids",
                            "name": "best_bid_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The current best bid price, null if there aren't any bids",
                            "name": "best_bid_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "(Only for option) implied volatility for best bid",
                            "name": "bid_iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "List of bids",
                            "name": "bids",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "float[]"
                            }
                        },
                        {
                            "comment": "Current funding (perpetual only)",
                            "name": "current_funding",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The settlement price for the instrument. Only when state = closed",
                            "name": "delivery_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Funding 8h (perpetual only)",
                            "name": "funding_8h",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Only for options",
                            "name": "greeks",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_order_book_by_instrument_id_response_greeks"
                            }
                        },
                        {
                            "comment": "Current index price",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Interest rate used in implied volatility calculations (options only)",
                            "name": "interest_rate",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The price for the last trade",
                            "name": "last_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "(Only for option) implied volatility for mark price",
                            "name": "mark_iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The mark price for the instrument",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The maximum price for the future. Any buy orders you submit higher than this price, will be clamped to this maximum.",
                            "name": "max_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The minimum price for the future. Any sell orders you submit lower than this price will be clamped to this minimum.",
                            "name": "min_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The total amount of outstanding contracts in the corresponding amount units. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "open_interest",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). The settlement price for the instrument. Only when state = open",
                            "name": "settlement_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The state of the order book. Possible values are open and closed.",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "stats",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_order_book_by_instrument_id_response_stats"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Name of the underlying future, or index_price (options only)",
                            "name": "underlying_index",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Underlying price for implied volatility calculations (options only)",
                            "name": "underlying_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_order_book_by_instrument_id_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "(Only for option) The delta value for the option",
                            "name": "delta",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "(Only for option) The gamma value for the option",
                            "name": "gamma",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "(Only for option) The rho value for the option",
                            "name": "rho",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "(Only for option) The theta value for the option",
                            "name": "theta",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "(Only for option) The vega value for the option",
                            "name": "vega",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_order_book_by_instrument_id_response_greeks"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Highest price during 24h",
                            "name": "high",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Lowest price during 24h",
                            "name": "low",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "24-hour price change expressed as a percentage, null if there weren't any trades",
                            "name": "price_change",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Volume during last 24h in base currency",
                            "name": "volume",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Volume in usd (futures only)",
                            "name": "volume_usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_order_book_by_instrument_id_response_stats"
                }
            ]
        },
        "name": "public_get_order_book_by_instrument_id",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "(Only for option) implied volatility for best ask",
                    "name": "ask_iv",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "List of asks",
                    "name": "asks",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "float[]"
                    }
                },
                {
                    "comment": "It represents the requested order size of all best asks",
                    "name": "best_ask_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The current best ask price, null if there aren't any asks",
                    "name": "best_ask_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "It represents the requested order size of all best bids",
                    "name": "best_bid_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The current best bid price, null if there aren't any bids",
                    "name": "best_bid_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "(Only for option) implied volatility for best bid",
                    "name": "bid_iv",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "List of bids",
                    "name": "bids",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "float[]"
                    }
                },
                {
                    "comment": "Current funding (perpetual only)",
                    "name": "current_funding",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The settlement price for the instrument. Only when state = closed",
                    "name": "delivery_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Funding 8h (perpetual only)",
                    "name": "funding_8h",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Only for options",
                    "name": "greeks",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "public_get_order_book_by_instrument_id_response_greeks"
                    }
                },
                {
                    "comment": "Current index price",
                    "name": "index_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Unique instrument identifier",
                    "name": "instrument_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Interest rate used in implied volatility calculations (options only)",
                    "name": "interest_rate",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The price for the last trade",
                    "name": "last_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "(Only for option) implied volatility for mark price",
                    "name": "mark_iv",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The mark price for the instrument",
                    "name": "mark_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The maximum price for the future. Any buy orders you submit higher than this price, will be clamped to this maximum.",
                    "name": "max_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The minimum price for the future. Any sell orders you submit lower than this price will be clamped to this minimum.",
                    "name": "min_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The total amount of outstanding contracts in the corresponding amount units. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                    "name": "open_interest",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Optional (not added for spot). The settlement price for the instrument. Only when state = open",
                    "name": "settlement_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The state of the order book. Possible values are open and closed.",
                    "name": "state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "",
                    "name": "stats",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "public_get_order_book_by_instrument_id_response_stats"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Name of the underlying future, or index_price (options only)",
                    "name": "underlying_index",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Underlying price for implied volatility calculations (options only)",
                    "name": "underlying_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_order_book_by_instrument_id_response_result"
        }
    },
    {
        "comment": "Retrieves the identifiers of all supported Price Indexes",
        "endpoint": {
            "name": "public_get_supported_index_names",
            "path": "/public/get_supported_index_names",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "all",
                            "spot",
                            "derivative"
                        ],
                        "name": "type"
                    }
                ],
                "fields": [
                    {
                        "comment": "Type of a cryptocurrency price index",
                        "name": "type",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "type"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_supported_index_names_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_supported_index_names_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_supported_index_names_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_supported_index_names_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_supported_index_names_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Whether future combo creation is enabled for this index (only present when extended=true)",
                            "name": "future_combo_creation_enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Index name",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Whether option combo creation is enabled for this index (only present when extended=true)",
                            "name": "option_combo_creation_enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_supported_index_names_response_result"
                }
            ]
        },
        "name": "public_get_supported_index_names",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Whether future combo creation is enabled for this index (only present when extended=true)",
                    "name": "future_combo_creation_enabled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Index name",
                    "name": "name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Whether option combo creation is enabled for this index (only present when extended=true)",
                    "name": "option_combo_creation_enabled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_supported_index_names_response_result"
        }
    },
    {
        "comment": "Retrieves aggregated 24h trade volumes for different instrument types and currencies.",
        "endpoint": {
            "name": "public_get_trade_volumes",
            "path": "/public/get_trade_volumes",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Request for extended statistics. Including also 7 and 30 days volumes (default false)",
                        "name": "extended",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_trade_volumes_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_trade_volumes_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_trade_volumes_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_trade_volumes_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_trade_volumes_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Total 24h trade volume for call options.",
                            "name": "calls_volume",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Total 30d trade volume for call options.",
                            "name": "calls_volume_30d",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Total 7d trade volume for call options.",
                            "name": "calls_volume_7d",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Total 24h trade volume for futures.",
                            "name": "futures_volume",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Total 30d trade volume for futures.",
                            "name": "futures_volume_30d",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Total 7d trade volume for futures.",
                            "name": "futures_volume_7d",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Total 24h trade volume for put options.",
                            "name": "puts_volume",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Total 30d trade volume for put options.",
                            "name": "puts_volume_30d",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Total 7d trade volume for put options.",
                            "name": "puts_volume_7d",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Total 24h trade for spot.",
                            "name": "spot_volume",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Total 30d trade for spot.",
                            "name": "spot_volume_30d",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Total 7d trade for spot.",
                            "name": "spot_volume_7d",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_trade_volumes_response_result"
                }
            ]
        },
        "name": "public_get_trade_volumes",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Total 24h trade volume for call options.",
                    "name": "calls_volume",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Total 30d trade volume for call options.",
                    "name": "calls_volume_30d",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Total 7d trade volume for call options.",
                    "name": "calls_volume_7d",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                    "name": "currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Total 24h trade volume for futures.",
                    "name": "futures_volume",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Total 30d trade volume for futures.",
                    "name": "futures_volume_30d",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Total 7d trade volume for futures.",
                    "name": "futures_volume_7d",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Total 24h trade volume for put options.",
                    "name": "puts_volume",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Total 30d trade volume for put options.",
                    "name": "puts_volume_30d",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Total 7d trade volume for put options.",
                    "name": "puts_volume_7d",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Total 24h trade for spot.",
                    "name": "spot_volume",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Total 30d trade for spot.",
                    "name": "spot_volume_30d",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Total 7d trade for spot.",
                    "name": "spot_volume_7d",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_trade_volumes_response_result"
        }
    },
    {
        "comment": "Publicly available market data used to generate a TradingView candle chart.",
        "endpoint": {
            "name": "public_get_tradingview_chart_data",
            "path": "/public/get_tradingview_chart_data",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "30",
                            "5",
                            "360",
                            "1D",
                            "1",
                            "3",
                            "15",
                            "60",
                            "10",
                            "180",
                            "720",
                            "120"
                        ],
                        "name": "resolution"
                    }
                ],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The earliest timestamp to return result from (milliseconds since the UNIX epoch)",
                        "name": "start_timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The most recent timestamp to return result from (milliseconds since the UNIX epoch)",
                        "name": "end_timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Chart bars resolution given in full minutes or keyword 1D (only some specific resolutions are supported)",
                        "name": "resolution",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "resolution"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_tradingview_chart_data_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_tradingview_chart_data_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_tradingview_chart_data_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_tradingview_chart_data_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_tradingview_chart_data_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "List of prices at close (one per candle)",
                            "name": "close",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "List of cost bars (volume in quote currency, one per candle)",
                            "name": "cost",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "List of highest price levels (one per candle)",
                            "name": "high",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "List of lowest price levels (one per candle)",
                            "name": "low",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "List of prices at open (one per candle)",
                            "name": "open",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Status of the query: ok or no_data",
                            "name": "status",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Values of the time axis given in milliseconds since UNIX epoch",
                            "name": "ticks",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "List of volume bars (in base currency, one per candle)",
                            "name": "volume",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_tradingview_chart_data_response_result"
                }
            ]
        },
        "name": "public_get_tradingview_chart_data",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "List of prices at close (one per candle)",
                    "name": "close",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "List of cost bars (volume in quote currency, one per candle)",
                    "name": "cost",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "List of highest price levels (one per candle)",
                    "name": "high",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "List of lowest price levels (one per candle)",
                    "name": "low",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "List of prices at open (one per candle)",
                    "name": "open",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Status of the query: ok or no_data",
                    "name": "status",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Values of the time axis given in milliseconds since UNIX epoch",
                    "name": "ticks",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "List of volume bars (in base currency, one per candle)",
                    "name": "volume",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_tradingview_chart_data_response_result"
        }
    },
    {
        "comment": "Public market data request for volatility index candles.",
        "endpoint": {
            "name": "public_get_volatility_index_data",
            "path": "/public/get_volatility_index_data",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    },
                    {
                        "items": [
                            "1D",
                            "1",
                            "60",
                            "43200",
                            "3600"
                        ],
                        "name": "resolution"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "The earliest timestamp to return result from (milliseconds since the UNIX epoch)",
                        "name": "start_timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The most recent timestamp to return result from (milliseconds since the UNIX epoch)",
                        "name": "end_timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Time resolution given in full seconds or keyword 1D (only some specific resolutions are supported)",
                        "name": "resolution",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "resolution"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_volatility_index_data_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Volatility index candles.",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_volatility_index_data_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_volatility_index_data_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Volatility index candles.",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_volatility_index_data_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_volatility_index_data_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Continuation - to be used as the end_timestamp parameter on the next request. NULL when no continuation.",
                            "name": "continuation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Candles as an array of arrays with 5 values each. The inner values correspond to the timestamp in ms, open, high, low, and close values of the volatility index correspondingly.",
                            "name": "data",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_volatility_index_data_response_result"
                }
            ]
        },
        "name": "public_get_volatility_index_data",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Continuation - to be used as the end_timestamp parameter on the next request. NULL when no continuation.",
                    "name": "continuation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Candles as an array of arrays with 5 values each. The inner values correspond to the timestamp in ms, open, high, low, and close values of the volatility index correspondingly.",
                    "name": "data",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_volatility_index_data_response_result"
        }
    },
    {
        "comment": "Get ticker for an instrument.",
        "endpoint": {
            "name": "public_ticker",
            "path": "/public/ticker",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_ticker_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_ticker_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_ticker_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_ticker_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_ticker_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "(Only for option) implied volatility for best ask",
                            "name": "ask_iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "It represents the requested order size of all best asks",
                            "name": "best_ask_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The current best ask price, null if there aren't any asks",
                            "name": "best_ask_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "It represents the requested order size of all best bids",
                            "name": "best_bid_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The current best bid price, null if there aren't any bids",
                            "name": "best_bid_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "(Only for option) implied volatility for best bid",
                            "name": "bid_iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Current funding (perpetual only)",
                            "name": "current_funding",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The settlement price for the instrument. Only when state = closed",
                            "name": "delivery_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Estimated delivery price for the market. For more details, see Contract Specification > General Documentation > Expiration Price",
                            "name": "estimated_delivery_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Funding 8h (perpetual only)",
                            "name": "funding_8h",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Only for options",
                            "name": "greeks",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_ticker_response_greeks"
                            }
                        },
                        {
                            "comment": "Current index price",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Interest rate used in implied volatility calculations (options only)",
                            "name": "interest_rate",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Value used to calculate realized_funding in positions (perpetual only)",
                            "name": "interest_value",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The price for the last trade",
                            "name": "last_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "(Only for option) implied volatility for mark price",
                            "name": "mark_iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The mark price for the instrument",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The maximum price for the future. Any buy orders you submit higher than this price, will be clamped to this maximum.",
                            "name": "max_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The minimum price for the future. Any sell orders you submit lower than this price will be clamped to this minimum.",
                            "name": "min_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The total amount of outstanding contracts in the corresponding amount units. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "open_interest",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). The settlement price for the instrument. Only when state = open",
                            "name": "settlement_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The state of the order book. Possible values are open and closed.",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "stats",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_ticker_response_stats"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Name of the underlying future, or index_price (options only)",
                            "name": "underlying_index",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Underlying price for implied volatility calculations (options only)",
                            "name": "underlying_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_ticker_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "(Only for option) The delta value for the option",
                            "name": "delta",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "(Only for option) The gamma value for the option",
                            "name": "gamma",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "(Only for option) The rho value for the option",
                            "name": "rho",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "(Only for option) The theta value for the option",
                            "name": "theta",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "(Only for option) The vega value for the option",
                            "name": "vega",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_ticker_response_greeks"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Highest price during 24h",
                            "name": "high",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Lowest price during 24h",
                            "name": "low",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "24-hour price change expressed as a percentage, null if there weren't any trades",
                            "name": "price_change",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Volume during last 24h in base currency",
                            "name": "volume",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Volume in usd (futures only)",
                            "name": "volume_usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_ticker_response_stats"
                }
            ]
        },
        "name": "public_ticker",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "(Only for option) implied volatility for best ask",
                    "name": "ask_iv",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "It represents the requested order size of all best asks",
                    "name": "best_ask_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The current best ask price, null if there aren't any asks",
                    "name": "best_ask_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "It represents the requested order size of all best bids",
                    "name": "best_bid_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The current best bid price, null if there aren't any bids",
                    "name": "best_bid_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "(Only for option) implied volatility for best bid",
                    "name": "bid_iv",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Current funding (perpetual only)",
                    "name": "current_funding",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The settlement price for the instrument. Only when state = closed",
                    "name": "delivery_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Estimated delivery price for the market. For more details, see Contract Specification > General Documentation > Expiration Price",
                    "name": "estimated_delivery_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Funding 8h (perpetual only)",
                    "name": "funding_8h",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Only for options",
                    "name": "greeks",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "public_ticker_response_greeks"
                    }
                },
                {
                    "comment": "Current index price",
                    "name": "index_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Unique instrument identifier",
                    "name": "instrument_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Interest rate used in implied volatility calculations (options only)",
                    "name": "interest_rate",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Value used to calculate realized_funding in positions (perpetual only)",
                    "name": "interest_value",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The price for the last trade",
                    "name": "last_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "(Only for option) implied volatility for mark price",
                    "name": "mark_iv",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The mark price for the instrument",
                    "name": "mark_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The maximum price for the future. Any buy orders you submit higher than this price, will be clamped to this maximum.",
                    "name": "max_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The minimum price for the future. Any sell orders you submit lower than this price will be clamped to this minimum.",
                    "name": "min_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The total amount of outstanding contracts in the corresponding amount units. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                    "name": "open_interest",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Optional (not added for spot). The settlement price for the instrument. Only when state = open",
                    "name": "settlement_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The state of the order book. Possible values are open and closed.",
                    "name": "state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "",
                    "name": "stats",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "public_ticker_response_stats"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Name of the underlying future, or index_price (options only)",
                    "name": "underlying_index",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Underlying price for implied volatility calculations (options only)",
                    "name": "underlying_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_ticker_response_result"
        }
    },
    {
        "comment": "Places a buy order for an instrument.",
        "endpoint": {
            "name": "private_buy",
            "path": "/private/buy",
            "rate_limiter": "matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "market",
                            "stop_limit",
                            "market_limit",
                            "trailing_stop",
                            "take_market",
                            "limit",
                            "take_limit",
                            "stop_market"
                        ],
                        "name": "type"
                    },
                    {
                        "items": [
                            "immediate_or_cancel",
                            "fill_or_kill",
                            "good_til_day",
                            "good_til_cancelled"
                        ],
                        "name": "time_in_force"
                    },
                    {
                        "items": [
                            "mark_price",
                            "last_price",
                            "index_price"
                        ],
                        "name": "trigger"
                    },
                    {
                        "items": [
                            "usd",
                            "implv"
                        ],
                        "name": "advanced"
                    },
                    {
                        "items": [
                            "one_triggers_other",
                            "one_triggers_one_cancels_other",
                            "one_cancels_other"
                        ],
                        "name": "linked_order_type"
                    },
                    {
                        "items": [
                            "complete_fill",
                            "incremental",
                            "first_hit"
                        ],
                        "name": "trigger_fill_condition"
                    }
                ],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin. The amount is a mandatory parameter if contracts parameter is missing. If both contracts and amount parameter are passed they must match each other otherwise error is returned.",
                        "name": "amount",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "It represents the requested order size in contract units and can be passed instead of amount. The contracts is a mandatory parameter if amount parameter is missing. If both contracts and amount parameter are passed they must match each other otherwise error is returned.",
                        "name": "contracts",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "The order type, default: \"limit\"",
                        "name": "type",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "type"
                        }
                    },
                    {
                        "comment": "user defined label for the order (maximum 64 characters)",
                        "name": "label",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The order price in base currency (Only for limit and stop_limit orders) When adding an order with advanced=usd, the field price should be the option price value in USD. When adding an order with advanced=implv, the field price should be a value of implied volatility in percentages. For example, price=100, means implied volatility of 100%",
                        "name": "price",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "Specifies how long the order remains in effect. Default \"good_til_cancelled\" \"good_til_cancelled\" - unfilled order remains in order book until cancelled \"good_til_day\" - unfilled order remains in order book till the end of the trading session \"fill_or_kill\" - execute a transaction immediately and completely or not at all \"immediate_or_cancel\" - execute a transaction immediately, and any portion of the order that cannot be immediately filled is cancelled",
                        "name": "time_in_force",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "time_in_force"
                        }
                    },
                    {
                        "comment": "Initial display amount for iceberg order. Has to be at least 100 times minimum amount for instrument and ratio of hidden part vs visible part has to be less than 100 as well.",
                        "name": "display_amount",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "If true, the order is considered post-only. If the new price would cause the order to be filled immediately (as taker), the price will be changed to be just below the spread. Only valid in combination with time_in_force=\"good_til_cancelled\"",
                        "name": "post_only",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "If an order is considered post-only and this field is set to true then the order is put to the order book unmodified or the request is rejected. Only valid in combination with \"post_only\" set to true",
                        "name": "reject_post_only",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "If true, the order is considered reduce-only which is intended to only reduce a current position",
                        "name": "reduce_only",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Trigger price, required for trigger orders only (Stop-loss or Take-profit orders)",
                        "name": "trigger_price",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "The maximum deviation from the price peak beyond which the order will be triggered",
                        "name": "trigger_offset",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "Defines the trigger type. Required for \"Stop-Loss\", \"Take-Profit\" and \"Trailing\" trigger orders",
                        "name": "trigger",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "trigger"
                        }
                    },
                    {
                        "comment": "Advanced option order type. (Only for options. Advanced USD orders are not supported for linear options.)",
                        "name": "advanced",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "advanced"
                        }
                    },
                    {
                        "comment": "Order MMP flag, only for order_type 'limit'",
                        "name": "mmp",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Timestamp, when provided server will start processing request in Matching Engine only before given timestamp, in other cases timed_out error will be responded. Remember that the given timestamp should be consistent with the server's time, use /public/time method to obtain current server time.",
                        "name": "valid_until",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The type of the linked order. \"one_triggers_other\" - Execution of primary order triggers the placement of one or more secondary orders. \"one_cancels_other\" - The execution of one order in a pair automatically cancels the other, typically used to set a stop-loss and take-profit simultaneously. \"one_triggers_one_cancels_other\" - The execution of a primary order triggers two secondary orders (a stop-loss and take-profit pair), where the execution of one secondary order cancels the other.",
                        "name": "linked_order_type",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "linked_order_type"
                        }
                    },
                    {
                        "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                        "name": "trigger_fill_condition",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "trigger_fill_condition"
                        }
                    },
                    {
                        "comment": "List of trades to create or cancel when this order is filled.",
                        "name": "otoco_config",
                        "required": "false",
                        "type": {
                            "enums": [
                                {
                                    "items": [
                                        "sell",
                                        "buy"
                                    ],
                                    "name": "direction"
                                },
                                {
                                    "items": [
                                        "market",
                                        "stop_limit",
                                        "market_limit",
                                        "trailing_stop",
                                        "take_market",
                                        "limit",
                                        "take_limit",
                                        "stop_market"
                                    ],
                                    "name": "type"
                                },
                                {
                                    "items": [
                                        "immediate_or_cancel",
                                        "fill_or_kill",
                                        "good_til_day",
                                        "good_til_cancelled"
                                    ],
                                    "name": "time_in_force"
                                },
                                {
                                    "items": [
                                        "mark_price",
                                        "last_price",
                                        "index_price"
                                    ],
                                    "name": "trigger"
                                }
                            ],
                            "fields": [
                                {
                                    "comment": "It represents the requested trade size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                                    "name": "amount",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "number"
                                    }
                                },
                                {
                                    "comment": "Direction of trade from the maker perspective",
                                    "name": "direction",
                                    "required": "true",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "direction"
                                    }
                                },
                                {
                                    "comment": "The order type, default: \"limit\"",
                                    "name": "type",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "type"
                                    }
                                },
                                {
                                    "comment": "user defined label for the order (maximum 64 characters)",
                                    "name": "label",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "string"
                                    }
                                },
                                {
                                    "comment": "The order price in base currency (Only for limit and stop_limit orders) When adding an order with advanced=usd, the field price should be the option price value in USD. When adding an order with advanced=implv, the field price should be a value of implied volatility in percentages. For example, price=100, means implied volatility of 100%",
                                    "name": "price",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "number"
                                    }
                                },
                                {
                                    "comment": "If true, the order is considered reduce-only which is intended to only reduce a current position",
                                    "name": "reduce_only",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "boolean"
                                    }
                                },
                                {
                                    "comment": "Specifies how long the order remains in effect. Default \"good_til_cancelled\" \"good_til_cancelled\" - unfilled order remains in order book until cancelled \"good_til_day\" - unfilled order remains in order book till the end of the trading session \"fill_or_kill\" - execute a transaction immediately and completely or not at all \"immediate_or_cancel\" - execute a transaction immediately, and any portion of the order that cannot be immediately filled is cancelled",
                                    "name": "time_in_force",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "time_in_force"
                                    }
                                },
                                {
                                    "comment": "If true, the order is considered post-only. If the new price would cause the order to be filled immediately (as taker), the price will be changed to be just below or above the spread (according to the direction of the order). Only valid in combination with time_in_force=\"good_til_cancelled\"",
                                    "name": "post_only",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "boolean"
                                    }
                                },
                                {
                                    "comment": "If an order is considered post-only and this field is set to true then the order is put to the order book unmodified or the request is rejected. Only valid in combination with \"post_only\" set to true",
                                    "name": "reject_post_only",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "boolean"
                                    }
                                },
                                {
                                    "comment": "Trigger price, required for trigger orders only (Stop-loss or Take-profit orders)",
                                    "name": "trigger_price",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "number"
                                    }
                                },
                                {
                                    "comment": "The maximum deviation from the price peak beyond which the order will be triggered",
                                    "name": "trigger_offset",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "number"
                                    }
                                },
                                {
                                    "comment": "Defines the trigger type. Required for \"Stop-Loss\", \"Take-Profit\" and \"Trailing\" trigger orders",
                                    "name": "trigger",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "trigger"
                                    }
                                }
                            ],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_buy_request_otoco_config"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_buy_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_buy_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_buy_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_buy_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_buy_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "order",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_buy_response_order"
                            }
                        },
                        {
                            "comment": "",
                            "name": "trades",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_buy_response_trade"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_buy_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "If order is a quote. Present only if true.",
                            "name": "quote",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Whether the trigger order has been triggered",
                            "name": "triggered",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "optional field with value true added only when created with Mobile Application",
                            "name": "mobile",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The name of the application that placed the order on behalf of the user (optional).",
                            "name": "app_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                            "name": "implv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                            "name": "refresh_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Option price in USD (Only if advanced=\"usd\")",
                            "name": "usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The Ids of the orders that will be triggered if the order is filled",
                            "name": "oto_order_ids",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Average fill price of the order",
                            "name": "average_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true for post-only orders only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                            "name": "filled_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                            "name": "trigger",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                            "name": "trigger_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                            "name": "is_secondary_oto",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                            "name": "replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "mmp_group",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is a MMP order, otherwise false.",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "last_update_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                            "name": "cancel_reason",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order was cancelled by mmp trigger (optional)",
                            "name": "mmp_cancelled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                            "name": "order_state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                            "name": "is_rebalance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                            "name": "reject_post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User defined label (up to 64 characters)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                            "name": "is_liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number or string"
                            }
                        },
                        {
                            "comment": "true if created via Deribit frontend (optional)",
                            "name": "web",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                            "name": "time_in_force",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                            "name": "trigger_reference_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                            "name": "display_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                            "name": "is_primary_otoco",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Original order type. Optional field",
                            "name": "original_order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order made from block_trade trade, added only in that case.",
                            "name": "block_trade",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Trigger price (Only for future trigger orders)",
                            "name": "trigger_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                            "name": "oco_ref",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                            "name": "trigger_offset",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                            "name": "auto_replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                            "name": "trigger_fill_condition",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "primary_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_buy_response_order"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Unique (per currency) trade identifier",
                            "name": "trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction of the \"tick\" (0 = Plus Tick, 1 = Zero-Plus Tick, 2 = Minus Tick, 3 = Zero-Minus Tick).",
                            "name": "tick_direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "fee_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order was created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Advanced type of user order: \"usd\" or \"implv\" (only for options; omitted if not applicable)",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the user order (maker or taker), i.e. subscriber's order id that took part in the trade",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes what was role of users order: \"M\" when it was maker order, \"T\" when it was taker order",
                            "name": "liquidity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order is post-only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade size in contract units (optional, may be absent in historical trades)",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is MMP",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User's fee in units of the specified fee_currency",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "QuoteID of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Index Price at the moment of trade",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User defined label (presented only when previously set for order by user)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block trade id - when trade was part of a block trade",
                            "name": "block_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field containing combo instrument name if the trade is a combo trade",
                            "name": "combo_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Always null",
                            "name": "matching_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order type: \"limit, \"market\", or \"liquidation\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "List of allocations for Block RFQ pre-allocation. Each allocation specifies user_id, amount, and fee for the allocated part of the trade. For broker client allocations, a client_info object will be included.",
                            "name": "trade_allocations",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_buy_response_trade_allocation"
                            }
                        },
                        {
                            "comment": "Profit and loss in base currency.",
                            "name": "profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp of the trade (milliseconds since the UNIX epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Option implied volatility for the price (Option only)",
                            "name": "iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\" or \"archive\" (if order was archived)",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Underlying price for implied volatility calculations (Options only)",
                            "name": "underlying_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ quote - when trade was part of the Block RFQ",
                            "name": "block_rfq_quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "QuoteSet of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Mark Price at the moment of trade",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ - when trade was part of the Block RFQ",
                            "name": "block_rfq_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Optional field containing combo trade identifier if the trade is a combo trade",
                            "name": "combo_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is reduce-only",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field (only for trades caused by liquidation): \"M\" when maker side of trade was under liquidation, \"T\" when taker side was under liquidation, \"MT\" when both sides of trade were under liquidation",
                            "name": "liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The sequence number of the trade within instrument",
                            "name": "trade_seq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "true if user order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users)",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional field containing leg trades if trade is a combo trade (present when querying for only combo trades and in combo_trades events)",
                            "name": "legs",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_buy_response_trade"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Amount allocated to this user.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional client allocation info for brokers.",
                            "name": "client_info",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_buy_response_client_info"
                            }
                        },
                        {
                            "comment": "Fee for the allocated part of the trade.",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User ID to which part of the trade is allocated. For brokers the User ID is obstructed.",
                            "name": "user_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_buy_response_trade_allocation"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "ID of a client; available to broker. Represents a group of users under a common name.",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "ID assigned to a single user in a client; available to broker.",
                            "name": "client_link_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Name of the linked user within the client; available to broker.",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_buy_response_client_info"
                }
            ]
        },
        "name": "private_buy",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "order",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_buy_response_order"
                    }
                },
                {
                    "comment": "",
                    "name": "trades",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_buy_response_trade"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_buy_response_result"
        }
    },
    {
        "comment": "Places a sell order for an instrument.",
        "endpoint": {
            "name": "private_sell",
            "path": "/private/sell",
            "rate_limiter": "matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "market",
                            "stop_limit",
                            "market_limit",
                            "trailing_stop",
                            "take_market",
                            "limit",
                            "take_limit",
                            "stop_market"
                        ],
                        "name": "type"
                    },
                    {
                        "items": [
                            "immediate_or_cancel",
                            "fill_or_kill",
                            "good_til_day",
                            "good_til_cancelled"
                        ],
                        "name": "time_in_force"
                    },
                    {
                        "items": [
                            "mark_price",
                            "last_price",
                            "index_price"
                        ],
                        "name": "trigger"
                    },
                    {
                        "items": [
                            "usd",
                            "implv"
                        ],
                        "name": "advanced"
                    },
                    {
                        "items": [
                            "one_triggers_other",
                            "one_triggers_one_cancels_other",
                            "one_cancels_other"
                        ],
                        "name": "linked_order_type"
                    },
                    {
                        "items": [
                            "complete_fill",
                            "incremental",
                            "first_hit"
                        ],
                        "name": "trigger_fill_condition"
                    }
                ],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin. The amount is a mandatory parameter if contracts parameter is missing. If both contracts and amount parameter are passed they must match each other otherwise error is returned.",
                        "name": "amount",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "It represents the requested order size in contract units and can be passed instead of amount. The contracts is a mandatory parameter if amount parameter is missing. If both contracts and amount parameter are passed they must match each other otherwise error is returned.",
                        "name": "contracts",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "The order type, default: \"limit\"",
                        "name": "type",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "type"
                        }
                    },
                    {
                        "comment": "user defined label for the order (maximum 64 characters)",
                        "name": "label",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The order price in base currency (Only for limit and stop_limit orders) When adding an order with advanced=usd, the field price should be the option price value in USD. When adding an order with advanced=implv, the field price should be a value of implied volatility in percentages. For example, price=100, means implied volatility of 100%",
                        "name": "price",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "Specifies how long the order remains in effect. Default \"good_til_cancelled\" \"good_til_cancelled\" - unfilled order remains in order book until cancelled \"good_til_day\" - unfilled order remains in order book till the end of the trading session \"fill_or_kill\" - execute a transaction immediately and completely or not at all \"immediate_or_cancel\" - execute a transaction immediately, and any portion of the order that cannot be immediately filled is cancelled",
                        "name": "time_in_force",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "time_in_force"
                        }
                    },
                    {
                        "comment": "Initial display amount for iceberg order. Has to be at least 100 times minimum amount for instrument and ratio of hidden part vs visible part has to be less than 100 as well.",
                        "name": "display_amount",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "If true, the order is considered post-only. If the new price would cause the order to be filled immediately (as taker), the price will be changed to be just above the spread. Only valid in combination with time_in_force=\"good_til_cancelled\"",
                        "name": "post_only",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "If an order is considered post-only and this field is set to true then the order is put to the order book unmodified or the request is rejected. Only valid in combination with \"post_only\" set to true",
                        "name": "reject_post_only",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "If true, the order is considered reduce-only which is intended to only reduce a current position",
                        "name": "reduce_only",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Trigger price, required for trigger orders only (Stop-loss or Take-profit orders)",
                        "name": "trigger_price",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "The maximum deviation from the price peak beyond which the order will be triggered",
                        "name": "trigger_offset",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "Defines the trigger type. Required for \"Stop-Loss\", \"Take-Profit\" and \"Trailing\" trigger orders",
                        "name": "trigger",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "trigger"
                        }
                    },
                    {
                        "comment": "Advanced option order type. (Only for options. Advanced USD orders are not supported for linear options.)",
                        "name": "advanced",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "advanced"
                        }
                    },
                    {
                        "comment": "Order MMP flag, only for order_type 'limit'",
                        "name": "mmp",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Timestamp, when provided server will start processing request in Matching Engine only before given timestamp, in other cases timed_out error will be responded. Remember that the given timestamp should be consistent with the server's time, use /public/time method to obtain current server time.",
                        "name": "valid_until",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The type of the linked order. \"one_triggers_other\" - Execution of primary order triggers the placement of one or more secondary orders. \"one_cancels_other\" - The execution of one order in a pair automatically cancels the other, typically used to set a stop-loss and take-profit simultaneously. \"one_triggers_one_cancels_other\" - The execution of a primary order triggers two secondary orders (a stop-loss and take-profit pair), where the execution of one secondary order cancels the other.",
                        "name": "linked_order_type",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "linked_order_type"
                        }
                    },
                    {
                        "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                        "name": "trigger_fill_condition",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "trigger_fill_condition"
                        }
                    },
                    {
                        "comment": "List of trades to create or cancel when this order is filled.",
                        "name": "otoco_config",
                        "required": "false",
                        "type": {
                            "enums": [
                                {
                                    "items": [
                                        "sell",
                                        "buy"
                                    ],
                                    "name": "direction"
                                },
                                {
                                    "items": [
                                        "market",
                                        "stop_limit",
                                        "market_limit",
                                        "trailing_stop",
                                        "take_market",
                                        "limit",
                                        "take_limit",
                                        "stop_market"
                                    ],
                                    "name": "type"
                                },
                                {
                                    "items": [
                                        "immediate_or_cancel",
                                        "fill_or_kill",
                                        "good_til_day",
                                        "good_til_cancelled"
                                    ],
                                    "name": "time_in_force"
                                },
                                {
                                    "items": [
                                        "mark_price",
                                        "last_price",
                                        "index_price"
                                    ],
                                    "name": "trigger"
                                }
                            ],
                            "fields": [
                                {
                                    "comment": "It represents the requested trade size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                                    "name": "amount",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "number"
                                    }
                                },
                                {
                                    "comment": "Direction of trade from the maker perspective",
                                    "name": "direction",
                                    "required": "true",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "direction"
                                    }
                                },
                                {
                                    "comment": "The order type, default: \"limit\"",
                                    "name": "type",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "type"
                                    }
                                },
                                {
                                    "comment": "user defined label for the order (maximum 64 characters)",
                                    "name": "label",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "string"
                                    }
                                },
                                {
                                    "comment": "The order price in base currency (Only for limit and stop_limit orders) When adding an order with advanced=usd, the field price should be the option price value in USD. When adding an order with advanced=implv, the field price should be a value of implied volatility in percentages. For example, price=100, means implied volatility of 100%",
                                    "name": "price",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "number"
                                    }
                                },
                                {
                                    "comment": "If true, the order is considered reduce-only which is intended to only reduce a current position",
                                    "name": "reduce_only",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "boolean"
                                    }
                                },
                                {
                                    "comment": "Specifies how long the order remains in effect. Default \"good_til_cancelled\" \"good_til_cancelled\" - unfilled order remains in order book until cancelled \"good_til_day\" - unfilled order remains in order book till the end of the trading session \"fill_or_kill\" - execute a transaction immediately and completely or not at all \"immediate_or_cancel\" - execute a transaction immediately, and any portion of the order that cannot be immediately filled is cancelled",
                                    "name": "time_in_force",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "time_in_force"
                                    }
                                },
                                {
                                    "comment": "If true, the order is considered post-only. If the new price would cause the order to be filled immediately (as taker), the price will be changed to be just below or above the spread (according to the direction of the order). Only valid in combination with time_in_force=\"good_til_cancelled\"",
                                    "name": "post_only",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "boolean"
                                    }
                                },
                                {
                                    "comment": "If an order is considered post-only and this field is set to true then the order is put to the order book unmodified or the request is rejected. Only valid in combination with \"post_only\" set to true",
                                    "name": "reject_post_only",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "boolean"
                                    }
                                },
                                {
                                    "comment": "Trigger price, required for trigger orders only (Stop-loss or Take-profit orders)",
                                    "name": "trigger_price",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "number"
                                    }
                                },
                                {
                                    "comment": "The maximum deviation from the price peak beyond which the order will be triggered",
                                    "name": "trigger_offset",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "number"
                                    }
                                },
                                {
                                    "comment": "Defines the trigger type. Required for \"Stop-Loss\", \"Take-Profit\" and \"Trailing\" trigger orders",
                                    "name": "trigger",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "trigger"
                                    }
                                }
                            ],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_sell_request_otoco_config"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_sell_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_sell_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_sell_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_sell_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_sell_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "order",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_sell_response_order"
                            }
                        },
                        {
                            "comment": "",
                            "name": "trades",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_sell_response_trade"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_sell_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "If order is a quote. Present only if true.",
                            "name": "quote",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Whether the trigger order has been triggered",
                            "name": "triggered",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "optional field with value true added only when created with Mobile Application",
                            "name": "mobile",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The name of the application that placed the order on behalf of the user (optional).",
                            "name": "app_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                            "name": "implv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                            "name": "refresh_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Option price in USD (Only if advanced=\"usd\")",
                            "name": "usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The Ids of the orders that will be triggered if the order is filled",
                            "name": "oto_order_ids",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Average fill price of the order",
                            "name": "average_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true for post-only orders only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                            "name": "filled_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                            "name": "trigger",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                            "name": "trigger_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                            "name": "is_secondary_oto",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                            "name": "replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "mmp_group",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is a MMP order, otherwise false.",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "last_update_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                            "name": "cancel_reason",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order was cancelled by mmp trigger (optional)",
                            "name": "mmp_cancelled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                            "name": "order_state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                            "name": "is_rebalance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                            "name": "reject_post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User defined label (up to 64 characters)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                            "name": "is_liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number or string"
                            }
                        },
                        {
                            "comment": "true if created via Deribit frontend (optional)",
                            "name": "web",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                            "name": "time_in_force",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                            "name": "trigger_reference_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                            "name": "display_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                            "name": "is_primary_otoco",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Original order type. Optional field",
                            "name": "original_order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order made from block_trade trade, added only in that case.",
                            "name": "block_trade",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Trigger price (Only for future trigger orders)",
                            "name": "trigger_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                            "name": "oco_ref",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                            "name": "trigger_offset",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                            "name": "auto_replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                            "name": "trigger_fill_condition",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "primary_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_sell_response_order"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Unique (per currency) trade identifier",
                            "name": "trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction of the \"tick\" (0 = Plus Tick, 1 = Zero-Plus Tick, 2 = Minus Tick, 3 = Zero-Minus Tick).",
                            "name": "tick_direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "fee_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order was created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Advanced type of user order: \"usd\" or \"implv\" (only for options; omitted if not applicable)",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the user order (maker or taker), i.e. subscriber's order id that took part in the trade",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes what was role of users order: \"M\" when it was maker order, \"T\" when it was taker order",
                            "name": "liquidity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order is post-only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade size in contract units (optional, may be absent in historical trades)",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is MMP",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User's fee in units of the specified fee_currency",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "QuoteID of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Index Price at the moment of trade",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User defined label (presented only when previously set for order by user)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block trade id - when trade was part of a block trade",
                            "name": "block_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field containing combo instrument name if the trade is a combo trade",
                            "name": "combo_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Always null",
                            "name": "matching_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order type: \"limit, \"market\", or \"liquidation\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "List of allocations for Block RFQ pre-allocation. Each allocation specifies user_id, amount, and fee for the allocated part of the trade. For broker client allocations, a client_info object will be included.",
                            "name": "trade_allocations",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_sell_response_trade_allocation"
                            }
                        },
                        {
                            "comment": "Profit and loss in base currency.",
                            "name": "profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp of the trade (milliseconds since the UNIX epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Option implied volatility for the price (Option only)",
                            "name": "iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\" or \"archive\" (if order was archived)",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Underlying price for implied volatility calculations (Options only)",
                            "name": "underlying_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ quote - when trade was part of the Block RFQ",
                            "name": "block_rfq_quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "QuoteSet of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Mark Price at the moment of trade",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ - when trade was part of the Block RFQ",
                            "name": "block_rfq_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Optional field containing combo trade identifier if the trade is a combo trade",
                            "name": "combo_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is reduce-only",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field (only for trades caused by liquidation): \"M\" when maker side of trade was under liquidation, \"T\" when taker side was under liquidation, \"MT\" when both sides of trade were under liquidation",
                            "name": "liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The sequence number of the trade within instrument",
                            "name": "trade_seq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "true if user order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users)",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional field containing leg trades if trade is a combo trade (present when querying for only combo trades and in combo_trades events)",
                            "name": "legs",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_sell_response_trade"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Amount allocated to this user.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional client allocation info for brokers.",
                            "name": "client_info",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_sell_response_client_info"
                            }
                        },
                        {
                            "comment": "Fee for the allocated part of the trade.",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User ID to which part of the trade is allocated. For brokers the User ID is obstructed.",
                            "name": "user_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_sell_response_trade_allocation"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "ID of a client; available to broker. Represents a group of users under a common name.",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "ID assigned to a single user in a client; available to broker.",
                            "name": "client_link_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Name of the linked user within the client; available to broker.",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_sell_response_client_info"
                }
            ]
        },
        "name": "private_sell",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "order",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_sell_response_order"
                    }
                },
                {
                    "comment": "",
                    "name": "trades",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_sell_response_trade"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_sell_response_result"
        }
    },
    {
        "comment": "Change price, amount and/or other properties of an order.",
        "endpoint": {
            "name": "private_edit",
            "path": "/private/edit",
            "rate_limiter": "matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "usd",
                            "implv"
                        ],
                        "name": "advanced"
                    }
                ],
                "fields": [
                    {
                        "comment": "The order id",
                        "name": "order_id",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin. The amount is a mandatory parameter if contracts parameter is missing. If both contracts and amount parameter are passed they must match each other otherwise error is returned.",
                        "name": "amount",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "It represents the requested order size in contract units and can be passed instead of amount. The contracts is a mandatory parameter if amount parameter is missing. If both contracts and amount parameter are passed they must match each other otherwise error is returned.",
                        "name": "contracts",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "The order price in base currency. When editing an option order with advanced=usd, the field price should be the option price value in USD. When editing an option order with advanced=implv, the field price should be a value of implied volatility in percentages. For example, price=100, means implied volatility of 100%",
                        "name": "price",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "If true, the order is considered post-only. If the new price would cause the order to be filled immediately (as taker), the price will be changed to be just below or above the spread (accordingly to the original order type). Only valid in combination with time_in_force=\"good_til_cancelled\"",
                        "name": "post_only",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "If true, the order is considered reduce-only which is intended to only reduce a current position",
                        "name": "reduce_only",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "If an order is considered post-only and this field is set to true then the order is put to the order book unmodified or the request is rejected. Only valid in combination with \"post_only\" set to true",
                        "name": "reject_post_only",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Advanced option order type. If you have posted an advanced option order, it is necessary to re-supply this parameter when editing it (Only for options)",
                        "name": "advanced",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "advanced"
                        }
                    },
                    {
                        "comment": "Trigger price, required for trigger orders only (Stop-loss or Take-profit orders)",
                        "name": "trigger_price",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "The maximum deviation from the price peak beyond which the order will be triggered",
                        "name": "trigger_offset",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "Order MMP flag, only for order_type 'limit'",
                        "name": "mmp",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Timestamp, when provided server will start processing request in Matching Engine only before given timestamp, in other cases timed_out error will be responded. Remember that the given timestamp should be consistent with the server's time, use /public/time method to obtain current server time.",
                        "name": "valid_until",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Initial display amount for iceberg order. Has to be at least 100 times minimum amount for instrument and ratio of hidden part vs visible part has to be less than 100 as well.",
                        "name": "display_amount",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_edit_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_edit_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_edit_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_edit_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_edit_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "order",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_edit_response_order"
                            }
                        },
                        {
                            "comment": "",
                            "name": "trades",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_edit_response_trade"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_edit_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "If order is a quote. Present only if true.",
                            "name": "quote",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Whether the trigger order has been triggered",
                            "name": "triggered",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "optional field with value true added only when created with Mobile Application",
                            "name": "mobile",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The name of the application that placed the order on behalf of the user (optional).",
                            "name": "app_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                            "name": "implv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                            "name": "refresh_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Option price in USD (Only if advanced=\"usd\")",
                            "name": "usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The Ids of the orders that will be triggered if the order is filled",
                            "name": "oto_order_ids",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Average fill price of the order",
                            "name": "average_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true for post-only orders only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                            "name": "filled_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                            "name": "trigger",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                            "name": "trigger_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                            "name": "is_secondary_oto",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                            "name": "replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "mmp_group",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is a MMP order, otherwise false.",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "last_update_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                            "name": "cancel_reason",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order was cancelled by mmp trigger (optional)",
                            "name": "mmp_cancelled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                            "name": "order_state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                            "name": "is_rebalance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                            "name": "reject_post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User defined label (up to 64 characters)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                            "name": "is_liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number or string"
                            }
                        },
                        {
                            "comment": "true if created via Deribit frontend (optional)",
                            "name": "web",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                            "name": "time_in_force",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                            "name": "trigger_reference_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                            "name": "display_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                            "name": "is_primary_otoco",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Original order type. Optional field",
                            "name": "original_order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order made from block_trade trade, added only in that case.",
                            "name": "block_trade",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Trigger price (Only for future trigger orders)",
                            "name": "trigger_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                            "name": "oco_ref",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                            "name": "trigger_offset",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                            "name": "auto_replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                            "name": "trigger_fill_condition",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "primary_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_edit_response_order"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Unique (per currency) trade identifier",
                            "name": "trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction of the \"tick\" (0 = Plus Tick, 1 = Zero-Plus Tick, 2 = Minus Tick, 3 = Zero-Minus Tick).",
                            "name": "tick_direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "fee_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order was created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Advanced type of user order: \"usd\" or \"implv\" (only for options; omitted if not applicable)",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the user order (maker or taker), i.e. subscriber's order id that took part in the trade",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes what was role of users order: \"M\" when it was maker order, \"T\" when it was taker order",
                            "name": "liquidity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order is post-only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade size in contract units (optional, may be absent in historical trades)",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is MMP",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User's fee in units of the specified fee_currency",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "QuoteID of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Index Price at the moment of trade",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User defined label (presented only when previously set for order by user)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block trade id - when trade was part of a block trade",
                            "name": "block_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field containing combo instrument name if the trade is a combo trade",
                            "name": "combo_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Always null",
                            "name": "matching_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order type: \"limit, \"market\", or \"liquidation\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "List of allocations for Block RFQ pre-allocation. Each allocation specifies user_id, amount, and fee for the allocated part of the trade. For broker client allocations, a client_info object will be included.",
                            "name": "trade_allocations",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_edit_response_trade_allocation"
                            }
                        },
                        {
                            "comment": "Profit and loss in base currency.",
                            "name": "profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp of the trade (milliseconds since the UNIX epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Option implied volatility for the price (Option only)",
                            "name": "iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\" or \"archive\" (if order was archived)",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Underlying price for implied volatility calculations (Options only)",
                            "name": "underlying_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ quote - when trade was part of the Block RFQ",
                            "name": "block_rfq_quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "QuoteSet of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Mark Price at the moment of trade",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ - when trade was part of the Block RFQ",
                            "name": "block_rfq_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Optional field containing combo trade identifier if the trade is a combo trade",
                            "name": "combo_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is reduce-only",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field (only for trades caused by liquidation): \"M\" when maker side of trade was under liquidation, \"T\" when taker side was under liquidation, \"MT\" when both sides of trade were under liquidation",
                            "name": "liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The sequence number of the trade within instrument",
                            "name": "trade_seq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "true if user order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users)",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional field containing leg trades if trade is a combo trade (present when querying for only combo trades and in combo_trades events)",
                            "name": "legs",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_edit_response_trade"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Amount allocated to this user.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional client allocation info for brokers.",
                            "name": "client_info",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_edit_response_client_info"
                            }
                        },
                        {
                            "comment": "Fee for the allocated part of the trade.",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User ID to which part of the trade is allocated. For brokers the User ID is obstructed.",
                            "name": "user_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_edit_response_trade_allocation"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "ID of a client; available to broker. Represents a group of users under a common name.",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "ID assigned to a single user in a client; available to broker.",
                            "name": "client_link_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Name of the linked user within the client; available to broker.",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_edit_response_client_info"
                }
            ]
        },
        "name": "private_edit",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "order",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_edit_response_order"
                    }
                },
                {
                    "comment": "",
                    "name": "trades",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_edit_response_trade"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_edit_response_result"
        }
    },
    {
        "comment": "Change price, amount and/or other properties of an order with a given label. It works only when there is one open order with this label",
        "endpoint": {
            "name": "private_edit_by_label",
            "path": "/private/edit_by_label",
            "rate_limiter": "matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "usd",
                            "implv"
                        ],
                        "name": "advanced"
                    }
                ],
                "fields": [
                    {
                        "comment": "user defined label for the order (maximum 64 characters)",
                        "name": "label",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin. The amount is a mandatory parameter if contracts parameter is missing. If both contracts and amount parameter are passed they must match each other otherwise error is returned.",
                        "name": "amount",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "It represents the requested order size in contract units and can be passed instead of amount. The contracts is a mandatory parameter if amount parameter is missing. If both contracts and amount parameter are passed they must match each other otherwise error is returned.",
                        "name": "contracts",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "The order price in base currency. When editing an option order with advanced=usd, the field price should be the option price value in USD. When editing an option order with advanced=implv, the field price should be a value of implied volatility in percentages. For example, price=100, means implied volatility of 100%",
                        "name": "price",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "If true, the order is considered post-only. If the new price would cause the order to be filled immediately (as taker), the price will be changed to be just below or above the spread (accordingly to the original order type). Only valid in combination with time_in_force=\"good_til_cancelled\"",
                        "name": "post_only",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "If true, the order is considered reduce-only which is intended to only reduce a current position",
                        "name": "reduce_only",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "If an order is considered post-only and this field is set to true then the order is put to the order book unmodified or the request is rejected. Only valid in combination with \"post_only\" set to true",
                        "name": "reject_post_only",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Advanced option order type. If you have posted an advanced option order, it is necessary to re-supply this parameter when editing it (Only for options)",
                        "name": "advanced",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "advanced"
                        }
                    },
                    {
                        "comment": "Trigger price, required for trigger orders only (Stop-loss or Take-profit orders)",
                        "name": "trigger_price",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "Order MMP flag, only for order_type 'limit'",
                        "name": "mmp",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Timestamp, when provided server will start processing request in Matching Engine only before given timestamp, in other cases timed_out error will be responded. Remember that the given timestamp should be consistent with the server's time, use /public/time method to obtain current server time.",
                        "name": "valid_until",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_edit_by_label_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_edit_by_label_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_edit_by_label_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_edit_by_label_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_edit_by_label_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "order",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_edit_by_label_response_order"
                            }
                        },
                        {
                            "comment": "",
                            "name": "trades",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_edit_by_label_response_trade"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_edit_by_label_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "If order is a quote. Present only if true.",
                            "name": "quote",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Whether the trigger order has been triggered",
                            "name": "triggered",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "optional field with value true added only when created with Mobile Application",
                            "name": "mobile",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The name of the application that placed the order on behalf of the user (optional).",
                            "name": "app_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                            "name": "implv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                            "name": "refresh_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Option price in USD (Only if advanced=\"usd\")",
                            "name": "usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The Ids of the orders that will be triggered if the order is filled",
                            "name": "oto_order_ids",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Average fill price of the order",
                            "name": "average_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true for post-only orders only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                            "name": "filled_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                            "name": "trigger",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                            "name": "trigger_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                            "name": "is_secondary_oto",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                            "name": "replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "mmp_group",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is a MMP order, otherwise false.",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "last_update_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                            "name": "cancel_reason",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order was cancelled by mmp trigger (optional)",
                            "name": "mmp_cancelled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                            "name": "order_state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                            "name": "is_rebalance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                            "name": "reject_post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User defined label (up to 64 characters)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                            "name": "is_liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number or string"
                            }
                        },
                        {
                            "comment": "true if created via Deribit frontend (optional)",
                            "name": "web",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                            "name": "time_in_force",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                            "name": "trigger_reference_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                            "name": "display_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                            "name": "is_primary_otoco",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Original order type. Optional field",
                            "name": "original_order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order made from block_trade trade, added only in that case.",
                            "name": "block_trade",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Trigger price (Only for future trigger orders)",
                            "name": "trigger_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                            "name": "oco_ref",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                            "name": "trigger_offset",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                            "name": "auto_replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                            "name": "trigger_fill_condition",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "primary_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_edit_by_label_response_order"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Unique (per currency) trade identifier",
                            "name": "trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction of the \"tick\" (0 = Plus Tick, 1 = Zero-Plus Tick, 2 = Minus Tick, 3 = Zero-Minus Tick).",
                            "name": "tick_direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "fee_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order was created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Advanced type of user order: \"usd\" or \"implv\" (only for options; omitted if not applicable)",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the user order (maker or taker), i.e. subscriber's order id that took part in the trade",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes what was role of users order: \"M\" when it was maker order, \"T\" when it was taker order",
                            "name": "liquidity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order is post-only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade size in contract units (optional, may be absent in historical trades)",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is MMP",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User's fee in units of the specified fee_currency",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "QuoteID of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Index Price at the moment of trade",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User defined label (presented only when previously set for order by user)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block trade id - when trade was part of a block trade",
                            "name": "block_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field containing combo instrument name if the trade is a combo trade",
                            "name": "combo_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Always null",
                            "name": "matching_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order type: \"limit, \"market\", or \"liquidation\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "List of allocations for Block RFQ pre-allocation. Each allocation specifies user_id, amount, and fee for the allocated part of the trade. For broker client allocations, a client_info object will be included.",
                            "name": "trade_allocations",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_edit_by_label_response_trade_allocation"
                            }
                        },
                        {
                            "comment": "Profit and loss in base currency.",
                            "name": "profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp of the trade (milliseconds since the UNIX epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Option implied volatility for the price (Option only)",
                            "name": "iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\" or \"archive\" (if order was archived)",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Underlying price for implied volatility calculations (Options only)",
                            "name": "underlying_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ quote - when trade was part of the Block RFQ",
                            "name": "block_rfq_quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "QuoteSet of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Mark Price at the moment of trade",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ - when trade was part of the Block RFQ",
                            "name": "block_rfq_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Optional field containing combo trade identifier if the trade is a combo trade",
                            "name": "combo_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is reduce-only",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field (only for trades caused by liquidation): \"M\" when maker side of trade was under liquidation, \"T\" when taker side was under liquidation, \"MT\" when both sides of trade were under liquidation",
                            "name": "liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The sequence number of the trade within instrument",
                            "name": "trade_seq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "true if user order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users)",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional field containing leg trades if trade is a combo trade (present when querying for only combo trades and in combo_trades events)",
                            "name": "legs",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_edit_by_label_response_trade"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Amount allocated to this user.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional client allocation info for brokers.",
                            "name": "client_info",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_edit_by_label_response_client_info"
                            }
                        },
                        {
                            "comment": "Fee for the allocated part of the trade.",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User ID to which part of the trade is allocated. For brokers the User ID is obstructed.",
                            "name": "user_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_edit_by_label_response_trade_allocation"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "ID of a client; available to broker. Represents a group of users under a common name.",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "ID assigned to a single user in a client; available to broker.",
                            "name": "client_link_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Name of the linked user within the client; available to broker.",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_edit_by_label_response_client_info"
                }
            ]
        },
        "name": "private_edit_by_label",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "order",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_edit_by_label_response_order"
                    }
                },
                {
                    "comment": "",
                    "name": "trades",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_edit_by_label_response_trade"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_edit_by_label_response_result"
        }
    },
    {
        "comment": "Cancel an order, specified by order id",
        "endpoint": {
            "name": "private_cancel",
            "path": "/private/cancel",
            "rate_limiter": "matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The order id",
                        "name": "order_id",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_cancel_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_cancel_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_cancel_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_cancel_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_cancel_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "If order is a quote. Present only if true.",
                            "name": "quote",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Whether the trigger order has been triggered",
                            "name": "triggered",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "optional field with value true added only when created with Mobile Application",
                            "name": "mobile",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The name of the application that placed the order on behalf of the user (optional).",
                            "name": "app_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                            "name": "implv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                            "name": "refresh_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Option price in USD (Only if advanced=\"usd\")",
                            "name": "usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The Ids of the orders that will be triggered if the order is filled",
                            "name": "oto_order_ids",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Average fill price of the order",
                            "name": "average_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true for post-only orders only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                            "name": "filled_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                            "name": "trigger",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                            "name": "trigger_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                            "name": "is_secondary_oto",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                            "name": "replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "mmp_group",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is a MMP order, otherwise false.",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "last_update_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                            "name": "cancel_reason",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order was cancelled by mmp trigger (optional)",
                            "name": "mmp_cancelled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                            "name": "order_state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                            "name": "is_rebalance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                            "name": "reject_post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User defined label (up to 64 characters)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                            "name": "is_liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number or string"
                            }
                        },
                        {
                            "comment": "true if created via Deribit frontend (optional)",
                            "name": "web",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                            "name": "time_in_force",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                            "name": "trigger_reference_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                            "name": "display_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                            "name": "is_primary_otoco",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Original order type. Optional field",
                            "name": "original_order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order made from block_trade trade, added only in that case.",
                            "name": "block_trade",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Trigger price (Only for future trigger orders)",
                            "name": "trigger_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                            "name": "oco_ref",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                            "name": "trigger_offset",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                            "name": "auto_replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                            "name": "trigger_fill_condition",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "primary_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_cancel_response_result"
                }
            ]
        },
        "name": "private_cancel",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "If order is a quote. Present only if true.",
                    "name": "quote",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Whether the trigger order has been triggered",
                    "name": "triggered",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "optional field with value true added only when created with Mobile Application",
                    "name": "mobile",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The name of the application that placed the order on behalf of the user (optional).",
                    "name": "app_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                    "name": "implv",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                    "name": "refresh_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Option price in USD (Only if advanced=\"usd\")",
                    "name": "usd",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The Ids of the orders that will be triggered if the order is filled",
                    "name": "oto_order_ids",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if created with API",
                    "name": "api",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Average fill price of the order",
                    "name": "average_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                    "name": "advanced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Unique order identifier",
                    "name": "order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true for post-only orders only",
                    "name": "post_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                    "name": "filled_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                    "name": "trigger",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                    "name": "trigger_order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Direction: buy, or sell",
                    "name": "direction",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                    "name": "contracts",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                    "name": "is_secondary_oto",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                    "name": "replaced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "mmp_group",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if the order is a MMP order, otherwise false.",
                    "name": "mmp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "last_update_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                    "name": "cancel_reason",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if order was cancelled by mmp trigger (optional)",
                    "name": "mmp_cancelled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "quote_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                    "name": "order_state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                    "name": "is_rebalance",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                    "name": "reject_post_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "User defined label (up to 64 characters)",
                    "name": "label",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                    "name": "is_liquidation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                    "name": "price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number or string"
                    }
                },
                {
                    "comment": "true if created via Deribit frontend (optional)",
                    "name": "web",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                    "name": "time_in_force",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                    "name": "trigger_reference_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                    "name": "display_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                    "name": "order_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                    "name": "is_primary_otoco",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Original order type. Optional field",
                    "name": "original_order_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if order made from block_trade trade, added only in that case.",
                    "name": "block_trade",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Trigger price (Only for future trigger orders)",
                    "name": "trigger_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                    "name": "oco_ref",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                    "name": "trigger_offset",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "quote_set_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                    "name": "auto_replaced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                    "name": "reduce_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                    "name": "amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                    "name": "risk_reducing",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Unique instrument identifier",
                    "name": "instrument_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                    "name": "trigger_fill_condition",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Unique order identifier",
                    "name": "primary_order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_cancel_response_result"
        }
    },
    {
        "comment": "This method cancels all users orders and trigger orders within all currencies and instrument kinds.",
        "endpoint": {
            "name": "private_cancel_all",
            "path": "/private/cancel_all",
            "rate_limiter": "matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "When detailed is set to true output format is changed. See description. Default: false",
                        "name": "detailed",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Whether or not to reject incoming quotes for 1 second after cancelling (false by default). Related to private/mass_quote request.",
                        "name": "freeze_quotes",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_cancel_all_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Total number of successfully cancelled orders",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "number"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_cancel_all_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Total number of successfully cancelled orders",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_cancel_all_response"
                }
            ]
        },
        "name": "private_cancel_all",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "number"
        }
    },
    {
        "comment": "Cancels all orders by currency, optionally filtered by instrument kind and/or order type.",
        "endpoint": {
            "name": "private_cancel_all_by_currency",
            "path": "/private/cancel_all_by_currency",
            "rate_limiter": "matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    },
                    {
                        "items": [
                            "any",
                            "future",
                            "option_combo",
                            "future_combo",
                            "option",
                            "combo",
                            "spot"
                        ],
                        "name": "kind"
                    },
                    {
                        "items": [
                            "trailing_stop",
                            "all",
                            "stop",
                            "limit",
                            "take",
                            "trigger_all"
                        ],
                        "name": "type"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Instrument kind, \"combo\" for any combo or \"any\" for all. If not provided instruments of all kinds are considered",
                        "name": "kind",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "kind"
                        }
                    },
                    {
                        "comment": "Order type - limit, stop, take, trigger_all or all, default - all",
                        "name": "type",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "type"
                        }
                    },
                    {
                        "comment": "When detailed is set to true output format is changed. See description. Default: false",
                        "name": "detailed",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Whether or not to reject incoming quotes for 1 second after cancelling (false by default). Related to private/mass_quote request.",
                        "name": "freeze_quotes",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_cancel_all_by_currency_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Total number of successfully cancelled orders",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "number"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_cancel_all_by_currency_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Total number of successfully cancelled orders",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_cancel_all_by_currency_response"
                }
            ]
        },
        "name": "private_cancel_all_by_currency",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "number"
        }
    },
    {
        "comment": "Cancels all orders by currency pair, optionally filtered by instrument kind and/or order type.",
        "endpoint": {
            "name": "private_cancel_all_by_currency_pair",
            "path": "/private/cancel_all_by_currency_pair",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "avax_usdc",
                            "btc_usdc",
                            "dot_usdc",
                            "usyc_usdc",
                            "paxg_btc",
                            "eurr_usdc",
                            "sol_usdt",
                            "link_usdc",
                            "trump_usdc",
                            "eurr_usdt",
                            "drbfix-btc_usdc",
                            "sol_usdc",
                            "steth_eth",
                            "bnb_usdc",
                            "ton_usdc",
                            "ltc_usdc",
                            "eth_eurr",
                            "paxg_usdc",
                            "eth_usdt",
                            "steth_usdt",
                            "btcdvol_usdc",
                            "ethdvol_usdc",
                            "xrp_usdc",
                            "btc_usdt",
                            "ada_usdc",
                            "btc_usyc",
                            "eth_usde",
                            "drbfix-eth_usdc",
                            "shib_usdc",
                            "steth_usdc",
                            "eth_usyc",
                            "usde_usdt",
                            "btc_eurr",
                            "trx_usdc",
                            "eth_usd",
                            "doge_usdc",
                            "usdc_usdt",
                            "uni_usdc",
                            "btc_usde",
                            "btc_usd",
                            "eth_btc",
                            "eth_usdc",
                            "algo_usdc",
                            "bch_usdc",
                            "usde_usdc",
                            "near_usdc",
                            "buidl_usdc"
                        ],
                        "name": "currency_pair"
                    },
                    {
                        "items": [
                            "any",
                            "future",
                            "option_combo",
                            "future_combo",
                            "option",
                            "combo",
                            "spot"
                        ],
                        "name": "kind"
                    },
                    {
                        "items": [
                            "trailing_stop",
                            "all",
                            "stop",
                            "limit",
                            "take",
                            "trigger_all"
                        ],
                        "name": "type"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency pair symbol",
                        "name": "currency_pair",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency_pair"
                        }
                    },
                    {
                        "comment": "Instrument kind, \"combo\" for any combo or \"any\" for all. If not provided instruments of all kinds are considered",
                        "name": "kind",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "kind"
                        }
                    },
                    {
                        "comment": "Order type - limit, stop, take, trigger_all or all, default - all",
                        "name": "type",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "type"
                        }
                    },
                    {
                        "comment": "When detailed is set to true output format is changed. See description. Default: false",
                        "name": "detailed",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Whether or not to reject incoming quotes for 1 second after cancelling (false by default). Related to private/mass_quote request.",
                        "name": "freeze_quotes",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_cancel_all_by_currency_pair_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Total number of successfully cancelled orders",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "number"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_cancel_all_by_currency_pair_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Total number of successfully cancelled orders",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_cancel_all_by_currency_pair_response"
                }
            ]
        },
        "name": "private_cancel_all_by_currency_pair",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "number"
        }
    },
    {
        "comment": "Cancels all orders by instrument, optionally filtered by order type.",
        "endpoint": {
            "name": "private_cancel_all_by_instrument",
            "path": "/private/cancel_all_by_instrument",
            "rate_limiter": "matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "trailing_stop",
                            "all",
                            "stop",
                            "limit",
                            "take",
                            "trigger_all"
                        ],
                        "name": "type"
                    }
                ],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Order type - limit, stop, take, trigger_all or all, default - all",
                        "name": "type",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "type"
                        }
                    },
                    {
                        "comment": "When detailed is set to true output format is changed. See description. Default: false",
                        "name": "detailed",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "When set to true orders in combo instruments affecting a given position will also be cancelled. Default: false",
                        "name": "include_combos",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Whether or not to reject incoming quotes for 1 second after cancelling (false by default). Related to private/mass_quote request.",
                        "name": "freeze_quotes",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_cancel_all_by_instrument_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Total number of successfully cancelled orders",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "number"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_cancel_all_by_instrument_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Total number of successfully cancelled orders",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_cancel_all_by_instrument_response"
                }
            ]
        },
        "name": "private_cancel_all_by_instrument",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "number"
        }
    },
    {
        "comment": "Cancels all orders in currency(currencies), optionally filtered by instrument kind and/or order type.",
        "endpoint": {
            "name": "private_cancel_all_by_kind_or_type",
            "path": "/private/cancel_all_by_kind_or_type",
            "rate_limiter": "matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "any",
                            "future",
                            "option_combo",
                            "future_combo",
                            "option",
                            "combo",
                            "spot"
                        ],
                        "name": "kind"
                    },
                    {
                        "items": [
                            "trailing_stop",
                            "all",
                            "stop",
                            "limit",
                            "take",
                            "trigger_all"
                        ],
                        "name": "type"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol, list of currency symbols or \"any\" for all",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Instrument kind, \"combo\" for any combo or \"any\" for all. If not provided instruments of all kinds are considered",
                        "name": "kind",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "kind"
                        }
                    },
                    {
                        "comment": "Order type - limit, stop, take, trigger_all or all, default - all",
                        "name": "type",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "type"
                        }
                    },
                    {
                        "comment": "When detailed is set to true output format is changed. See description. Default: false",
                        "name": "detailed",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Whether or not to reject incoming quotes for 1 second after cancelling (false by default). Related to private/mass_quote request.",
                        "name": "freeze_quotes",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_cancel_all_by_kind_or_type_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Total number of successfully cancelled orders",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "number"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_cancel_all_by_kind_or_type_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Total number of successfully cancelled orders",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_cancel_all_by_kind_or_type_response"
                }
            ]
        },
        "name": "private_cancel_all_by_kind_or_type",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "number"
        }
    },
    {
        "comment": "Cancels orders by label. All user's orders (trigger orders too), with a given label are cancelled in all currencies or in one given currency (in this case currency queue is used). Rate Limits: When called without the currency parameter, this method is subject to cancel_all rate limits. Different rate limit values may apply for per-currency cancels versus calls without providing the currency parameter.",
        "endpoint": {
            "name": "private_cancel_by_label",
            "path": "/private/cancel_by_label",
            "rate_limiter": "matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "user defined label for the order (maximum 64 characters)",
                        "name": "label",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_cancel_by_label_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Total number of successfully cancelled orders",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "number"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_cancel_by_label_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Total number of successfully cancelled orders",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_cancel_by_label_response"
                }
            ]
        },
        "name": "private_cancel_by_label",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "number"
        }
    },
    {
        "comment": "Cancels quotes based on the provided type. delta cancels quotes within a Delta range defined by min_delta and max_delta. quote_set_id cancels quotes by a specific Quote Set identifier. instrument cancels all quotes associated with a particular instrument. kind cancels all quotes for a certain instrument kind. currency cancels all quotes in a specified currency. currency_pair cancels all quotes in a specified currency pair. all cancels all quotes.",
        "endpoint": {
            "name": "private_cancel_quotes",
            "path": "/private/cancel_quotes",
            "rate_limiter": "matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "all",
                            "instrument_kind",
                            "quote_set_id",
                            "currency",
                            "currency_pair",
                            "delta",
                            "instrument"
                        ],
                        "name": "cancel_type"
                    },
                    {
                        "items": [
                            "any",
                            "future",
                            "option_combo",
                            "future_combo",
                            "option",
                            "combo",
                            "spot"
                        ],
                        "name": "kind"
                    },
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    },
                    {
                        "items": [
                            "avax_usdc",
                            "btc_usdc",
                            "dot_usdc",
                            "usyc_usdc",
                            "paxg_btc",
                            "eurr_usdc",
                            "sol_usdt",
                            "link_usdc",
                            "trump_usdc",
                            "eurr_usdt",
                            "drbfix-btc_usdc",
                            "sol_usdc",
                            "steth_eth",
                            "bnb_usdc",
                            "ton_usdc",
                            "ltc_usdc",
                            "eth_eurr",
                            "paxg_usdc",
                            "eth_usdt",
                            "steth_usdt",
                            "btcdvol_usdc",
                            "ethdvol_usdc",
                            "xrp_usdc",
                            "btc_usdt",
                            "ada_usdc",
                            "btc_usyc",
                            "eth_usde",
                            "drbfix-eth_usdc",
                            "shib_usdc",
                            "steth_usdc",
                            "eth_usyc",
                            "usde_usdt",
                            "btc_eurr",
                            "trx_usdc",
                            "eth_usd",
                            "doge_usdc",
                            "usdc_usdt",
                            "uni_usdc",
                            "btc_usde",
                            "btc_usd",
                            "eth_btc",
                            "eth_usdc",
                            "algo_usdc",
                            "bch_usdc",
                            "usde_usdc",
                            "near_usdc",
                            "buidl_usdc"
                        ],
                        "name": "currency_pair"
                    }
                ],
                "fields": [
                    {
                        "comment": "When detailed is set to true output format is changed. See description. Default: false",
                        "name": "detailed",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Whether or not to reject incoming quotes for 1 second after cancelling (false by default). Related to private/mass_quote request.",
                        "name": "freeze_quotes",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Type of cancel criteria.",
                        "name": "cancel_type",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "cancel_type"
                        }
                    },
                    {
                        "comment": "Min delta to cancel by delta (for cancel_type: delta).",
                        "name": "min_delta",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "Max delta to cancel by delta (for cancel_type: delta).",
                        "name": "max_delta",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "Unique identifier for the Quote set.",
                        "name": "quote_set_id",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Instrument name.",
                        "name": "instrument_name",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Instrument kind, \"combo\" for any combo or \"any\" for all. If not provided instruments of all kinds are considered",
                        "name": "kind",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "kind"
                        }
                    },
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "The currency pair symbol",
                        "name": "currency_pair",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency_pair"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_cancel_quotes_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Total number of successfully cancelled quotes",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "number"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_cancel_quotes_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Total number of successfully cancelled quotes",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_cancel_quotes_response"
                }
            ]
        },
        "name": "private_cancel_quotes",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "number"
        }
    },
    {
        "comment": "Makes closing position reduce only order .",
        "endpoint": {
            "name": "private_close_position",
            "path": "/private/close_position",
            "rate_limiter": "matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "market",
                            "limit"
                        ],
                        "name": "type"
                    }
                ],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The order type",
                        "name": "type",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "type"
                        }
                    },
                    {
                        "comment": "Optional price for limit order.",
                        "name": "price",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_close_position_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_close_position_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_close_position_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_close_position_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_close_position_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "order",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_close_position_response_order"
                            }
                        },
                        {
                            "comment": "",
                            "name": "trades",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_close_position_response_trade"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_close_position_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "If order is a quote. Present only if true.",
                            "name": "quote",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Whether the trigger order has been triggered",
                            "name": "triggered",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "optional field with value true added only when created with Mobile Application",
                            "name": "mobile",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The name of the application that placed the order on behalf of the user (optional).",
                            "name": "app_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                            "name": "implv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                            "name": "refresh_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Option price in USD (Only if advanced=\"usd\")",
                            "name": "usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The Ids of the orders that will be triggered if the order is filled",
                            "name": "oto_order_ids",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Average fill price of the order",
                            "name": "average_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true for post-only orders only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                            "name": "filled_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                            "name": "trigger",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                            "name": "trigger_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                            "name": "is_secondary_oto",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                            "name": "replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "mmp_group",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is a MMP order, otherwise false.",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "last_update_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                            "name": "cancel_reason",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order was cancelled by mmp trigger (optional)",
                            "name": "mmp_cancelled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                            "name": "order_state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                            "name": "is_rebalance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                            "name": "reject_post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User defined label (up to 64 characters)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                            "name": "is_liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number or string"
                            }
                        },
                        {
                            "comment": "true if created via Deribit frontend (optional)",
                            "name": "web",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                            "name": "time_in_force",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                            "name": "trigger_reference_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                            "name": "display_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                            "name": "is_primary_otoco",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Original order type. Optional field",
                            "name": "original_order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order made from block_trade trade, added only in that case.",
                            "name": "block_trade",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Trigger price (Only for future trigger orders)",
                            "name": "trigger_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                            "name": "oco_ref",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                            "name": "trigger_offset",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                            "name": "auto_replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                            "name": "trigger_fill_condition",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "primary_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_close_position_response_order"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Unique (per currency) trade identifier",
                            "name": "trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction of the \"tick\" (0 = Plus Tick, 1 = Zero-Plus Tick, 2 = Minus Tick, 3 = Zero-Minus Tick).",
                            "name": "tick_direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "fee_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order was created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Advanced type of user order: \"usd\" or \"implv\" (only for options; omitted if not applicable)",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the user order (maker or taker), i.e. subscriber's order id that took part in the trade",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes what was role of users order: \"M\" when it was maker order, \"T\" when it was taker order",
                            "name": "liquidity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order is post-only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade size in contract units (optional, may be absent in historical trades)",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is MMP",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User's fee in units of the specified fee_currency",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "QuoteID of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Index Price at the moment of trade",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User defined label (presented only when previously set for order by user)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block trade id - when trade was part of a block trade",
                            "name": "block_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field containing combo instrument name if the trade is a combo trade",
                            "name": "combo_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Always null",
                            "name": "matching_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order type: \"limit, \"market\", or \"liquidation\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "List of allocations for Block RFQ pre-allocation. Each allocation specifies user_id, amount, and fee for the allocated part of the trade. For broker client allocations, a client_info object will be included.",
                            "name": "trade_allocations",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_close_position_response_trade_allocation"
                            }
                        },
                        {
                            "comment": "Profit and loss in base currency.",
                            "name": "profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp of the trade (milliseconds since the UNIX epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Option implied volatility for the price (Option only)",
                            "name": "iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\" or \"archive\" (if order was archived)",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Underlying price for implied volatility calculations (Options only)",
                            "name": "underlying_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ quote - when trade was part of the Block RFQ",
                            "name": "block_rfq_quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "QuoteSet of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Mark Price at the moment of trade",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ - when trade was part of the Block RFQ",
                            "name": "block_rfq_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Optional field containing combo trade identifier if the trade is a combo trade",
                            "name": "combo_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is reduce-only",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field (only for trades caused by liquidation): \"M\" when maker side of trade was under liquidation, \"T\" when taker side was under liquidation, \"MT\" when both sides of trade were under liquidation",
                            "name": "liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The sequence number of the trade within instrument",
                            "name": "trade_seq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "true if user order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users)",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional field containing leg trades if trade is a combo trade (present when querying for only combo trades and in combo_trades events)",
                            "name": "legs",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_close_position_response_trade"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Amount allocated to this user.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional client allocation info for brokers.",
                            "name": "client_info",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_close_position_response_client_info"
                            }
                        },
                        {
                            "comment": "Fee for the allocated part of the trade.",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User ID to which part of the trade is allocated. For brokers the User ID is obstructed.",
                            "name": "user_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_close_position_response_trade_allocation"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "ID of a client; available to broker. Represents a group of users under a common name.",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "ID assigned to a single user in a client; available to broker.",
                            "name": "client_link_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Name of the linked user within the client; available to broker.",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_close_position_response_client_info"
                }
            ]
        },
        "name": "private_close_position",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "order",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_close_position_response_order"
                    }
                },
                {
                    "comment": "",
                    "name": "trades",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_close_position_response_trade"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_close_position_response_result"
        }
    },
    {
        "comment": "Get margins for a given instrument, amount and price.",
        "endpoint": {
            "name": "private_get_margins",
            "path": "/private/get_margins",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                        "name": "amount",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "Price",
                        "name": "price",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_margins_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_margins_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_margins_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_margins_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_margins_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Margin when buying",
                            "name": "buy",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The maximum price for the future. Any buy orders you submit higher than this price, will be clamped to this maximum.",
                            "name": "max_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The minimum price for the future. Any sell orders you submit lower than this price will be clamped to this minimum.",
                            "name": "min_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Margin when selling",
                            "name": "sell",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_margins_response_result"
                }
            ]
        },
        "name": "private_get_margins",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Margin when buying",
                    "name": "buy",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The maximum price for the future. Any buy orders you submit higher than this price, will be clamped to this maximum.",
                    "name": "max_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The minimum price for the future. Any sell orders you submit lower than this price will be clamped to this minimum.",
                    "name": "min_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Margin when selling",
                    "name": "sell",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_margins_response_result"
        }
    },
    {
        "comment": "Get MMP configuration for an index, if the parameter is not provided, a list of all MMP configurations is returned. Empty list means no MMP configuration.",
        "endpoint": {
            "name": "private_get_mmp_config",
            "path": "/private/get_mmp_config",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "avax_usdc",
                            "btc_usdc",
                            "dot_usdc",
                            "link_usdc",
                            "trump_usdc",
                            "sol_usdc",
                            "all",
                            "bnb_usdc",
                            "ton_usdc",
                            "ltc_usdc",
                            "paxg_usdc",
                            "eth_usdt",
                            "btcdvol_usdc",
                            "ethdvol_usdc",
                            "xrp_usdc",
                            "btc_usdt",
                            "ada_usdc",
                            "shib_usdc",
                            "trx_usdc",
                            "eth_usd",
                            "doge_usdc",
                            "uni_usdc",
                            "btc_usd",
                            "eth_usdc",
                            "algo_usdc",
                            "bch_usdc",
                            "usde_usdc",
                            "near_usdc",
                            "buidl_usdc"
                        ],
                        "name": "index_name"
                    }
                ],
                "fields": [
                    {
                        "comment": "Index identifier of derivative instrument on the platform; skipping this parameter will return all configurations",
                        "name": "index_name",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "index_name"
                        }
                    },
                    {
                        "comment": "Specifies the MMP group for which the configuration is being retrieved. MMP groups are used for Mass Quotes. If MMP group is not provided, the method returns the configuration for the MMP settings for regular orders. The index_name must be specified before using this parameter. \ud83d\udcd6 Related Support Article: Mass Quotes Specifications",
                        "name": "mmp_group",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "If true, retrieves MMP configuration for Block RFQ. When set, requires block_rfq scope instead of trade scope. Block RFQ MMP settings are completely separate from normal order/quote MMP settings.",
                        "name": "block_rfq",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_mmp_config_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_mmp_config_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_mmp_config_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_mmp_config_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_mmp_config_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "If true, indicates MMP configuration for Block RFQ. Block RFQ MMP settings are completely separate from normal order/quote MMP settings.",
                            "name": "block_rfq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Delta limit",
                            "name": "delta_limit",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "MMP frozen time in seconds, if set to 0 manual reset is required",
                            "name": "frozen_time",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Index identifier, matches (base) cryptocurrency with quote currency",
                            "name": "index_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "MMP Interval in seconds, if set to 0 MMP is disabled",
                            "name": "interval",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Specified MMP Group",
                            "name": "mmp_group",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Quantity limit",
                            "name": "quantity_limit",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "For Block RFQ only. The maximum number of Block RFQ trades allowed in the lookback window. Each RFQ trade counts as +1 towards the limit (not individual legs). Works across all currency pairs.",
                            "name": "trade_count_limit",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Vega limit",
                            "name": "vega_limit",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_mmp_config_response_result"
                }
            ]
        },
        "name": "private_get_mmp_config",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "If true, indicates MMP configuration for Block RFQ. Block RFQ MMP settings are completely separate from normal order/quote MMP settings.",
                    "name": "block_rfq",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Delta limit",
                    "name": "delta_limit",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "MMP frozen time in seconds, if set to 0 manual reset is required",
                    "name": "frozen_time",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Index identifier, matches (base) cryptocurrency with quote currency",
                    "name": "index_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "MMP Interval in seconds, if set to 0 MMP is disabled",
                    "name": "interval",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Specified MMP Group",
                    "name": "mmp_group",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Quantity limit",
                    "name": "quantity_limit",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "For Block RFQ only. The maximum number of Block RFQ trades allowed in the lookback window. Each RFQ trade counts as +1 towards the limit (not individual legs). Works across all currency pairs.",
                    "name": "trade_count_limit",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Vega limit",
                    "name": "vega_limit",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_mmp_config_response_result"
        }
    },
    {
        "comment": "Get MMP status for triggered index (or group). If the parameter is not provided, a list of all triggered MMP statuses is returned.",
        "endpoint": {
            "name": "private_get_mmp_status",
            "path": "/private/get_mmp_status",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "avax_usdc",
                            "btc_usdc",
                            "dot_usdc",
                            "link_usdc",
                            "trump_usdc",
                            "sol_usdc",
                            "all",
                            "bnb_usdc",
                            "ton_usdc",
                            "ltc_usdc",
                            "paxg_usdc",
                            "eth_usdt",
                            "btcdvol_usdc",
                            "ethdvol_usdc",
                            "xrp_usdc",
                            "btc_usdt",
                            "ada_usdc",
                            "shib_usdc",
                            "trx_usdc",
                            "eth_usd",
                            "doge_usdc",
                            "uni_usdc",
                            "btc_usd",
                            "eth_usdc",
                            "algo_usdc",
                            "bch_usdc",
                            "usde_usdc",
                            "near_usdc",
                            "buidl_usdc"
                        ],
                        "name": "index_name"
                    }
                ],
                "fields": [
                    {
                        "comment": "Index identifier of derivative instrument on the platform; skipping this parameter will return all configurations",
                        "name": "index_name",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "index_name"
                        }
                    },
                    {
                        "comment": "Specifies the MMP group for which the status is being retrieved. The index_name must be specified before using this parameter. \ud83d\udcd6 Related Support Article: Mass Quotes Specifications",
                        "name": "mmp_group",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "If true, retrieves MMP status for Block RFQ. When set, requires block_rfq scope instead of trade scope. Block RFQ MMP status is completely separate from normal order/quote MMP status.",
                        "name": "block_rfq",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_mmp_status_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_mmp_status_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_mmp_status_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_mmp_status_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_mmp_status_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "If true, indicates that the MMP status is for Block RFQ. Block RFQ MMP status is completely separate from normal order/quote MMP status.",
                            "name": "block_rfq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Timestamp (milliseconds since the UNIX epoch) until the user will be frozen - 0 means that the user is frozen until manual reset.",
                            "name": "frozen_until",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Index identifier, matches (base) cryptocurrency with quote currency",
                            "name": "index_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Triggered mmp group, this parameter is optional (appears only for Mass Quote orders trigger)",
                            "name": "mmp_group",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_mmp_status_response_result"
                }
            ]
        },
        "name": "private_get_mmp_status",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "If true, indicates that the MMP status is for Block RFQ. Block RFQ MMP status is completely separate from normal order/quote MMP status.",
                    "name": "block_rfq",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Timestamp (milliseconds since the UNIX epoch) until the user will be frozen - 0 means that the user is frozen until manual reset.",
                    "name": "frozen_until",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Index identifier, matches (base) cryptocurrency with quote currency",
                    "name": "index_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Triggered mmp group, this parameter is optional (appears only for Mass Quote orders trigger)",
                    "name": "mmp_group",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_mmp_status_response_result"
        }
    },
    {
        "comment": "Retrieves list of user's open orders across many currencies.",
        "endpoint": {
            "name": "private_get_open_orders",
            "path": "/private/get_open_orders",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "future",
                            "option_combo",
                            "future_combo",
                            "option",
                            "spot"
                        ],
                        "name": "kind"
                    },
                    {
                        "items": [
                            "trailing_all",
                            "stop_limit",
                            "trailing_stop",
                            "all",
                            "take_all",
                            "stop_all",
                            "take_market",
                            "limit",
                            "take_limit",
                            "stop_market",
                            "trigger_all"
                        ],
                        "name": "type"
                    }
                ],
                "fields": [
                    {
                        "comment": "Instrument kind, if not provided instruments of all kinds are considered",
                        "name": "kind",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "kind"
                        }
                    },
                    {
                        "comment": "Order type, default - all",
                        "name": "type",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "type"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_open_orders_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_open_orders_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_open_orders_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_open_orders_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_open_orders_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "If order is a quote. Present only if true.",
                            "name": "quote",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Whether the trigger order has been triggered",
                            "name": "triggered",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "optional field with value true added only when created with Mobile Application",
                            "name": "mobile",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The name of the application that placed the order on behalf of the user (optional).",
                            "name": "app_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                            "name": "implv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                            "name": "refresh_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Option price in USD (Only if advanced=\"usd\")",
                            "name": "usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The Ids of the orders that will be triggered if the order is filled",
                            "name": "oto_order_ids",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Average fill price of the order",
                            "name": "average_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true for post-only orders only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                            "name": "filled_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                            "name": "trigger",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                            "name": "trigger_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                            "name": "is_secondary_oto",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                            "name": "replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "mmp_group",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is a MMP order, otherwise false.",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "last_update_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                            "name": "cancel_reason",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order was cancelled by mmp trigger (optional)",
                            "name": "mmp_cancelled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                            "name": "order_state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                            "name": "is_rebalance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                            "name": "reject_post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User defined label (up to 64 characters)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                            "name": "is_liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number or string"
                            }
                        },
                        {
                            "comment": "true if created via Deribit frontend (optional)",
                            "name": "web",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                            "name": "time_in_force",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                            "name": "trigger_reference_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                            "name": "display_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                            "name": "is_primary_otoco",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Original order type. Optional field",
                            "name": "original_order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order made from block_trade trade, added only in that case.",
                            "name": "block_trade",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Trigger price (Only for future trigger orders)",
                            "name": "trigger_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                            "name": "oco_ref",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                            "name": "trigger_offset",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                            "name": "auto_replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                            "name": "trigger_fill_condition",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "primary_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_open_orders_response_result"
                }
            ]
        },
        "name": "private_get_open_orders",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "If order is a quote. Present only if true.",
                    "name": "quote",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Whether the trigger order has been triggered",
                    "name": "triggered",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "optional field with value true added only when created with Mobile Application",
                    "name": "mobile",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The name of the application that placed the order on behalf of the user (optional).",
                    "name": "app_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                    "name": "implv",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                    "name": "refresh_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Option price in USD (Only if advanced=\"usd\")",
                    "name": "usd",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The Ids of the orders that will be triggered if the order is filled",
                    "name": "oto_order_ids",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if created with API",
                    "name": "api",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Average fill price of the order",
                    "name": "average_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                    "name": "advanced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Unique order identifier",
                    "name": "order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true for post-only orders only",
                    "name": "post_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                    "name": "filled_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                    "name": "trigger",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                    "name": "trigger_order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Direction: buy, or sell",
                    "name": "direction",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                    "name": "contracts",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                    "name": "is_secondary_oto",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                    "name": "replaced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "mmp_group",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if the order is a MMP order, otherwise false.",
                    "name": "mmp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "last_update_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                    "name": "cancel_reason",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if order was cancelled by mmp trigger (optional)",
                    "name": "mmp_cancelled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "quote_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                    "name": "order_state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                    "name": "is_rebalance",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                    "name": "reject_post_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "User defined label (up to 64 characters)",
                    "name": "label",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                    "name": "is_liquidation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                    "name": "price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number or string"
                    }
                },
                {
                    "comment": "true if created via Deribit frontend (optional)",
                    "name": "web",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                    "name": "time_in_force",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                    "name": "trigger_reference_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                    "name": "display_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                    "name": "order_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                    "name": "is_primary_otoco",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Original order type. Optional field",
                    "name": "original_order_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if order made from block_trade trade, added only in that case.",
                    "name": "block_trade",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Trigger price (Only for future trigger orders)",
                    "name": "trigger_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                    "name": "oco_ref",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                    "name": "trigger_offset",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "quote_set_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                    "name": "auto_replaced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                    "name": "reduce_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                    "name": "amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                    "name": "risk_reducing",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Unique instrument identifier",
                    "name": "instrument_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                    "name": "trigger_fill_condition",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Unique order identifier",
                    "name": "primary_order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_open_orders_response_result"
        }
    },
    {
        "comment": "Retrieves list of user's open orders.",
        "endpoint": {
            "name": "private_get_open_orders_by_currency",
            "path": "/private/get_open_orders_by_currency",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    },
                    {
                        "items": [
                            "future",
                            "option_combo",
                            "future_combo",
                            "option",
                            "spot"
                        ],
                        "name": "kind"
                    },
                    {
                        "items": [
                            "trailing_all",
                            "stop_limit",
                            "trailing_stop",
                            "all",
                            "take_all",
                            "stop_all",
                            "take_market",
                            "limit",
                            "take_limit",
                            "stop_market",
                            "trigger_all"
                        ],
                        "name": "type"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Instrument kind, if not provided instruments of all kinds are considered",
                        "name": "kind",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "kind"
                        }
                    },
                    {
                        "comment": "Order type, default - all",
                        "name": "type",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "type"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_open_orders_by_currency_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_open_orders_by_currency_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_open_orders_by_currency_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_open_orders_by_currency_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_open_orders_by_currency_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "If order is a quote. Present only if true.",
                            "name": "quote",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Whether the trigger order has been triggered",
                            "name": "triggered",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "optional field with value true added only when created with Mobile Application",
                            "name": "mobile",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The name of the application that placed the order on behalf of the user (optional).",
                            "name": "app_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                            "name": "implv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                            "name": "refresh_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Option price in USD (Only if advanced=\"usd\")",
                            "name": "usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The Ids of the orders that will be triggered if the order is filled",
                            "name": "oto_order_ids",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Average fill price of the order",
                            "name": "average_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true for post-only orders only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                            "name": "filled_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                            "name": "trigger",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                            "name": "trigger_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                            "name": "is_secondary_oto",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                            "name": "replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "mmp_group",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is a MMP order, otherwise false.",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "last_update_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                            "name": "cancel_reason",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order was cancelled by mmp trigger (optional)",
                            "name": "mmp_cancelled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                            "name": "order_state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                            "name": "is_rebalance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                            "name": "reject_post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User defined label (up to 64 characters)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                            "name": "is_liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number or string"
                            }
                        },
                        {
                            "comment": "true if created via Deribit frontend (optional)",
                            "name": "web",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                            "name": "time_in_force",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                            "name": "trigger_reference_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                            "name": "display_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                            "name": "is_primary_otoco",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Original order type. Optional field",
                            "name": "original_order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order made from block_trade trade, added only in that case.",
                            "name": "block_trade",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Trigger price (Only for future trigger orders)",
                            "name": "trigger_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                            "name": "oco_ref",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                            "name": "trigger_offset",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                            "name": "auto_replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                            "name": "trigger_fill_condition",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "primary_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_open_orders_by_currency_response_result"
                }
            ]
        },
        "name": "private_get_open_orders_by_currency",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "If order is a quote. Present only if true.",
                    "name": "quote",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Whether the trigger order has been triggered",
                    "name": "triggered",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "optional field with value true added only when created with Mobile Application",
                    "name": "mobile",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The name of the application that placed the order on behalf of the user (optional).",
                    "name": "app_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                    "name": "implv",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                    "name": "refresh_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Option price in USD (Only if advanced=\"usd\")",
                    "name": "usd",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The Ids of the orders that will be triggered if the order is filled",
                    "name": "oto_order_ids",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if created with API",
                    "name": "api",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Average fill price of the order",
                    "name": "average_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                    "name": "advanced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Unique order identifier",
                    "name": "order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true for post-only orders only",
                    "name": "post_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                    "name": "filled_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                    "name": "trigger",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                    "name": "trigger_order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Direction: buy, or sell",
                    "name": "direction",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                    "name": "contracts",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                    "name": "is_secondary_oto",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                    "name": "replaced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "mmp_group",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if the order is a MMP order, otherwise false.",
                    "name": "mmp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "last_update_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                    "name": "cancel_reason",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if order was cancelled by mmp trigger (optional)",
                    "name": "mmp_cancelled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "quote_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                    "name": "order_state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                    "name": "is_rebalance",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                    "name": "reject_post_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "User defined label (up to 64 characters)",
                    "name": "label",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                    "name": "is_liquidation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                    "name": "price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number or string"
                    }
                },
                {
                    "comment": "true if created via Deribit frontend (optional)",
                    "name": "web",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                    "name": "time_in_force",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                    "name": "trigger_reference_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                    "name": "display_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                    "name": "order_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                    "name": "is_primary_otoco",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Original order type. Optional field",
                    "name": "original_order_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if order made from block_trade trade, added only in that case.",
                    "name": "block_trade",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Trigger price (Only for future trigger orders)",
                    "name": "trigger_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                    "name": "oco_ref",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                    "name": "trigger_offset",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "quote_set_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                    "name": "auto_replaced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                    "name": "reduce_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                    "name": "amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                    "name": "risk_reducing",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Unique instrument identifier",
                    "name": "instrument_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                    "name": "trigger_fill_condition",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Unique order identifier",
                    "name": "primary_order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_open_orders_by_currency_response_result"
        }
    },
    {
        "comment": "Retrieves list of user's open orders within a given Instrument.",
        "endpoint": {
            "name": "private_get_open_orders_by_instrument",
            "path": "/private/get_open_orders_by_instrument",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "trailing_all",
                            "stop_limit",
                            "trailing_stop",
                            "all",
                            "take_all",
                            "stop_all",
                            "take_market",
                            "limit",
                            "take_limit",
                            "stop_market",
                            "trigger_all"
                        ],
                        "name": "type"
                    }
                ],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Order type, default - all",
                        "name": "type",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "type"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_open_orders_by_instrument_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_open_orders_by_instrument_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_open_orders_by_instrument_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_open_orders_by_instrument_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_open_orders_by_instrument_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "If order is a quote. Present only if true.",
                            "name": "quote",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Whether the trigger order has been triggered",
                            "name": "triggered",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "optional field with value true added only when created with Mobile Application",
                            "name": "mobile",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The name of the application that placed the order on behalf of the user (optional).",
                            "name": "app_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                            "name": "implv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                            "name": "refresh_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Option price in USD (Only if advanced=\"usd\")",
                            "name": "usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The Ids of the orders that will be triggered if the order is filled",
                            "name": "oto_order_ids",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Average fill price of the order",
                            "name": "average_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true for post-only orders only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                            "name": "filled_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                            "name": "trigger",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                            "name": "trigger_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                            "name": "is_secondary_oto",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                            "name": "replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "mmp_group",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is a MMP order, otherwise false.",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "last_update_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                            "name": "cancel_reason",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order was cancelled by mmp trigger (optional)",
                            "name": "mmp_cancelled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                            "name": "order_state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                            "name": "is_rebalance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                            "name": "reject_post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User defined label (up to 64 characters)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                            "name": "is_liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number or string"
                            }
                        },
                        {
                            "comment": "true if created via Deribit frontend (optional)",
                            "name": "web",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                            "name": "time_in_force",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                            "name": "trigger_reference_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                            "name": "display_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                            "name": "is_primary_otoco",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Original order type. Optional field",
                            "name": "original_order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order made from block_trade trade, added only in that case.",
                            "name": "block_trade",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Trigger price (Only for future trigger orders)",
                            "name": "trigger_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                            "name": "oco_ref",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                            "name": "trigger_offset",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                            "name": "auto_replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                            "name": "trigger_fill_condition",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "primary_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_open_orders_by_instrument_response_result"
                }
            ]
        },
        "name": "private_get_open_orders_by_instrument",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "If order is a quote. Present only if true.",
                    "name": "quote",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Whether the trigger order has been triggered",
                    "name": "triggered",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "optional field with value true added only when created with Mobile Application",
                    "name": "mobile",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The name of the application that placed the order on behalf of the user (optional).",
                    "name": "app_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                    "name": "implv",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                    "name": "refresh_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Option price in USD (Only if advanced=\"usd\")",
                    "name": "usd",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The Ids of the orders that will be triggered if the order is filled",
                    "name": "oto_order_ids",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if created with API",
                    "name": "api",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Average fill price of the order",
                    "name": "average_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                    "name": "advanced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Unique order identifier",
                    "name": "order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true for post-only orders only",
                    "name": "post_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                    "name": "filled_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                    "name": "trigger",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                    "name": "trigger_order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Direction: buy, or sell",
                    "name": "direction",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                    "name": "contracts",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                    "name": "is_secondary_oto",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                    "name": "replaced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "mmp_group",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if the order is a MMP order, otherwise false.",
                    "name": "mmp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "last_update_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                    "name": "cancel_reason",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if order was cancelled by mmp trigger (optional)",
                    "name": "mmp_cancelled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "quote_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                    "name": "order_state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                    "name": "is_rebalance",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                    "name": "reject_post_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "User defined label (up to 64 characters)",
                    "name": "label",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                    "name": "is_liquidation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                    "name": "price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number or string"
                    }
                },
                {
                    "comment": "true if created via Deribit frontend (optional)",
                    "name": "web",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                    "name": "time_in_force",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                    "name": "trigger_reference_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                    "name": "display_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                    "name": "order_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                    "name": "is_primary_otoco",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Original order type. Optional field",
                    "name": "original_order_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if order made from block_trade trade, added only in that case.",
                    "name": "block_trade",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Trigger price (Only for future trigger orders)",
                    "name": "trigger_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                    "name": "oco_ref",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                    "name": "trigger_offset",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "quote_set_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                    "name": "auto_replaced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                    "name": "reduce_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                    "name": "amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                    "name": "risk_reducing",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Unique instrument identifier",
                    "name": "instrument_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                    "name": "trigger_fill_condition",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Unique order identifier",
                    "name": "primary_order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_open_orders_by_instrument_response_result"
        }
    },
    {
        "comment": "Retrieves list of user's open orders for given currency and label.",
        "endpoint": {
            "name": "private_get_open_orders_by_label",
            "path": "/private/get_open_orders_by_label",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "user defined label for the order (maximum 64 characters)",
                        "name": "label",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_open_orders_by_label_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_open_orders_by_label_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_open_orders_by_label_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_open_orders_by_label_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_open_orders_by_label_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "If order is a quote. Present only if true.",
                            "name": "quote",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Whether the trigger order has been triggered",
                            "name": "triggered",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "optional field with value true added only when created with Mobile Application",
                            "name": "mobile",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The name of the application that placed the order on behalf of the user (optional).",
                            "name": "app_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                            "name": "implv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                            "name": "refresh_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Option price in USD (Only if advanced=\"usd\")",
                            "name": "usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The Ids of the orders that will be triggered if the order is filled",
                            "name": "oto_order_ids",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Average fill price of the order",
                            "name": "average_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true for post-only orders only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                            "name": "filled_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                            "name": "trigger",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                            "name": "trigger_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                            "name": "is_secondary_oto",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                            "name": "replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "mmp_group",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is a MMP order, otherwise false.",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "last_update_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                            "name": "cancel_reason",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order was cancelled by mmp trigger (optional)",
                            "name": "mmp_cancelled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                            "name": "order_state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                            "name": "is_rebalance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                            "name": "reject_post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User defined label (up to 64 characters)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                            "name": "is_liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number or string"
                            }
                        },
                        {
                            "comment": "true if created via Deribit frontend (optional)",
                            "name": "web",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                            "name": "time_in_force",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                            "name": "trigger_reference_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                            "name": "display_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                            "name": "is_primary_otoco",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Original order type. Optional field",
                            "name": "original_order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order made from block_trade trade, added only in that case.",
                            "name": "block_trade",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Trigger price (Only for future trigger orders)",
                            "name": "trigger_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                            "name": "oco_ref",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                            "name": "trigger_offset",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                            "name": "auto_replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                            "name": "trigger_fill_condition",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "primary_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_open_orders_by_label_response_result"
                }
            ]
        },
        "name": "private_get_open_orders_by_label",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "If order is a quote. Present only if true.",
                    "name": "quote",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Whether the trigger order has been triggered",
                    "name": "triggered",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "optional field with value true added only when created with Mobile Application",
                    "name": "mobile",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The name of the application that placed the order on behalf of the user (optional).",
                    "name": "app_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                    "name": "implv",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                    "name": "refresh_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Option price in USD (Only if advanced=\"usd\")",
                    "name": "usd",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The Ids of the orders that will be triggered if the order is filled",
                    "name": "oto_order_ids",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if created with API",
                    "name": "api",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Average fill price of the order",
                    "name": "average_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                    "name": "advanced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Unique order identifier",
                    "name": "order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true for post-only orders only",
                    "name": "post_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                    "name": "filled_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                    "name": "trigger",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                    "name": "trigger_order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Direction: buy, or sell",
                    "name": "direction",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                    "name": "contracts",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                    "name": "is_secondary_oto",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                    "name": "replaced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "mmp_group",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if the order is a MMP order, otherwise false.",
                    "name": "mmp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "last_update_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                    "name": "cancel_reason",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if order was cancelled by mmp trigger (optional)",
                    "name": "mmp_cancelled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "quote_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                    "name": "order_state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                    "name": "is_rebalance",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                    "name": "reject_post_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "User defined label (up to 64 characters)",
                    "name": "label",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                    "name": "is_liquidation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                    "name": "price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number or string"
                    }
                },
                {
                    "comment": "true if created via Deribit frontend (optional)",
                    "name": "web",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                    "name": "time_in_force",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                    "name": "trigger_reference_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                    "name": "display_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                    "name": "order_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                    "name": "is_primary_otoco",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Original order type. Optional field",
                    "name": "original_order_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if order made from block_trade trade, added only in that case.",
                    "name": "block_trade",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Trigger price (Only for future trigger orders)",
                    "name": "trigger_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                    "name": "oco_ref",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                    "name": "trigger_offset",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "quote_set_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                    "name": "auto_replaced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                    "name": "reduce_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                    "name": "amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                    "name": "risk_reducing",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Unique instrument identifier",
                    "name": "instrument_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                    "name": "trigger_fill_condition",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Unique order identifier",
                    "name": "primary_order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_open_orders_by_label_response_result"
        }
    },
    {
        "comment": "Retrieves history of orders that have been partially or fully filled.",
        "endpoint": {
            "name": "private_get_order_history_by_currency",
            "path": "/private/get_order_history_by_currency",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    },
                    {
                        "items": [
                            "any",
                            "future",
                            "option_combo",
                            "future_combo",
                            "option",
                            "combo",
                            "spot"
                        ],
                        "name": "kind"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Instrument kind, \"combo\" for any combo or \"any\" for all. If not provided instruments of all kinds are considered",
                        "name": "kind",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "kind"
                        }
                    },
                    {
                        "comment": "Number of requested items, default - 20, maximum - 1000",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The offset for pagination, default - 0",
                        "name": "offset",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Include in result orders older than 2 days, default - false",
                        "name": "include_old",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Include in result fully unfilled closed orders, default - false",
                        "name": "include_unfilled",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "When set to true, the API response format changes from a simple list of orders to an object containing the orders and a continuation token.",
                        "name": "with_continuation",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Continuation token for pagination",
                        "name": "continuation",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Determines whether historical trade and order records should be retrieved. false (default): Returns recent records: orders for 30 min, trades for 24h. true: Fetches historical records, available after a short delay due to indexing. Recent data is not included. \ud83d\udcd6 Related Support Article: Accessing historical trades and orders using API",
                        "name": "historical",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_order_history_by_currency_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_order_history_by_currency_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_order_history_by_currency_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_order_history_by_currency_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_order_history_by_currency_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "If order is a quote. Present only if true.",
                            "name": "quote",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Whether the trigger order has been triggered",
                            "name": "triggered",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "optional field with value true added only when created with Mobile Application",
                            "name": "mobile",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The name of the application that placed the order on behalf of the user (optional).",
                            "name": "app_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                            "name": "implv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                            "name": "refresh_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Option price in USD (Only if advanced=\"usd\")",
                            "name": "usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The Ids of the orders that will be triggered if the order is filled",
                            "name": "oto_order_ids",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Average fill price of the order",
                            "name": "average_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true for post-only orders only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                            "name": "filled_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                            "name": "trigger",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                            "name": "trigger_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                            "name": "is_secondary_oto",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                            "name": "replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "mmp_group",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is a MMP order, otherwise false.",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "last_update_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                            "name": "cancel_reason",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order was cancelled by mmp trigger (optional)",
                            "name": "mmp_cancelled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                            "name": "order_state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                            "name": "is_rebalance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                            "name": "reject_post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User defined label (up to 64 characters)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                            "name": "is_liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number or string"
                            }
                        },
                        {
                            "comment": "true if created via Deribit frontend (optional)",
                            "name": "web",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                            "name": "time_in_force",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                            "name": "trigger_reference_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                            "name": "display_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                            "name": "is_primary_otoco",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Original order type. Optional field",
                            "name": "original_order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order made from block_trade trade, added only in that case.",
                            "name": "block_trade",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Trigger price (Only for future trigger orders)",
                            "name": "trigger_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                            "name": "oco_ref",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                            "name": "trigger_offset",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                            "name": "auto_replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                            "name": "trigger_fill_condition",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "primary_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_order_history_by_currency_response_result"
                }
            ]
        },
        "name": "private_get_order_history_by_currency",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "If order is a quote. Present only if true.",
                    "name": "quote",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Whether the trigger order has been triggered",
                    "name": "triggered",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "optional field with value true added only when created with Mobile Application",
                    "name": "mobile",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The name of the application that placed the order on behalf of the user (optional).",
                    "name": "app_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                    "name": "implv",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                    "name": "refresh_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Option price in USD (Only if advanced=\"usd\")",
                    "name": "usd",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The Ids of the orders that will be triggered if the order is filled",
                    "name": "oto_order_ids",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if created with API",
                    "name": "api",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Average fill price of the order",
                    "name": "average_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                    "name": "advanced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Unique order identifier",
                    "name": "order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true for post-only orders only",
                    "name": "post_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                    "name": "filled_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                    "name": "trigger",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                    "name": "trigger_order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Direction: buy, or sell",
                    "name": "direction",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                    "name": "contracts",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                    "name": "is_secondary_oto",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                    "name": "replaced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "mmp_group",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if the order is a MMP order, otherwise false.",
                    "name": "mmp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "last_update_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                    "name": "cancel_reason",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if order was cancelled by mmp trigger (optional)",
                    "name": "mmp_cancelled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "quote_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                    "name": "order_state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                    "name": "is_rebalance",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                    "name": "reject_post_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "User defined label (up to 64 characters)",
                    "name": "label",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                    "name": "is_liquidation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                    "name": "price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number or string"
                    }
                },
                {
                    "comment": "true if created via Deribit frontend (optional)",
                    "name": "web",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                    "name": "time_in_force",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                    "name": "trigger_reference_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                    "name": "display_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                    "name": "order_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                    "name": "is_primary_otoco",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Original order type. Optional field",
                    "name": "original_order_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if order made from block_trade trade, added only in that case.",
                    "name": "block_trade",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Trigger price (Only for future trigger orders)",
                    "name": "trigger_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                    "name": "oco_ref",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                    "name": "trigger_offset",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "quote_set_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                    "name": "auto_replaced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                    "name": "reduce_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                    "name": "amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                    "name": "risk_reducing",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Unique instrument identifier",
                    "name": "instrument_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                    "name": "trigger_fill_condition",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Unique order identifier",
                    "name": "primary_order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_order_history_by_currency_response_result"
        }
    },
    {
        "comment": "Retrieves history of orders that have been partially or fully filled.",
        "endpoint": {
            "name": "private_get_order_history_by_instrument",
            "path": "/private/get_order_history_by_instrument",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Number of requested items, default - 20, maximum - 1000",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The offset for pagination, default - 0",
                        "name": "offset",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Include in result orders older than 2 days, default - false",
                        "name": "include_old",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Include in result fully unfilled closed orders, default - false",
                        "name": "include_unfilled",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "When set to true, the API response format changes from a simple list of orders to an object containing the orders and a continuation token.",
                        "name": "with_continuation",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Continuation token for pagination",
                        "name": "continuation",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Determines whether historical trade and order records should be retrieved. false (default): Returns recent records: orders for 30 min, trades for 24h. true: Fetches historical records, available after a short delay due to indexing. Recent data is not included. \ud83d\udcd6 Related Support Article: Accessing historical trades and orders using API",
                        "name": "historical",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_order_history_by_instrument_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_order_history_by_instrument_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_order_history_by_instrument_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_order_history_by_instrument_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_order_history_by_instrument_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "If order is a quote. Present only if true.",
                            "name": "quote",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Whether the trigger order has been triggered",
                            "name": "triggered",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "optional field with value true added only when created with Mobile Application",
                            "name": "mobile",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The name of the application that placed the order on behalf of the user (optional).",
                            "name": "app_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                            "name": "implv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                            "name": "refresh_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Option price in USD (Only if advanced=\"usd\")",
                            "name": "usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The Ids of the orders that will be triggered if the order is filled",
                            "name": "oto_order_ids",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Average fill price of the order",
                            "name": "average_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true for post-only orders only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                            "name": "filled_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                            "name": "trigger",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                            "name": "trigger_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                            "name": "is_secondary_oto",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                            "name": "replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "mmp_group",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is a MMP order, otherwise false.",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "last_update_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                            "name": "cancel_reason",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order was cancelled by mmp trigger (optional)",
                            "name": "mmp_cancelled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                            "name": "order_state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                            "name": "is_rebalance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                            "name": "reject_post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User defined label (up to 64 characters)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                            "name": "is_liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number or string"
                            }
                        },
                        {
                            "comment": "true if created via Deribit frontend (optional)",
                            "name": "web",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                            "name": "time_in_force",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                            "name": "trigger_reference_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                            "name": "display_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                            "name": "is_primary_otoco",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Original order type. Optional field",
                            "name": "original_order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order made from block_trade trade, added only in that case.",
                            "name": "block_trade",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Trigger price (Only for future trigger orders)",
                            "name": "trigger_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                            "name": "oco_ref",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                            "name": "trigger_offset",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                            "name": "auto_replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                            "name": "trigger_fill_condition",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "primary_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_order_history_by_instrument_response_result"
                }
            ]
        },
        "name": "private_get_order_history_by_instrument",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "If order is a quote. Present only if true.",
                    "name": "quote",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Whether the trigger order has been triggered",
                    "name": "triggered",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "optional field with value true added only when created with Mobile Application",
                    "name": "mobile",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The name of the application that placed the order on behalf of the user (optional).",
                    "name": "app_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                    "name": "implv",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                    "name": "refresh_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Option price in USD (Only if advanced=\"usd\")",
                    "name": "usd",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The Ids of the orders that will be triggered if the order is filled",
                    "name": "oto_order_ids",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if created with API",
                    "name": "api",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Average fill price of the order",
                    "name": "average_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                    "name": "advanced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Unique order identifier",
                    "name": "order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true for post-only orders only",
                    "name": "post_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                    "name": "filled_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                    "name": "trigger",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                    "name": "trigger_order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Direction: buy, or sell",
                    "name": "direction",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                    "name": "contracts",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                    "name": "is_secondary_oto",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                    "name": "replaced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "mmp_group",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if the order is a MMP order, otherwise false.",
                    "name": "mmp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "last_update_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                    "name": "cancel_reason",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if order was cancelled by mmp trigger (optional)",
                    "name": "mmp_cancelled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "quote_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                    "name": "order_state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                    "name": "is_rebalance",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                    "name": "reject_post_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "User defined label (up to 64 characters)",
                    "name": "label",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                    "name": "is_liquidation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                    "name": "price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number or string"
                    }
                },
                {
                    "comment": "true if created via Deribit frontend (optional)",
                    "name": "web",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                    "name": "time_in_force",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                    "name": "trigger_reference_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                    "name": "display_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                    "name": "order_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                    "name": "is_primary_otoco",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Original order type. Optional field",
                    "name": "original_order_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if order made from block_trade trade, added only in that case.",
                    "name": "block_trade",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Trigger price (Only for future trigger orders)",
                    "name": "trigger_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                    "name": "oco_ref",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                    "name": "trigger_offset",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "quote_set_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                    "name": "auto_replaced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                    "name": "reduce_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                    "name": "amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                    "name": "risk_reducing",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Unique instrument identifier",
                    "name": "instrument_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                    "name": "trigger_fill_condition",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Unique order identifier",
                    "name": "primary_order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_order_history_by_instrument_response_result"
        }
    },
    {
        "comment": "Retrieves initial margins of given orders",
        "endpoint": {
            "name": "private_get_order_margin_by_ids",
            "path": "/private/get_order_margin_by_ids",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Ids of orders",
                        "name": "ids",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_order_margin_by_ids_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_order_margin_by_ids_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_order_margin_by_ids_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_order_margin_by_ids_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_order_margin_by_ids_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Initial margin of order",
                            "name": "initial_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Currency of initial margin",
                            "name": "initial_margin_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_order_margin_by_ids_response_result"
                }
            ]
        },
        "name": "private_get_order_margin_by_ids",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Initial margin of order",
                    "name": "initial_margin",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Currency of initial margin",
                    "name": "initial_margin_currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Unique order identifier",
                    "name": "order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_order_margin_by_ids_response_result"
        }
    },
    {
        "comment": "Retrieve the current state of an order.",
        "endpoint": {
            "name": "private_get_order_state",
            "path": "/private/get_order_state",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The order id",
                        "name": "order_id",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_order_state_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_order_state_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_order_state_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_order_state_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_order_state_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "If order is a quote. Present only if true.",
                            "name": "quote",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Whether the trigger order has been triggered",
                            "name": "triggered",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "optional field with value true added only when created with Mobile Application",
                            "name": "mobile",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The name of the application that placed the order on behalf of the user (optional).",
                            "name": "app_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                            "name": "implv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                            "name": "refresh_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Option price in USD (Only if advanced=\"usd\")",
                            "name": "usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The Ids of the orders that will be triggered if the order is filled",
                            "name": "oto_order_ids",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Average fill price of the order",
                            "name": "average_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true for post-only orders only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                            "name": "filled_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                            "name": "trigger",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                            "name": "trigger_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                            "name": "is_secondary_oto",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                            "name": "replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "mmp_group",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is a MMP order, otherwise false.",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "last_update_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                            "name": "cancel_reason",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order was cancelled by mmp trigger (optional)",
                            "name": "mmp_cancelled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                            "name": "order_state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                            "name": "is_rebalance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                            "name": "reject_post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User defined label (up to 64 characters)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                            "name": "is_liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number or string"
                            }
                        },
                        {
                            "comment": "true if created via Deribit frontend (optional)",
                            "name": "web",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                            "name": "time_in_force",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                            "name": "trigger_reference_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                            "name": "display_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                            "name": "is_primary_otoco",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Original order type. Optional field",
                            "name": "original_order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order made from block_trade trade, added only in that case.",
                            "name": "block_trade",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Trigger price (Only for future trigger orders)",
                            "name": "trigger_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                            "name": "oco_ref",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                            "name": "trigger_offset",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                            "name": "auto_replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                            "name": "trigger_fill_condition",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "primary_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_order_state_response_result"
                }
            ]
        },
        "name": "private_get_order_state",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "If order is a quote. Present only if true.",
                    "name": "quote",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Whether the trigger order has been triggered",
                    "name": "triggered",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "optional field with value true added only when created with Mobile Application",
                    "name": "mobile",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The name of the application that placed the order on behalf of the user (optional).",
                    "name": "app_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                    "name": "implv",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                    "name": "refresh_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Option price in USD (Only if advanced=\"usd\")",
                    "name": "usd",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The Ids of the orders that will be triggered if the order is filled",
                    "name": "oto_order_ids",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if created with API",
                    "name": "api",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Average fill price of the order",
                    "name": "average_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                    "name": "advanced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Unique order identifier",
                    "name": "order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true for post-only orders only",
                    "name": "post_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                    "name": "filled_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                    "name": "trigger",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                    "name": "trigger_order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Direction: buy, or sell",
                    "name": "direction",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                    "name": "contracts",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                    "name": "is_secondary_oto",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                    "name": "replaced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "mmp_group",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if the order is a MMP order, otherwise false.",
                    "name": "mmp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "last_update_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                    "name": "cancel_reason",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if order was cancelled by mmp trigger (optional)",
                    "name": "mmp_cancelled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "quote_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                    "name": "order_state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                    "name": "is_rebalance",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                    "name": "reject_post_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "User defined label (up to 64 characters)",
                    "name": "label",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                    "name": "is_liquidation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                    "name": "price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number or string"
                    }
                },
                {
                    "comment": "true if created via Deribit frontend (optional)",
                    "name": "web",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                    "name": "time_in_force",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                    "name": "trigger_reference_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                    "name": "display_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                    "name": "order_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                    "name": "is_primary_otoco",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Original order type. Optional field",
                    "name": "original_order_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if order made from block_trade trade, added only in that case.",
                    "name": "block_trade",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Trigger price (Only for future trigger orders)",
                    "name": "trigger_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                    "name": "oco_ref",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                    "name": "trigger_offset",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "quote_set_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                    "name": "auto_replaced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                    "name": "reduce_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                    "name": "amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                    "name": "risk_reducing",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Unique instrument identifier",
                    "name": "instrument_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                    "name": "trigger_fill_condition",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Unique order identifier",
                    "name": "primary_order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_order_state_response_result"
        }
    },
    {
        "comment": "Retrieve the state of recent orders with a given label.",
        "endpoint": {
            "name": "private_get_order_state_by_label",
            "path": "/private/get_order_state_by_label",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "user defined label for the order (maximum 64 characters)",
                        "name": "label",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_order_state_by_label_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_order_state_by_label_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_order_state_by_label_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_order_state_by_label_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_order_state_by_label_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "If order is a quote. Present only if true.",
                            "name": "quote",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Whether the trigger order has been triggered",
                            "name": "triggered",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "optional field with value true added only when created with Mobile Application",
                            "name": "mobile",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The name of the application that placed the order on behalf of the user (optional).",
                            "name": "app_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                            "name": "implv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                            "name": "refresh_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Option price in USD (Only if advanced=\"usd\")",
                            "name": "usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The Ids of the orders that will be triggered if the order is filled",
                            "name": "oto_order_ids",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Average fill price of the order",
                            "name": "average_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true for post-only orders only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                            "name": "filled_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                            "name": "trigger",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                            "name": "trigger_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                            "name": "is_secondary_oto",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                            "name": "replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "mmp_group",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is a MMP order, otherwise false.",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "last_update_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                            "name": "cancel_reason",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order was cancelled by mmp trigger (optional)",
                            "name": "mmp_cancelled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                            "name": "order_state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                            "name": "is_rebalance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                            "name": "reject_post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User defined label (up to 64 characters)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                            "name": "is_liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number or string"
                            }
                        },
                        {
                            "comment": "true if created via Deribit frontend (optional)",
                            "name": "web",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                            "name": "time_in_force",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                            "name": "trigger_reference_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                            "name": "display_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                            "name": "is_primary_otoco",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Original order type. Optional field",
                            "name": "original_order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order made from block_trade trade, added only in that case.",
                            "name": "block_trade",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Trigger price (Only for future trigger orders)",
                            "name": "trigger_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                            "name": "oco_ref",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                            "name": "trigger_offset",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                            "name": "auto_replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                            "name": "trigger_fill_condition",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "primary_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_order_state_by_label_response_result"
                }
            ]
        },
        "name": "private_get_order_state_by_label",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "If order is a quote. Present only if true.",
                    "name": "quote",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Whether the trigger order has been triggered",
                    "name": "triggered",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "optional field with value true added only when created with Mobile Application",
                    "name": "mobile",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The name of the application that placed the order on behalf of the user (optional).",
                    "name": "app_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                    "name": "implv",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                    "name": "refresh_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Option price in USD (Only if advanced=\"usd\")",
                    "name": "usd",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The Ids of the orders that will be triggered if the order is filled",
                    "name": "oto_order_ids",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if created with API",
                    "name": "api",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Average fill price of the order",
                    "name": "average_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                    "name": "advanced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Unique order identifier",
                    "name": "order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true for post-only orders only",
                    "name": "post_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                    "name": "filled_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                    "name": "trigger",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                    "name": "trigger_order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Direction: buy, or sell",
                    "name": "direction",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                    "name": "contracts",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                    "name": "is_secondary_oto",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                    "name": "replaced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "mmp_group",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if the order is a MMP order, otherwise false.",
                    "name": "mmp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "last_update_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                    "name": "cancel_reason",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if order was cancelled by mmp trigger (optional)",
                    "name": "mmp_cancelled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "quote_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                    "name": "order_state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                    "name": "is_rebalance",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                    "name": "reject_post_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "User defined label (up to 64 characters)",
                    "name": "label",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                    "name": "is_liquidation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                    "name": "price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number or string"
                    }
                },
                {
                    "comment": "true if created via Deribit frontend (optional)",
                    "name": "web",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                    "name": "time_in_force",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                    "name": "trigger_reference_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                    "name": "display_amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                    "name": "order_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                    "name": "is_primary_otoco",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Original order type. Optional field",
                    "name": "original_order_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if order made from block_trade trade, added only in that case.",
                    "name": "block_trade",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Trigger price (Only for future trigger orders)",
                    "name": "trigger_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                    "name": "oco_ref",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                    "name": "trigger_offset",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                    "name": "quote_set_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                    "name": "auto_replaced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                    "name": "reduce_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                    "name": "amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                    "name": "risk_reducing",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Unique instrument identifier",
                    "name": "instrument_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                    "name": "trigger_fill_condition",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Unique order identifier",
                    "name": "primary_order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_order_state_by_label_response_result"
        }
    },
    {
        "comment": "Retrieves detailed log of the user's trigger orders.",
        "endpoint": {
            "name": "private_get_trigger_order_history",
            "path": "/private/get_trigger_order_history",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Number of requested items, default - 20, maximum - 1000",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Continuation token for pagination",
                        "name": "continuation",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_trigger_order_history_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_trigger_order_history_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_trigger_order_history_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_trigger_order_history_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_trigger_order_history_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Continuation token for pagination.",
                            "name": "continuation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "entries",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_trigger_order_history_response_entry"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_trigger_order_history_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                            "name": "is_secondary_oto",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User defined label (presented only when previously set for order by user)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "last_update_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                            "name": "oco_ref",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order state: \"triggered\", \"cancelled\", or \"rejected\" with rejection reason (e.g. \"rejected:reduce_direction\").",
                            "name": "order_state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Requested order type: \"limit or \"market\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true for post-only orders only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Type of last request performed on the trigger order by user or system. \"cancel\" - when order was cancelled, \"trigger:order\" - when trigger order spawned market or limit order after being triggered",
                            "name": "request",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Source of the order that is linked to the trigger order.",
                            "name": "source",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                            "name": "trigger",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                            "name": "trigger_offset",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Id of the user order used for the trigger-order reference before triggering",
                            "name": "trigger_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trigger price (Only for future trigger orders)",
                            "name": "trigger_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_trigger_order_history_response_entry"
                }
            ]
        },
        "name": "private_get_trigger_order_history",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Continuation token for pagination.",
                    "name": "continuation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "",
                    "name": "entries",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_trigger_order_history_response_entry"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_trigger_order_history_response_result"
        }
    },
    {
        "comment": "Retrieve the latest user trades that have occurred for instruments in a specific currency symbol. To read subaccount trades, use subaccount_id parameter.",
        "endpoint": {
            "name": "private_get_user_trades_by_currency",
            "path": "/private/get_user_trades_by_currency",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    },
                    {
                        "items": [
                            "any",
                            "future",
                            "option_combo",
                            "future_combo",
                            "option",
                            "combo",
                            "spot"
                        ],
                        "name": "kind"
                    },
                    {
                        "items": [
                            "desc",
                            "default",
                            "asc"
                        ],
                        "name": "sorting"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Instrument kind, \"combo\" for any combo or \"any\" for all. If not provided instruments of all kinds are considered",
                        "name": "kind",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "kind"
                        }
                    },
                    {
                        "comment": "The ID of the first trade to be returned. Number for BTC trades, or hyphen name in ex. \"ETH-15\" # \"ETH_USDC-16\"",
                        "name": "start_id",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The ID of the last trade to be returned. Number for BTC trades, or hyphen name in ex. \"ETH-15\" # \"ETH_USDC-16\"",
                        "name": "end_id",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Number of requested items, default - 10, maximum - 1000",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The earliest timestamp to return result from (milliseconds since the UNIX epoch). When param is provided trades are returned from the earliest",
                        "name": "start_timestamp",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The most recent timestamp to return result from (milliseconds since the UNIX epoch). Only one of params: start_timestamp, end_timestamp is truly required",
                        "name": "end_timestamp",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Direction of results sorting (default value means no sorting, results will be returned in order in which they left the database)",
                        "name": "sorting",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "sorting"
                        }
                    },
                    {
                        "comment": "Determines whether historical trade and order records should be retrieved. false (default): Returns recent records: orders for 30 min, trades for 24h. true: Fetches historical records, available after a short delay due to indexing. Recent data is not included. \ud83d\udcd6 Related Support Article: Accessing historical trades and orders using API",
                        "name": "historical",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "The user id for the subaccount",
                        "name": "subaccount_id",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_user_trades_by_currency_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_user_trades_by_currency_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_user_trades_by_currency_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_user_trades_by_currency_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_currency_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "has_more",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "",
                            "name": "trades",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_user_trades_by_currency_response_trade"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_currency_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Unique (per currency) trade identifier",
                            "name": "trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction of the \"tick\" (0 = Plus Tick, 1 = Zero-Plus Tick, 2 = Minus Tick, 3 = Zero-Minus Tick).",
                            "name": "tick_direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "fee_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order was created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Advanced type of user order: \"usd\" or \"implv\" (only for options; omitted if not applicable)",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the user order (maker or taker), i.e. subscriber's order id that took part in the trade",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes what was role of users order: \"M\" when it was maker order, \"T\" when it was taker order",
                            "name": "liquidity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order is post-only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade size in contract units (optional, may be absent in historical trades)",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is MMP",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User's fee in units of the specified fee_currency",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "QuoteID of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Index Price at the moment of trade",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User defined label (presented only when previously set for order by user)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block trade id - when trade was part of a block trade",
                            "name": "block_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field containing combo instrument name if the trade is a combo trade",
                            "name": "combo_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Always null",
                            "name": "matching_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order type: \"limit, \"market\", or \"liquidation\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "List of allocations for Block RFQ pre-allocation. Each allocation specifies user_id, amount, and fee for the allocated part of the trade. For broker client allocations, a client_info object will be included.",
                            "name": "trade_allocations",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_user_trades_by_currency_response_trade_allocation"
                            }
                        },
                        {
                            "comment": "Profit and loss in base currency.",
                            "name": "profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp of the trade (milliseconds since the UNIX epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Option implied volatility for the price (Option only)",
                            "name": "iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\" or \"archive\" (if order was archived)",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Underlying price for implied volatility calculations (Options only)",
                            "name": "underlying_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ quote - when trade was part of the Block RFQ",
                            "name": "block_rfq_quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "QuoteSet of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Mark Price at the moment of trade",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ - when trade was part of the Block RFQ",
                            "name": "block_rfq_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Optional field containing combo trade identifier if the trade is a combo trade",
                            "name": "combo_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is reduce-only",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field (only for trades caused by liquidation): \"M\" when maker side of trade was under liquidation, \"T\" when taker side was under liquidation, \"MT\" when both sides of trade were under liquidation",
                            "name": "liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The sequence number of the trade within instrument",
                            "name": "trade_seq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "true if user order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users)",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional field containing leg trades if trade is a combo trade (present when querying for only combo trades and in combo_trades events)",
                            "name": "legs",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_currency_response_trade"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Amount allocated to this user.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional client allocation info for brokers.",
                            "name": "client_info",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_user_trades_by_currency_response_client_info"
                            }
                        },
                        {
                            "comment": "Fee for the allocated part of the trade.",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User ID to which part of the trade is allocated. For brokers the User ID is obstructed.",
                            "name": "user_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_currency_response_trade_allocation"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "ID of a client; available to broker. Represents a group of users under a common name.",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "ID assigned to a single user in a client; available to broker.",
                            "name": "client_link_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Name of the linked user within the client; available to broker.",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_currency_response_client_info"
                }
            ]
        },
        "name": "private_get_user_trades_by_currency",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "has_more",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "",
                    "name": "trades",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_user_trades_by_currency_response_trade"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_user_trades_by_currency_response_result"
        }
    },
    {
        "comment": "Retrieve the latest user trades that have occurred for instruments in a specific currency symbol and within a given time range.",
        "endpoint": {
            "name": "private_get_user_trades_by_currency_and_time",
            "path": "/private/get_user_trades_by_currency_and_time",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    },
                    {
                        "items": [
                            "any",
                            "future",
                            "option_combo",
                            "future_combo",
                            "option",
                            "combo",
                            "spot"
                        ],
                        "name": "kind"
                    },
                    {
                        "items": [
                            "desc",
                            "default",
                            "asc"
                        ],
                        "name": "sorting"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Instrument kind, \"combo\" for any combo or \"any\" for all. If not provided instruments of all kinds are considered",
                        "name": "kind",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "kind"
                        }
                    },
                    {
                        "comment": "The earliest timestamp to return result from (milliseconds since the UNIX epoch). When param is provided trades are returned from the earliest",
                        "name": "start_timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The most recent timestamp to return result from (milliseconds since the UNIX epoch). Only one of params: start_timestamp, end_timestamp is truly required",
                        "name": "end_timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Number of requested items, default - 10, maximum - 1000",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Direction of results sorting (default value means no sorting, results will be returned in order in which they left the database)",
                        "name": "sorting",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "sorting"
                        }
                    },
                    {
                        "comment": "Determines whether historical trade and order records should be retrieved. false (default): Returns recent records: orders for 30 min, trades for 24h. true: Fetches historical records, available after a short delay due to indexing. Recent data is not included. \ud83d\udcd6 Related Support Article: Accessing historical trades and orders using API",
                        "name": "historical",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_user_trades_by_currency_and_time_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_user_trades_by_currency_and_time_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_user_trades_by_currency_and_time_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_user_trades_by_currency_and_time_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_currency_and_time_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "has_more",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "",
                            "name": "trades",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_user_trades_by_currency_and_time_response_trade"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_currency_and_time_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Unique (per currency) trade identifier",
                            "name": "trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction of the \"tick\" (0 = Plus Tick, 1 = Zero-Plus Tick, 2 = Minus Tick, 3 = Zero-Minus Tick).",
                            "name": "tick_direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "fee_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order was created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Advanced type of user order: \"usd\" or \"implv\" (only for options; omitted if not applicable)",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the user order (maker or taker), i.e. subscriber's order id that took part in the trade",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes what was role of users order: \"M\" when it was maker order, \"T\" when it was taker order",
                            "name": "liquidity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order is post-only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade size in contract units (optional, may be absent in historical trades)",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is MMP",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User's fee in units of the specified fee_currency",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "QuoteID of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Index Price at the moment of trade",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User defined label (presented only when previously set for order by user)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block trade id - when trade was part of a block trade",
                            "name": "block_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field containing combo instrument name if the trade is a combo trade",
                            "name": "combo_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Always null",
                            "name": "matching_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order type: \"limit, \"market\", or \"liquidation\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "List of allocations for Block RFQ pre-allocation. Each allocation specifies user_id, amount, and fee for the allocated part of the trade. For broker client allocations, a client_info object will be included.",
                            "name": "trade_allocations",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_user_trades_by_currency_and_time_response_trade_allocation"
                            }
                        },
                        {
                            "comment": "Profit and loss in base currency.",
                            "name": "profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp of the trade (milliseconds since the UNIX epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Option implied volatility for the price (Option only)",
                            "name": "iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\" or \"archive\" (if order was archived)",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Underlying price for implied volatility calculations (Options only)",
                            "name": "underlying_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ quote - when trade was part of the Block RFQ",
                            "name": "block_rfq_quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "QuoteSet of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Mark Price at the moment of trade",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ - when trade was part of the Block RFQ",
                            "name": "block_rfq_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Optional field containing combo trade identifier if the trade is a combo trade",
                            "name": "combo_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is reduce-only",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field (only for trades caused by liquidation): \"M\" when maker side of trade was under liquidation, \"T\" when taker side was under liquidation, \"MT\" when both sides of trade were under liquidation",
                            "name": "liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The sequence number of the trade within instrument",
                            "name": "trade_seq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "true if user order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users)",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional field containing leg trades if trade is a combo trade (present when querying for only combo trades and in combo_trades events)",
                            "name": "legs",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_currency_and_time_response_trade"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Amount allocated to this user.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional client allocation info for brokers.",
                            "name": "client_info",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_user_trades_by_currency_and_time_response_client_info"
                            }
                        },
                        {
                            "comment": "Fee for the allocated part of the trade.",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User ID to which part of the trade is allocated. For brokers the User ID is obstructed.",
                            "name": "user_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_currency_and_time_response_trade_allocation"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "ID of a client; available to broker. Represents a group of users under a common name.",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "ID assigned to a single user in a client; available to broker.",
                            "name": "client_link_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Name of the linked user within the client; available to broker.",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_currency_and_time_response_client_info"
                }
            ]
        },
        "name": "private_get_user_trades_by_currency_and_time",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "has_more",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "",
                    "name": "trades",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_user_trades_by_currency_and_time_response_trade"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_user_trades_by_currency_and_time_response_result"
        }
    },
    {
        "comment": "Retrieve the latest user trades that have occurred for a specific instrument.",
        "endpoint": {
            "name": "private_get_user_trades_by_instrument",
            "path": "/private/get_user_trades_by_instrument",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "desc",
                            "default",
                            "asc"
                        ],
                        "name": "sorting"
                    }
                ],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The sequence number of the first trade to be returned",
                        "name": "start_seq",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The sequence number of the last trade to be returned",
                        "name": "end_seq",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Number of requested items, default - 10, maximum - 1000",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The earliest timestamp to return result from (milliseconds since the UNIX epoch). When param is provided trades are returned from the earliest",
                        "name": "start_timestamp",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The most recent timestamp to return result from (milliseconds since the UNIX epoch). Only one of params: start_timestamp, end_timestamp is truly required",
                        "name": "end_timestamp",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Determines whether historical trade and order records should be retrieved. false (default): Returns recent records: orders for 30 min, trades for 24h. true: Fetches historical records, available after a short delay due to indexing. Recent data is not included. \ud83d\udcd6 Related Support Article: Accessing historical trades and orders using API",
                        "name": "historical",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Direction of results sorting (default value means no sorting, results will be returned in order in which they left the database)",
                        "name": "sorting",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "sorting"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_user_trades_by_instrument_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_user_trades_by_instrument_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_user_trades_by_instrument_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_user_trades_by_instrument_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_instrument_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "has_more",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "",
                            "name": "trades",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_user_trades_by_instrument_response_trade"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_instrument_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Unique (per currency) trade identifier",
                            "name": "trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction of the \"tick\" (0 = Plus Tick, 1 = Zero-Plus Tick, 2 = Minus Tick, 3 = Zero-Minus Tick).",
                            "name": "tick_direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "fee_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order was created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Advanced type of user order: \"usd\" or \"implv\" (only for options; omitted if not applicable)",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the user order (maker or taker), i.e. subscriber's order id that took part in the trade",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes what was role of users order: \"M\" when it was maker order, \"T\" when it was taker order",
                            "name": "liquidity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order is post-only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade size in contract units (optional, may be absent in historical trades)",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is MMP",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User's fee in units of the specified fee_currency",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "QuoteID of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Index Price at the moment of trade",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User defined label (presented only when previously set for order by user)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block trade id - when trade was part of a block trade",
                            "name": "block_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field containing combo instrument name if the trade is a combo trade",
                            "name": "combo_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Always null",
                            "name": "matching_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order type: \"limit, \"market\", or \"liquidation\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "List of allocations for Block RFQ pre-allocation. Each allocation specifies user_id, amount, and fee for the allocated part of the trade. For broker client allocations, a client_info object will be included.",
                            "name": "trade_allocations",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_user_trades_by_instrument_response_trade_allocation"
                            }
                        },
                        {
                            "comment": "Profit and loss in base currency.",
                            "name": "profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp of the trade (milliseconds since the UNIX epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Option implied volatility for the price (Option only)",
                            "name": "iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\" or \"archive\" (if order was archived)",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Underlying price for implied volatility calculations (Options only)",
                            "name": "underlying_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ quote - when trade was part of the Block RFQ",
                            "name": "block_rfq_quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "QuoteSet of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Mark Price at the moment of trade",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ - when trade was part of the Block RFQ",
                            "name": "block_rfq_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Optional field containing combo trade identifier if the trade is a combo trade",
                            "name": "combo_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is reduce-only",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field (only for trades caused by liquidation): \"M\" when maker side of trade was under liquidation, \"T\" when taker side was under liquidation, \"MT\" when both sides of trade were under liquidation",
                            "name": "liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The sequence number of the trade within instrument",
                            "name": "trade_seq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "true if user order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users)",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional field containing leg trades if trade is a combo trade (present when querying for only combo trades and in combo_trades events)",
                            "name": "legs",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_instrument_response_trade"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Amount allocated to this user.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional client allocation info for brokers.",
                            "name": "client_info",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_user_trades_by_instrument_response_client_info"
                            }
                        },
                        {
                            "comment": "Fee for the allocated part of the trade.",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User ID to which part of the trade is allocated. For brokers the User ID is obstructed.",
                            "name": "user_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_instrument_response_trade_allocation"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "ID of a client; available to broker. Represents a group of users under a common name.",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "ID assigned to a single user in a client; available to broker.",
                            "name": "client_link_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Name of the linked user within the client; available to broker.",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_instrument_response_client_info"
                }
            ]
        },
        "name": "private_get_user_trades_by_instrument",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "has_more",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "",
                    "name": "trades",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_user_trades_by_instrument_response_trade"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_user_trades_by_instrument_response_result"
        }
    },
    {
        "comment": "Retrieve the latest user trades that have occurred for a specific instrument and within a given time range.",
        "endpoint": {
            "name": "private_get_user_trades_by_instrument_and_time",
            "path": "/private/get_user_trades_by_instrument_and_time",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "desc",
                            "default",
                            "asc"
                        ],
                        "name": "sorting"
                    }
                ],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The earliest timestamp to return result from (milliseconds since the UNIX epoch). When param is provided trades are returned from the earliest",
                        "name": "start_timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The most recent timestamp to return result from (milliseconds since the UNIX epoch). Only one of params: start_timestamp, end_timestamp is truly required",
                        "name": "end_timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Number of requested items, default - 10, maximum - 1000",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Direction of results sorting (default value means no sorting, results will be returned in order in which they left the database)",
                        "name": "sorting",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "sorting"
                        }
                    },
                    {
                        "comment": "Determines whether historical trade and order records should be retrieved. false (default): Returns recent records: orders for 30 min, trades for 24h. true: Fetches historical records, available after a short delay due to indexing. Recent data is not included. \ud83d\udcd6 Related Support Article: Accessing historical trades and orders using API",
                        "name": "historical",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_user_trades_by_instrument_and_time_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_user_trades_by_instrument_and_time_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_user_trades_by_instrument_and_time_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_user_trades_by_instrument_and_time_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_instrument_and_time_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "has_more",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "",
                            "name": "trades",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_user_trades_by_instrument_and_time_response_trade"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_instrument_and_time_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Unique (per currency) trade identifier",
                            "name": "trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction of the \"tick\" (0 = Plus Tick, 1 = Zero-Plus Tick, 2 = Minus Tick, 3 = Zero-Minus Tick).",
                            "name": "tick_direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "fee_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order was created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Advanced type of user order: \"usd\" or \"implv\" (only for options; omitted if not applicable)",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the user order (maker or taker), i.e. subscriber's order id that took part in the trade",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes what was role of users order: \"M\" when it was maker order, \"T\" when it was taker order",
                            "name": "liquidity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order is post-only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade size in contract units (optional, may be absent in historical trades)",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is MMP",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User's fee in units of the specified fee_currency",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "QuoteID of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Index Price at the moment of trade",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User defined label (presented only when previously set for order by user)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block trade id - when trade was part of a block trade",
                            "name": "block_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field containing combo instrument name if the trade is a combo trade",
                            "name": "combo_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Always null",
                            "name": "matching_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order type: \"limit, \"market\", or \"liquidation\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "List of allocations for Block RFQ pre-allocation. Each allocation specifies user_id, amount, and fee for the allocated part of the trade. For broker client allocations, a client_info object will be included.",
                            "name": "trade_allocations",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_user_trades_by_instrument_and_time_response_trade_allocation"
                            }
                        },
                        {
                            "comment": "Profit and loss in base currency.",
                            "name": "profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp of the trade (milliseconds since the UNIX epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Option implied volatility for the price (Option only)",
                            "name": "iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\" or \"archive\" (if order was archived)",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Underlying price for implied volatility calculations (Options only)",
                            "name": "underlying_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ quote - when trade was part of the Block RFQ",
                            "name": "block_rfq_quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "QuoteSet of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Mark Price at the moment of trade",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ - when trade was part of the Block RFQ",
                            "name": "block_rfq_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Optional field containing combo trade identifier if the trade is a combo trade",
                            "name": "combo_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is reduce-only",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field (only for trades caused by liquidation): \"M\" when maker side of trade was under liquidation, \"T\" when taker side was under liquidation, \"MT\" when both sides of trade were under liquidation",
                            "name": "liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The sequence number of the trade within instrument",
                            "name": "trade_seq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "true if user order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users)",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional field containing leg trades if trade is a combo trade (present when querying for only combo trades and in combo_trades events)",
                            "name": "legs",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_instrument_and_time_response_trade"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Amount allocated to this user.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional client allocation info for brokers.",
                            "name": "client_info",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_user_trades_by_instrument_and_time_response_client_info"
                            }
                        },
                        {
                            "comment": "Fee for the allocated part of the trade.",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User ID to which part of the trade is allocated. For brokers the User ID is obstructed.",
                            "name": "user_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_instrument_and_time_response_trade_allocation"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "ID of a client; available to broker. Represents a group of users under a common name.",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "ID assigned to a single user in a client; available to broker.",
                            "name": "client_link_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Name of the linked user within the client; available to broker.",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_instrument_and_time_response_client_info"
                }
            ]
        },
        "name": "private_get_user_trades_by_instrument_and_time",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "has_more",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "",
                    "name": "trades",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_user_trades_by_instrument_and_time_response_trade"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_user_trades_by_instrument_and_time_response_result"
        }
    },
    {
        "comment": "Retrieve the list of user trades that was created for given order",
        "endpoint": {
            "name": "private_get_user_trades_by_order",
            "path": "/private/get_user_trades_by_order",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "desc",
                            "default",
                            "asc"
                        ],
                        "name": "sorting"
                    }
                ],
                "fields": [
                    {
                        "comment": "The order id",
                        "name": "order_id",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Direction of results sorting (default value means no sorting, results will be returned in order in which they left the database)",
                        "name": "sorting",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "sorting"
                        }
                    },
                    {
                        "comment": "Determines whether historical trade and order records should be retrieved. false (default): Returns recent records: orders for 30 min, trades for 24h. true: Fetches historical records, available after a short delay due to indexing. Recent data is not included. \ud83d\udcd6 Related Support Article: Accessing historical trades and orders using API",
                        "name": "historical",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_user_trades_by_order_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_user_trades_by_order_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_user_trades_by_order_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_user_trades_by_order_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_order_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Direction of the \"tick\" (0 = Plus Tick, 1 = Zero-Plus Tick, 2 = Minus Tick, 3 = Zero-Minus Tick).",
                            "name": "tick_direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "fee_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order was created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Advanced type of user order: \"usd\" or \"implv\" (only for options; omitted if not applicable)",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the user order (maker or taker), i.e. subscriber's order id that took part in the trade",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes what was role of users order: \"M\" when it was maker order, \"T\" when it was taker order",
                            "name": "liquidity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order is post-only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade size in contract units (optional, may be absent in historical trades)",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is MMP",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User's fee in units of the specified fee_currency",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "QuoteID of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Index Price at the moment of trade",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User defined label (presented only when previously set for order by user)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block trade id - when trade was part of a block trade",
                            "name": "block_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field containing combo instrument name if the trade is a combo trade",
                            "name": "combo_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Always null",
                            "name": "matching_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order type: \"limit, \"market\", or \"liquidation\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "List of allocations for Block RFQ pre-allocation. Each allocation specifies user_id, amount, and fee for the allocated part of the trade. For broker client allocations, a client_info object will be included.",
                            "name": "trade_allocations",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_user_trades_by_order_response_trade_allocation"
                            }
                        },
                        {
                            "comment": "Profit and loss in base currency.",
                            "name": "profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp of the trade (milliseconds since the UNIX epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Option implied volatility for the price (Option only)",
                            "name": "iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\" or \"archive\" (if order was archived)",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Underlying price for implied volatility calculations (Options only)",
                            "name": "underlying_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ quote - when trade was part of the Block RFQ",
                            "name": "block_rfq_quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "QuoteSet of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Mark Price at the moment of trade",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ - when trade was part of the Block RFQ",
                            "name": "block_rfq_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Optional field containing combo trade identifier if the trade is a combo trade",
                            "name": "combo_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is reduce-only",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field (only for trades caused by liquidation): \"M\" when maker side of trade was under liquidation, \"T\" when taker side was under liquidation, \"MT\" when both sides of trade were under liquidation",
                            "name": "liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The sequence number of the trade within instrument",
                            "name": "trade_seq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "true if user order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users)",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional field containing leg trades if trade is a combo trade (present when querying for only combo trades and in combo_trades events)",
                            "name": "legs",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_order_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Amount allocated to this user.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional client allocation info for brokers.",
                            "name": "client_info",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_user_trades_by_order_response_client_info"
                            }
                        },
                        {
                            "comment": "Fee for the allocated part of the trade.",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User ID to which part of the trade is allocated. For brokers the User ID is obstructed.",
                            "name": "user_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_order_response_trade_allocation"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "ID of a client; available to broker. Represents a group of users under a common name.",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "ID assigned to a single user in a client; available to broker.",
                            "name": "client_link_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Name of the linked user within the client; available to broker.",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_trades_by_order_response_client_info"
                }
            ]
        },
        "name": "private_get_user_trades_by_order",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Direction of the \"tick\" (0 = Plus Tick, 1 = Zero-Plus Tick, 2 = Minus Tick, 3 = Zero-Minus Tick).",
                    "name": "tick_direction",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                    "name": "fee_currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if user order was created with API",
                    "name": "api",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Advanced type of user order: \"usd\" or \"implv\" (only for options; omitted if not applicable)",
                    "name": "advanced",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Id of the user order (maker or taker), i.e. subscriber's order id that took part in the trade",
                    "name": "order_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Describes what was role of users order: \"M\" when it was maker order, \"T\" when it was taker order",
                    "name": "liquidity",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "true if user order is post-only",
                    "name": "post_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Direction: buy, or sell",
                    "name": "direction",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Trade size in contract units (optional, may be absent in historical trades)",
                    "name": "contracts",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "true if user order is MMP",
                    "name": "mmp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "User's fee in units of the specified fee_currency",
                    "name": "fee",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "QuoteID of the user order (optional, present only for orders placed with private/mass_quote)",
                    "name": "quote_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Index Price at the moment of trade",
                    "name": "index_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "User defined label (presented only when previously set for order by user)",
                    "name": "label",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Block trade id - when trade was part of a block trade",
                    "name": "block_trade_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Price in base currency",
                    "name": "price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Optional field containing combo instrument name if the trade is a combo trade",
                    "name": "combo_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Always null",
                    "name": "matching_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Order type: \"limit, \"market\", or \"liquidation\"",
                    "name": "order_type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "List of allocations for Block RFQ pre-allocation. Each allocation specifies user_id, amount, and fee for the allocated part of the trade. For broker client allocations, a client_info object will be included.",
                    "name": "trade_allocations",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_user_trades_by_order_response_trade_allocation"
                    }
                },
                {
                    "comment": "Profit and loss in base currency.",
                    "name": "profit_loss",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The timestamp of the trade (milliseconds since the UNIX epoch)",
                    "name": "timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Option implied volatility for the price (Option only)",
                    "name": "iv",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\" or \"archive\" (if order was archived)",
                    "name": "state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Underlying price for implied volatility calculations (Options only)",
                    "name": "underlying_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "ID of the Block RFQ quote - when trade was part of the Block RFQ",
                    "name": "block_rfq_quote_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "QuoteSet of the user order (optional, present only for orders placed with private/mass_quote)",
                    "name": "quote_set_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Mark Price at the moment of trade",
                    "name": "mark_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "ID of the Block RFQ - when trade was part of the Block RFQ",
                    "name": "block_rfq_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Optional field containing combo trade identifier if the trade is a combo trade",
                    "name": "combo_trade_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "true if user order is reduce-only",
                    "name": "reduce_only",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                    "name": "amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Optional field (only for trades caused by liquidation): \"M\" when maker side of trade was under liquidation, \"T\" when taker side was under liquidation, \"MT\" when both sides of trade were under liquidation",
                    "name": "liquidation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The sequence number of the trade within instrument",
                    "name": "trade_seq",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "true if user order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users)",
                    "name": "risk_reducing",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Unique instrument identifier",
                    "name": "instrument_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional field containing leg trades if trade is a combo trade (present when querying for only combo trades and in combo_trades events)",
                    "name": "legs",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_user_trades_by_order_response_result"
        }
    },
    {
        "comment": "Moves positions from source subaccount to target subaccount Note:In rare cases, the request may return an internal_server_error. This does not necessarily mean the operation failed entirely. Part or all of the position transfer might have still been processed successfully.",
        "endpoint": {
            "name": "private_move_positions",
            "path": "/private/move_positions",
            "rate_limiter": "matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Id of source subaccount. Can be found in My Account >> Subaccounts tab",
                        "name": "source_uid",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Id of target subaccount. Can be found in My Account >> Subaccounts tab",
                        "name": "target_uid",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "List of trades for position move",
                        "name": "trades",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [
                                {
                                    "comment": "Instrument name",
                                    "name": "instrument_name",
                                    "required": "true",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "string"
                                    }
                                },
                                {
                                    "comment": "Price for trade - if not provided average price of the position is used",
                                    "name": "price",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "number"
                                    }
                                },
                                {
                                    "comment": "It represents the requested trade size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin. Amount can't exceed position size.",
                                    "name": "amount",
                                    "required": "true",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "number"
                                    }
                                }
                            ],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_move_positions_request_trade"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_move_positions_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_move_positions_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_move_positions_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_move_positions_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_move_positions_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "trades",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_move_positions_response_trade"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_move_positions_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trade source uid",
                            "name": "source_uid",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Trade target uid",
                            "name": "target_uid",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_move_positions_response_trade"
                }
            ]
        },
        "name": "private_move_positions",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "trades",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_move_positions_response_trade"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_move_positions_response_result"
        }
    },
    {
        "comment": "Reset Market Maker Protection (MMP) limits for the specified currency pair or group.\n\n\ud83d\udcd6 Related Support Article: Market Maker Protection API Configuration",
        "endpoint": {
            "name": "private_reset_mmp",
            "path": "/private/reset_mmp",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Currency pair for which to reset MMP limits.  For regular MMP (block_rfq = false): Must be a specific currency pair (e.g., \"btc_usd\", \"eth_usd\"). The value \"all\" is not allowed.  For Block RFQ MMP (block_rfq = true): Can be either a specific currency pair or \"all\" to reset MMP limits across all currency pairs.",
                        "name": "index_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Specifies the MMP group for which limits are being reset. If this parameter is omitted, the method resets the traditional (no group) MMP limits. \ud83d\udcd6 Related Support Article: Mass Quotes Specifications",
                        "name": "mmp_group",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "If true, resets MMP for Block RFQ. When set, requires block_rfq scope instead of trade scope. Block RFQ MMP settings are completely separate from normal order/quote MMP settings. When block_rfq = true, the index_name parameter can be set to \"all\" to reset limits across all currency pairs.",
                        "name": "block_rfq",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_reset_mmp_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Result of method execution. ok in case of success",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_reset_mmp_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Result of method execution. ok in case of success",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_reset_mmp_response"
                }
            ]
        },
        "name": "private_reset_mmp",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Set config for MMP - triggers MMP reset",
        "endpoint": {
            "name": "private_set_mmp_config",
            "path": "/private/set_mmp_config",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "avax_usdc",
                            "btc_usdc",
                            "dot_usdc",
                            "link_usdc",
                            "trump_usdc",
                            "sol_usdc",
                            "all",
                            "bnb_usdc",
                            "ton_usdc",
                            "ltc_usdc",
                            "paxg_usdc",
                            "eth_usdt",
                            "btcdvol_usdc",
                            "ethdvol_usdc",
                            "xrp_usdc",
                            "btc_usdt",
                            "ada_usdc",
                            "shib_usdc",
                            "trx_usdc",
                            "eth_usd",
                            "doge_usdc",
                            "uni_usdc",
                            "btc_usd",
                            "eth_usdc",
                            "algo_usdc",
                            "bch_usdc",
                            "usde_usdc",
                            "near_usdc",
                            "buidl_usdc"
                        ],
                        "name": "index_name"
                    }
                ],
                "fields": [
                    {
                        "comment": "Index identifier of derivative instrument on the platform",
                        "name": "index_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "index_name"
                        }
                    },
                    {
                        "comment": "MMP Interval in seconds, if set to 0 MMP is removed",
                        "name": "interval",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "MMP frozen time in seconds, if set to 0 manual reset is required",
                        "name": "frozen_time",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Designates the MMP group for which the configuration is being set. If the specified group is already associated with a different index_name, an error is returned. This parameter enables distinct configurations for each MMP group, linked to particular index_name. Maximum 64 characters. Case sensitive. Cannot be empty string. \ud83d\udcd6 Related Support Article: Mass Quotes Specifications",
                        "name": "mmp_group",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Quantity limit, positive value",
                        "name": "quantity_limit",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "Delta limit, positive value",
                        "name": "delta_limit",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "Vega limit, positive value",
                        "name": "vega_limit",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "If true, configures MMP for Block RFQ. When set, requires block_rfq scope instead of trade scope. Block RFQ MMP settings are completely separate from normal order/quote MMP settings.",
                        "name": "block_rfq",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "For Block RFQ only (block_rfq = true). Sets the maximum number of Block RFQ trades allowed in the lookback window. Each RFQ trade counts as +1 towards the limit (not individual legs). Works across all currency pairs. When using this parameter, index_name must be set to \"all\". Maximum - 1000.",
                        "name": "trade_count_limit",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_set_mmp_config_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_set_mmp_config_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_set_mmp_config_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_set_mmp_config_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_set_mmp_config_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "If true, indicates MMP configuration for Block RFQ. Block RFQ MMP settings are completely separate from normal order/quote MMP settings.",
                            "name": "block_rfq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Delta limit",
                            "name": "delta_limit",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "MMP frozen time in seconds, if set to 0 manual reset is required",
                            "name": "frozen_time",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Index identifier, matches (base) cryptocurrency with quote currency",
                            "name": "index_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "MMP Interval in seconds, if set to 0 MMP is disabled",
                            "name": "interval",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Specified MMP Group",
                            "name": "mmp_group",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Quantity limit",
                            "name": "quantity_limit",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "For Block RFQ only. The maximum number of Block RFQ trades allowed in the lookback window. Each RFQ trade counts as +1 towards the limit (not individual legs). Works across all currency pairs.",
                            "name": "trade_count_limit",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Vega limit",
                            "name": "vega_limit",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_set_mmp_config_response_result"
                }
            ]
        },
        "name": "private_set_mmp_config",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "If true, indicates MMP configuration for Block RFQ. Block RFQ MMP settings are completely separate from normal order/quote MMP settings.",
                    "name": "block_rfq",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Delta limit",
                    "name": "delta_limit",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "MMP frozen time in seconds, if set to 0 manual reset is required",
                    "name": "frozen_time",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Index identifier, matches (base) cryptocurrency with quote currency",
                    "name": "index_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "MMP Interval in seconds, if set to 0 MMP is disabled",
                    "name": "interval",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Specified MMP Group",
                    "name": "mmp_group",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Quantity limit",
                    "name": "quantity_limit",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "For Block RFQ only. The maximum number of Block RFQ trades allowed in the lookback window. Each RFQ trade counts as +1 towards the limit (not individual legs). Works across all currency pairs.",
                    "name": "trade_count_limit",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Vega limit",
                    "name": "vega_limit",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_set_mmp_config_response_result"
        }
    },
    {
        "comment": "Retrieves public settlement, delivery and bankruptcy events filtered by instrument name",
        "endpoint": {
            "name": "private_get_settlement_history_by_instrument",
            "path": "/private/get_settlement_history_by_instrument",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "bankruptcy",
                            "settlement",
                            "delivery"
                        ],
                        "name": "type"
                    }
                ],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Settlement type",
                        "name": "type",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "type"
                        }
                    },
                    {
                        "comment": "Number of requested items, default - 20, maximum - 1000",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Continuation token for pagination",
                        "name": "continuation",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The latest timestamp to return result from (milliseconds since the UNIX epoch)",
                        "name": "search_start_timestamp",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_settlement_history_by_instrument_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_settlement_history_by_instrument_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_settlement_history_by_instrument_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_settlement_history_by_instrument_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_settlement_history_by_instrument_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Continuation token for pagination.",
                            "name": "continuation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "settlements",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_settlement_history_by_instrument_response_settlement"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_settlement_history_by_instrument_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "funded amount (bankruptcy only)",
                            "name": "funded",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "funding (in base currency ; settlement for perpetual product only)",
                            "name": "funding",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "underlying index price at time of event (in quote currency; settlement and delivery only)",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "instrument name (settlement and delivery only)",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "mark price for at the settlement time (in quote currency; settlement and delivery only)",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "position size (in quote currency; settlement and delivery only)",
                            "name": "position",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "profit and loss (in base currency; settlement and delivery only)",
                            "name": "profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "value of session bankruptcy (in base currency; bankruptcy only)",
                            "name": "session_bankruptcy",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "total value of session profit and losses (in base currency)",
                            "name": "session_profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "total amount of paid taxes/fees (in base currency; bankruptcy only)",
                            "name": "session_tax",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "rate of paid taxes/fees (in base currency; bankruptcy only)",
                            "name": "session_tax_rate",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "the amount of the socialized losses (in base currency; bankruptcy only)",
                            "name": "socialized",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The type of settlement. settlement, delivery or bankruptcy.",
                            "name": "type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_settlement_history_by_instrument_response_settlement"
                }
            ]
        },
        "name": "private_get_settlement_history_by_instrument",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Continuation token for pagination.",
                    "name": "continuation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "",
                    "name": "settlements",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_settlement_history_by_instrument_response_settlement"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_settlement_history_by_instrument_response_result"
        }
    },
    {
        "comment": "Retrieves settlement, delivery and bankruptcy events that have affected your account.",
        "endpoint": {
            "name": "private_get_settlement_history_by_currency",
            "path": "/private/get_settlement_history_by_currency",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    },
                    {
                        "items": [
                            "bankruptcy",
                            "settlement",
                            "delivery"
                        ],
                        "name": "type"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Settlement type",
                        "name": "type",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "type"
                        }
                    },
                    {
                        "comment": "Number of requested items, default - 20, maximum - 1000",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Continuation token for pagination",
                        "name": "continuation",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The latest timestamp to return result from (milliseconds since the UNIX epoch)",
                        "name": "search_start_timestamp",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_settlement_history_by_currency_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_settlement_history_by_currency_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_settlement_history_by_currency_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_settlement_history_by_currency_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_settlement_history_by_currency_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Continuation token for pagination.",
                            "name": "continuation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "settlements",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_settlement_history_by_currency_response_settlement"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_settlement_history_by_currency_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "funded amount (bankruptcy only)",
                            "name": "funded",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "funding (in base currency ; settlement for perpetual product only)",
                            "name": "funding",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "underlying index price at time of event (in quote currency; settlement and delivery only)",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "instrument name (settlement and delivery only)",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "mark price for at the settlement time (in quote currency; settlement and delivery only)",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "position size (in quote currency; settlement and delivery only)",
                            "name": "position",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "profit and loss (in base currency; settlement and delivery only)",
                            "name": "profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "value of session bankruptcy (in base currency; bankruptcy only)",
                            "name": "session_bankruptcy",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "total value of session profit and losses (in base currency)",
                            "name": "session_profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "total amount of paid taxes/fees (in base currency; bankruptcy only)",
                            "name": "session_tax",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "rate of paid taxes/fees (in base currency; bankruptcy only)",
                            "name": "session_tax_rate",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "the amount of the socialized losses (in base currency; bankruptcy only)",
                            "name": "socialized",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The type of settlement. settlement, delivery or bankruptcy.",
                            "name": "type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_settlement_history_by_currency_response_settlement"
                }
            ]
        },
        "name": "private_get_settlement_history_by_currency",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Continuation token for pagination.",
                    "name": "continuation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "",
                    "name": "settlements",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_settlement_history_by_currency_response_settlement"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_settlement_history_by_currency_response_result"
        }
    },
    {
        "comment": "Retrieves information about a combo",
        "endpoint": {
            "name": "public_get_combo_details",
            "path": "/public/get_combo_details",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Combo ID",
                        "name": "combo_id",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_combo_details_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_combo_details_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_combo_details_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_combo_details_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_combo_details_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Unique combo identifier",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Instrument ID",
                            "name": "instrument_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "",
                            "name": "legs",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_combo_details_response_leg"
                            }
                        },
                        {
                            "comment": "Combo state: \"active\", \"inactive\"",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "state_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_combo_details_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Size multiplier of a leg. A negative value indicates that the trades on given leg are in opposite direction to the combo trades they originate from",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_combo_details_response_leg"
                }
            ]
        },
        "name": "public_get_combo_details",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Unique combo identifier",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Instrument ID",
                    "name": "instrument_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "",
                    "name": "legs",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "public_get_combo_details_response_leg"
                    }
                },
                {
                    "comment": "Combo state: \"active\", \"inactive\"",
                    "name": "state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "state_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_combo_details_response_result"
        }
    },
    {
        "comment": "Retrieves available combos. This method can be used to get the list of all combos, or only the list of combos in the given state.",
        "endpoint": {
            "name": "public_get_combo_ids",
            "path": "/public/get_combo_ids",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    },
                    {
                        "items": [
                            "active",
                            "inactive"
                        ],
                        "name": "state"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Combo state, if not provided combos of all states are considered",
                        "name": "state",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "state"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_combo_ids_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Unique combo identifier",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_combo_ids_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique combo identifier",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_combo_ids_response"
                }
            ]
        },
        "name": "public_get_combo_ids",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Retrieves information about active combos",
        "endpoint": {
            "name": "public_get_combos",
            "path": "/public/get_combos",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "any",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol or \"any\" for all",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_combos_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_combos_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_combos_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_combos_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_combos_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Unique combo identifier",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Instrument ID",
                            "name": "instrument_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "",
                            "name": "legs",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_combos_response_leg"
                            }
                        },
                        {
                            "comment": "Combo state: \"active\", \"inactive\"",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "state_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_combos_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Size multiplier of a leg. A negative value indicates that the trades on given leg are in opposite direction to the combo trades they originate from",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_combos_response_leg"
                }
            ]
        },
        "name": "public_get_combos",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Unique combo identifier",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Instrument ID",
                    "name": "instrument_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "",
                    "name": "legs",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "public_get_combos_response_leg"
                    }
                },
                {
                    "comment": "Combo state: \"active\", \"inactive\"",
                    "name": "state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "state_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_combos_response_result"
        }
    },
    {
        "comment": "Verifies and creates a combo book or returns an existing combo matching given trades",
        "endpoint": {
            "name": "private_create_combo",
            "path": "/private/create_combo",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "List of trades used to create a combo",
                        "name": "trades",
                        "required": "true",
                        "type": {
                            "enums": [
                                {
                                    "items": [
                                        "sell",
                                        "buy"
                                    ],
                                    "name": "direction"
                                }
                            ],
                            "fields": [
                                {
                                    "comment": "Instrument name",
                                    "name": "instrument_name",
                                    "required": "true",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "string"
                                    }
                                },
                                {
                                    "comment": "It represents the requested trade size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                                    "name": "amount",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "number"
                                    }
                                },
                                {
                                    "comment": "Direction of trade from the maker perspective",
                                    "name": "direction",
                                    "required": "true",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "direction"
                                    }
                                }
                            ],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_create_combo_request_trade"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_create_combo_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_create_combo_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_create_combo_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_create_combo_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_create_combo_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Unique combo identifier",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Instrument ID",
                            "name": "instrument_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "",
                            "name": "legs",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_create_combo_response_leg"
                            }
                        },
                        {
                            "comment": "Combo state: \"active\", \"inactive\"",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "state_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_create_combo_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Size multiplier of a leg. A negative value indicates that the trades on given leg are in opposite direction to the combo trades they originate from",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_create_combo_response_leg"
                }
            ]
        },
        "name": "private_create_combo",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Unique combo identifier",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Instrument ID",
                    "name": "instrument_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "",
                    "name": "legs",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_create_combo_response_leg"
                    }
                },
                {
                    "comment": "Combo state: \"active\", \"inactive\"",
                    "name": "state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "state_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_create_combo_response_result"
        }
    },
    {
        "comment": "This method returns individual leg prices for a given combo structure based on an aggregated price of the strategy and the mark prices of the individual legs. Please note that leg prices change dynamically with mark price fluctuations, and the algorithm is calibrated only for conventional option structures and future spreads. This method supports both inverse strategies and known linear structures within a single currency pair.",
        "endpoint": {
            "name": "private_get_leg_prices",
            "path": "/private/get_leg_prices",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "List of legs for which the prices will be calculated",
                        "name": "legs",
                        "required": "true",
                        "type": {
                            "enums": [
                                {
                                    "items": [
                                        "sell",
                                        "buy"
                                    ],
                                    "name": "direction"
                                }
                            ],
                            "fields": [
                                {
                                    "comment": "Instrument name",
                                    "name": "instrument_name",
                                    "required": "true",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "string"
                                    }
                                },
                                {
                                    "comment": "It represents the requested trade size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                                    "name": "amount",
                                    "required": "true",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "number"
                                    }
                                },
                                {
                                    "comment": "Direction of selected leg",
                                    "name": "direction",
                                    "required": "true",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "direction"
                                    }
                                }
                            ],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_leg_prices_request_leg"
                        }
                    },
                    {
                        "comment": "Price for the whole leg structure",
                        "name": "price",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_leg_prices_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_leg_prices_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_leg_prices_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_leg_prices_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_leg_prices_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "This value multiplied by the ratio of a leg gives trade size on that leg.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "legs",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_leg_prices_response_leg"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_leg_prices_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Price for a leg",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Ratio of amount between legs",
                            "name": "ratio",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_leg_prices_response_leg"
                }
            ]
        },
        "name": "private_get_leg_prices",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "This value multiplied by the ratio of a leg gives trade size on that leg.",
                    "name": "amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "",
                    "name": "legs",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_leg_prices_response_leg"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_leg_prices_response_result"
        }
    },
    {
        "comment": "Used to approve a pending block trade. nonce and timestamp are used to identify the block trade while role should be opposite to the trading counterparty. To use a block trade approval feature the additional API key setting feature called: enabled_features: block_trade_approval is required. This key has to be given to broker/registered partner who performs the trades on behalf of the user for the feature to be active. If the user wants to approve the trade, he has to approve it from different API key with doesn't have this feature enabled.",
        "endpoint": {
            "name": "private_approve_block_trade",
            "path": "/private/approve_block_trade",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "maker",
                            "taker"
                        ],
                        "name": "role"
                    }
                ],
                "fields": [
                    {
                        "comment": "Timestamp, shared with other party (milliseconds since the UNIX epoch)",
                        "name": "timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Nonce, shared with other party",
                        "name": "nonce",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Describes if user wants to be maker or taker of trades",
                        "name": "role",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "role"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_approve_block_trade_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Result of method execution. ok in case of success",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_approve_block_trade_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Result of method execution. ok in case of success",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_approve_block_trade_response"
                }
            ]
        },
        "name": "private_approve_block_trade",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Creates block tradeThe whole request have to be exact the same as in private/verify_block_trade, only role field should be set appropriately - it basically means that both sides have to agree on the same timestamp, nonce, trades fields and server will assure that role field is different between sides (each party accepted own role).Using the same timestamp and nonce by both sides in private/verify_block_trade assures that even if unintentionally both sides execute given block trade with valid counterparty_signature, the given block trade will be executed only once.Note: In the API, the direction field is always expressed from the maker's perspective. This means that when you accept a block trade as a taker, the direction shown in the API represents the opposite side of your trade. For example, if you are buying puts as a taker, the API will show the operation as a \"sell put\" (maker's perspective), and you will be verifying and accepting a \"sell put\" block trade.\ud83d\udcd6 Related Support Article: Block Trading",
        "endpoint": {
            "name": "private_execute_block_trade",
            "path": "/private/execute_block_trade",
            "rate_limiter": "matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "maker",
                            "taker"
                        ],
                        "name": "role"
                    }
                ],
                "fields": [
                    {
                        "comment": "Timestamp, shared with other party (milliseconds since the UNIX epoch)",
                        "name": "timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Nonce, shared with other party",
                        "name": "nonce",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Describes if user wants to be maker or taker of trades",
                        "name": "role",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "role"
                        }
                    },
                    {
                        "comment": "List of trades for block trade",
                        "name": "trades",
                        "required": "true",
                        "type": {
                            "enums": [
                                {
                                    "items": [
                                        "sell",
                                        "buy"
                                    ],
                                    "name": "direction"
                                }
                            ],
                            "fields": [
                                {
                                    "comment": "Instrument name",
                                    "name": "instrument_name",
                                    "required": "true",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "string"
                                    }
                                },
                                {
                                    "comment": "Price for trade",
                                    "name": "price",
                                    "required": "true",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "number"
                                    }
                                },
                                {
                                    "comment": "It represents the requested trade size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                                    "name": "amount",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "number"
                                    }
                                },
                                {
                                    "comment": "Direction of trade from the maker perspective",
                                    "name": "direction",
                                    "required": "true",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "direction"
                                    }
                                }
                            ],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_execute_block_trade_request_trade"
                        }
                    },
                    {
                        "comment": "Signature of block trade generated by private/verify_block_trade_method",
                        "name": "counterparty_signature",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_execute_block_trade_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_execute_block_trade_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_execute_block_trade_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_execute_block_trade_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_execute_block_trade_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The name of the application that executed the block trade on behalf of the user (optional).",
                            "name": "app_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Broker code associated with the broker block trade.",
                            "name": "broker_code",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Name of the broker associated with the block trade.",
                            "name": "broker_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block trade id",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "",
                            "name": "trades",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_execute_block_trade_response_trade"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_execute_block_trade_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Unique (per currency) trade identifier",
                            "name": "trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction of the \"tick\" (0 = Plus Tick, 1 = Zero-Plus Tick, 2 = Minus Tick, 3 = Zero-Minus Tick).",
                            "name": "tick_direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "fee_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order was created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Advanced type of user order: \"usd\" or \"implv\" (only for options; omitted if not applicable)",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the user order (maker or taker), i.e. subscriber's order id that took part in the trade",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes what was role of users order: \"M\" when it was maker order, \"T\" when it was taker order",
                            "name": "liquidity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order is post-only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade size in contract units (optional, may be absent in historical trades)",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is MMP",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User's fee in units of the specified fee_currency",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "QuoteID of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Index Price at the moment of trade",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User defined label (presented only when previously set for order by user)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block trade id - when trade was part of a block trade",
                            "name": "block_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field containing combo instrument name if the trade is a combo trade",
                            "name": "combo_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Always null",
                            "name": "matching_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order type: \"limit, \"market\", or \"liquidation\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "List of allocations for Block RFQ pre-allocation. Each allocation specifies user_id, amount, and fee for the allocated part of the trade. For broker client allocations, a client_info object will be included.",
                            "name": "trade_allocations",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_execute_block_trade_response_trade_allocation"
                            }
                        },
                        {
                            "comment": "Profit and loss in base currency.",
                            "name": "profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp of the trade (milliseconds since the UNIX epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Option implied volatility for the price (Option only)",
                            "name": "iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\" or \"archive\" (if order was archived)",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Underlying price for implied volatility calculations (Options only)",
                            "name": "underlying_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ quote - when trade was part of the Block RFQ",
                            "name": "block_rfq_quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "QuoteSet of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Mark Price at the moment of trade",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ - when trade was part of the Block RFQ",
                            "name": "block_rfq_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Optional field containing combo trade identifier if the trade is a combo trade",
                            "name": "combo_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is reduce-only",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field (only for trades caused by liquidation): \"M\" when maker side of trade was under liquidation, \"T\" when taker side was under liquidation, \"MT\" when both sides of trade were under liquidation",
                            "name": "liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The sequence number of the trade within instrument",
                            "name": "trade_seq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "true if user order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users)",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional field containing leg trades if trade is a combo trade (present when querying for only combo trades and in combo_trades events)",
                            "name": "legs",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_execute_block_trade_response_trade"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Amount allocated to this user.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional client allocation info for brokers.",
                            "name": "client_info",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_execute_block_trade_response_client_info"
                            }
                        },
                        {
                            "comment": "Fee for the allocated part of the trade.",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User ID to which part of the trade is allocated. For brokers the User ID is obstructed.",
                            "name": "user_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_execute_block_trade_response_trade_allocation"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "ID of a client; available to broker. Represents a group of users under a common name.",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "ID assigned to a single user in a client; available to broker.",
                            "name": "client_link_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Name of the linked user within the client; available to broker.",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_execute_block_trade_response_client_info"
                }
            ]
        },
        "name": "private_execute_block_trade",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "The name of the application that executed the block trade on behalf of the user (optional).",
                    "name": "app_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Broker code associated with the broker block trade.",
                    "name": "broker_code",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Name of the broker associated with the block trade.",
                    "name": "broker_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Block trade id",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "",
                    "name": "trades",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_execute_block_trade_response_trade"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_execute_block_trade_response_result"
        }
    },
    {
        "comment": "Returns information about the users block trade",
        "endpoint": {
            "name": "private_get_block_trade",
            "path": "/private/get_block_trade",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Block trade id",
                        "name": "id",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_block_trade_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_block_trade_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_block_trade_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_block_trade_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_block_trade_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The name of the application that executed the block trade on behalf of the user (optional).",
                            "name": "app_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Broker code associated with the broker block trade.",
                            "name": "broker_code",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Name of the broker associated with the block trade.",
                            "name": "broker_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block trade id",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "",
                            "name": "trades",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_block_trade_response_trade"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_block_trade_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Unique (per currency) trade identifier",
                            "name": "trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction of the \"tick\" (0 = Plus Tick, 1 = Zero-Plus Tick, 2 = Minus Tick, 3 = Zero-Minus Tick).",
                            "name": "tick_direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "fee_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order was created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Advanced type of user order: \"usd\" or \"implv\" (only for options; omitted if not applicable)",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the user order (maker or taker), i.e. subscriber's order id that took part in the trade",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes what was role of users order: \"M\" when it was maker order, \"T\" when it was taker order",
                            "name": "liquidity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order is post-only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade size in contract units (optional, may be absent in historical trades)",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is MMP",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User's fee in units of the specified fee_currency",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "QuoteID of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Index Price at the moment of trade",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User defined label (presented only when previously set for order by user)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block trade id - when trade was part of a block trade",
                            "name": "block_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field containing combo instrument name if the trade is a combo trade",
                            "name": "combo_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Always null",
                            "name": "matching_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order type: \"limit, \"market\", or \"liquidation\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "List of allocations for Block RFQ pre-allocation. Each allocation specifies user_id, amount, and fee for the allocated part of the trade. For broker client allocations, a client_info object will be included.",
                            "name": "trade_allocations",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_block_trade_response_trade_allocation"
                            }
                        },
                        {
                            "comment": "Profit and loss in base currency.",
                            "name": "profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp of the trade (milliseconds since the UNIX epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Option implied volatility for the price (Option only)",
                            "name": "iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\" or \"archive\" (if order was archived)",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Underlying price for implied volatility calculations (Options only)",
                            "name": "underlying_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ quote - when trade was part of the Block RFQ",
                            "name": "block_rfq_quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "QuoteSet of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Mark Price at the moment of trade",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ - when trade was part of the Block RFQ",
                            "name": "block_rfq_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Optional field containing combo trade identifier if the trade is a combo trade",
                            "name": "combo_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is reduce-only",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field (only for trades caused by liquidation): \"M\" when maker side of trade was under liquidation, \"T\" when taker side was under liquidation, \"MT\" when both sides of trade were under liquidation",
                            "name": "liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The sequence number of the trade within instrument",
                            "name": "trade_seq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "true if user order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users)",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional field containing leg trades if trade is a combo trade (present when querying for only combo trades and in combo_trades events)",
                            "name": "legs",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_block_trade_response_trade"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Amount allocated to this user.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional client allocation info for brokers.",
                            "name": "client_info",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_block_trade_response_client_info"
                            }
                        },
                        {
                            "comment": "Fee for the allocated part of the trade.",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User ID to which part of the trade is allocated. For brokers the User ID is obstructed.",
                            "name": "user_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_block_trade_response_trade_allocation"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "ID of a client; available to broker. Represents a group of users under a common name.",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "ID assigned to a single user in a client; available to broker.",
                            "name": "client_link_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Name of the linked user within the client; available to broker.",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_block_trade_response_client_info"
                }
            ]
        },
        "name": "private_get_block_trade",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "The name of the application that executed the block trade on behalf of the user (optional).",
                    "name": "app_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Broker code associated with the broker block trade.",
                    "name": "broker_code",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Name of the broker associated with the block trade.",
                    "name": "broker_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Block trade id",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "",
                    "name": "trades",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_block_trade_response_trade"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_block_trade_response_result"
        }
    },
    {
        "comment": "Provides a list of block trade requests including pending approvals, declined trades, and expired trades. timestamp and nonce received in response can be used to approve or reject the pending block trade. To use a block trade approval feature the additional API key setting feature called: enabled_features: block_trade_approval is required. This key has to be given to broker/registered partner who performs the trades on behalf of the user for the feature to be active. If the user wants to approve the trade, he has to approve it from different API key with doesn't have this feature enabled. Only broker clients can use broker_code to query for their broker block trade requests.",
        "endpoint": {
            "name": "private_get_block_trade_requests",
            "path": "/private/get_block_trade_requests",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Broker code to filter block trade requests. Only broker clients can use broker_code to query for their executed broker block trades.",
                        "name": "broker_code",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_block_trade_requests_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_block_trade_requests_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_block_trade_requests_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_block_trade_requests_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_block_trade_requests_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The name of the application that executed the block trade on behalf of the user (optional).",
                            "name": "app_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Broker code associated with the broker block trade.",
                            "name": "broker_code",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Name of the broker associated with the block trade.",
                            "name": "broker_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Combo instrument identifier",
                            "name": "combo_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "State of the pending block trade for the other party (optional).",
                            "name": "counterparty_state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_block_trade_requests_response_counterparty_state"
                            }
                        },
                        {
                            "comment": "Nonce that can be used to approve or reject pending block trade.",
                            "name": "nonce",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade role of the user: maker or taker",
                            "name": "role",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "State of the pending block trade for current user.",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_block_trade_requests_response_state"
                            }
                        },
                        {
                            "comment": "Timestamp that can be used to approve or reject pending block trade.",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "",
                            "name": "trades",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_block_trade_requests_response_trade"
                            }
                        },
                        {
                            "comment": "Unique user identifier",
                            "name": "user_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Username of the user who initiated the block trade.",
                            "name": "username",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_block_trade_requests_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "State timestamp.",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "State value.",
                            "name": "value",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_block_trade_requests_response_counterparty_state"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "State timestamp.",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "State value.",
                            "name": "value",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_block_trade_requests_response_state"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_block_trade_requests_response_trade"
                }
            ]
        },
        "name": "private_get_block_trade_requests",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "The name of the application that executed the block trade on behalf of the user (optional).",
                    "name": "app_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Broker code associated with the broker block trade.",
                    "name": "broker_code",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Name of the broker associated with the block trade.",
                    "name": "broker_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Combo instrument identifier",
                    "name": "combo_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "State of the pending block trade for the other party (optional).",
                    "name": "counterparty_state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_block_trade_requests_response_counterparty_state"
                    }
                },
                {
                    "comment": "Nonce that can be used to approve or reject pending block trade.",
                    "name": "nonce",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Trade role of the user: maker or taker",
                    "name": "role",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "State of the pending block trade for current user.",
                    "name": "state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_block_trade_requests_response_state"
                    }
                },
                {
                    "comment": "Timestamp that can be used to approve or reject pending block trade.",
                    "name": "timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "",
                    "name": "trades",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_block_trade_requests_response_trade"
                    }
                },
                {
                    "comment": "Unique user identifier",
                    "name": "user_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Username of the user who initiated the block trade.",
                    "name": "username",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_block_trade_requests_response_result"
        }
    },
    {
        "comment": "Returns list of users block trades. If currency is not provided, returns block trades for all currencies. block_rfq_id can be provided to receive block trades related to that particular Block RFQ.",
        "endpoint": {
            "name": "private_get_block_trades",
            "path": "/private/get_block_trades",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Count of Block Trades returned, maximum - 101",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Response will contain block trades older than the one provided in this field",
                        "name": "start_id",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The id of the oldest block trade to be returned, start_id is required with end_id",
                        "name": "end_id",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "ID of the Block RFQ",
                        "name": "block_rfq_id",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Broker code to filter block trades. Only broker clients can use broker_code to filter broker block trades. Use any for all block trades.",
                        "name": "broker_code",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_block_trades_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_block_trades_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_block_trades_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_block_trades_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_block_trades_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The name of the application that executed the block trade on behalf of the user (optional).",
                            "name": "app_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Broker code associated with the broker block trade.",
                            "name": "broker_code",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Name of the broker associated with the block trade.",
                            "name": "broker_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block trade id",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "",
                            "name": "trades",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_block_trades_response_trade"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_block_trades_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Unique (per currency) trade identifier",
                            "name": "trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction of the \"tick\" (0 = Plus Tick, 1 = Zero-Plus Tick, 2 = Minus Tick, 3 = Zero-Minus Tick).",
                            "name": "tick_direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "fee_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order was created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Advanced type of user order: \"usd\" or \"implv\" (only for options; omitted if not applicable)",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the user order (maker or taker), i.e. subscriber's order id that took part in the trade",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes what was role of users order: \"M\" when it was maker order, \"T\" when it was taker order",
                            "name": "liquidity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order is post-only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade size in contract units (optional, may be absent in historical trades)",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is MMP",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User's fee in units of the specified fee_currency",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "QuoteID of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Index Price at the moment of trade",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User defined label (presented only when previously set for order by user)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block trade id - when trade was part of a block trade",
                            "name": "block_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field containing combo instrument name if the trade is a combo trade",
                            "name": "combo_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Always null",
                            "name": "matching_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order type: \"limit, \"market\", or \"liquidation\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "List of allocations for Block RFQ pre-allocation. Each allocation specifies user_id, amount, and fee for the allocated part of the trade. For broker client allocations, a client_info object will be included.",
                            "name": "trade_allocations",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_block_trades_response_trade_allocation"
                            }
                        },
                        {
                            "comment": "Profit and loss in base currency.",
                            "name": "profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp of the trade (milliseconds since the UNIX epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Option implied volatility for the price (Option only)",
                            "name": "iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\" or \"archive\" (if order was archived)",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Underlying price for implied volatility calculations (Options only)",
                            "name": "underlying_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ quote - when trade was part of the Block RFQ",
                            "name": "block_rfq_quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "QuoteSet of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Mark Price at the moment of trade",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ - when trade was part of the Block RFQ",
                            "name": "block_rfq_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Optional field containing combo trade identifier if the trade is a combo trade",
                            "name": "combo_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is reduce-only",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field (only for trades caused by liquidation): \"M\" when maker side of trade was under liquidation, \"T\" when taker side was under liquidation, \"MT\" when both sides of trade were under liquidation",
                            "name": "liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The sequence number of the trade within instrument",
                            "name": "trade_seq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "true if user order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users)",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional field containing leg trades if trade is a combo trade (present when querying for only combo trades and in combo_trades events)",
                            "name": "legs",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_block_trades_response_trade"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Amount allocated to this user.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional client allocation info for brokers.",
                            "name": "client_info",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_block_trades_response_client_info"
                            }
                        },
                        {
                            "comment": "Fee for the allocated part of the trade.",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User ID to which part of the trade is allocated. For brokers the User ID is obstructed.",
                            "name": "user_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_block_trades_response_trade_allocation"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "ID of a client; available to broker. Represents a group of users under a common name.",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "ID assigned to a single user in a client; available to broker.",
                            "name": "client_link_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Name of the linked user within the client; available to broker.",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_block_trades_response_client_info"
                }
            ]
        },
        "name": "private_get_block_trades",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "The name of the application that executed the block trade on behalf of the user (optional).",
                    "name": "app_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Broker code associated with the broker block trade.",
                    "name": "broker_code",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Name of the broker associated with the block trade.",
                    "name": "broker_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Block trade id",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "",
                    "name": "trades",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_block_trades_response_trade"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_block_trades_response_result"
        }
    },
    {
        "comment": "Broker Method Provides a list of broker block trade requests including pending approvals, declined trades, and expired trades. timestamp and nonce received in response can be used to approve or reject the pending broker block trade.",
        "endpoint": {
            "name": "private_get_broker_trade_requests",
            "path": "/private/get_broker_trade_requests",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": null,
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_broker_trade_requests_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_broker_trade_requests_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_broker_trade_requests_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_broker_trade_requests_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "maker",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_broker_trade_requests_response_maker"
                            }
                        },
                        {
                            "comment": "Nonce for approving or rejecting the broker block trade request.",
                            "name": "nonce",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "State of the broker block trade request.",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "taker",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_broker_trade_requests_response_taker"
                            }
                        },
                        {
                            "comment": "Timestamp of the broker block trade request (milliseconds since the UNIX epoch).",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "",
                            "name": "trades",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_broker_trade_requests_response_trade"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_broker_trade_requests_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "ID of a client; available to broker. Represents a group of users under a common name.",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "ID assigned to a single user in a client; available to broker.",
                            "name": "client_link_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Name of the linked user within the client; available to broker.",
                            "name": "client_link_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Name of the client; available to broker.",
                            "name": "client_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "State of the request from the maker side: initial, approved, or rejected.",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Obscured user id of the maker.",
                            "name": "user_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_broker_trade_requests_response_maker"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "ID of a client; available to broker. Represents a group of users under a common name.",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "ID assigned to a single user in a client; available to broker.",
                            "name": "client_link_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Name of the linked user within the client; available to broker.",
                            "name": "client_link_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Name of the client; available to broker.",
                            "name": "client_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "State of the request from the taker side: initial, approved, or rejected.",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Obscured user id of the taker.",
                            "name": "user_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_broker_trade_requests_response_taker"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Trade amount.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trade direction (buy or sell).",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Name of the traded instrument.",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade price.",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_broker_trade_requests_response_trade"
                }
            ]
        },
        "name": "private_get_broker_trade_requests",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "maker",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_broker_trade_requests_response_maker"
                    }
                },
                {
                    "comment": "Nonce for approving or rejecting the broker block trade request.",
                    "name": "nonce",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "State of the broker block trade request.",
                    "name": "state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "",
                    "name": "taker",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_broker_trade_requests_response_taker"
                    }
                },
                {
                    "comment": "Timestamp of the broker block trade request (milliseconds since the UNIX epoch).",
                    "name": "timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "",
                    "name": "trades",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_broker_trade_requests_response_trade"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_broker_trade_requests_response_result"
        }
    },
    {
        "comment": "Broker Method Returns list of broker block trades. If currency is not provided, returns broker block trades for all currencies.",
        "endpoint": {
            "name": "private_get_broker_trades",
            "path": "/private/get_broker_trades",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Number of requested items, default - 20, maximum - 1000",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Response will contain block trades older than the one provided in this field",
                        "name": "start_id",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The id of the oldest block trade to be returned, start_id is required with end_id",
                        "name": "end_id",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_broker_trades_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_broker_trades_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_broker_trades_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_broker_trades_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_broker_trades_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "history",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_broker_trades_response_history"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_broker_trades_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Unique identifier of the block trade history entry.",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "maker",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_broker_trades_response_maker"
                            }
                        },
                        {
                            "comment": "",
                            "name": "taker",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_broker_trades_response_taker"
                            }
                        },
                        {
                            "comment": "Timestamp of the block trade history entry (milliseconds since the UNIX epoch).",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "",
                            "name": "trades",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_broker_trades_response_trade"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_broker_trades_response_history"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "ID of a client; available to broker. Represents a group of users under a common name.",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "ID assigned to a single user in a client; available to broker.",
                            "name": "client_link_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Name of the linked user within the client; available to broker.",
                            "name": "client_link_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Name of the client; available to broker.",
                            "name": "client_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Obscured user id of the maker.",
                            "name": "user_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_broker_trades_response_maker"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "ID of a client; available to broker. Represents a group of users under a common name.",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "ID assigned to a single user in a client; available to broker.",
                            "name": "client_link_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Name of the linked user within the client; available to broker.",
                            "name": "client_link_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Name of the client; available to broker.",
                            "name": "client_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Obscured user id of the taker.",
                            "name": "user_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_broker_trades_response_taker"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Unique (per currency) trade identifier",
                            "name": "trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction of the \"tick\" (0 = Plus Tick, 1 = Zero-Plus Tick, 2 = Minus Tick, 3 = Zero-Minus Tick).",
                            "name": "tick_direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "fee_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order was created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Advanced type of user order: \"usd\" or \"implv\" (only for options; omitted if not applicable)",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the user order (maker or taker), i.e. subscriber's order id that took part in the trade",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes what was role of users order: \"M\" when it was maker order, \"T\" when it was taker order",
                            "name": "liquidity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if user order is post-only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade size in contract units (optional, may be absent in historical trades)",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is MMP",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User's fee in units of the specified fee_currency",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "QuoteID of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Index Price at the moment of trade",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User defined label (presented only when previously set for order by user)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Block trade id - when trade was part of a block trade",
                            "name": "block_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field containing combo instrument name if the trade is a combo trade",
                            "name": "combo_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Always null",
                            "name": "matching_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order type: \"limit, \"market\", or \"liquidation\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "List of allocations for Block RFQ pre-allocation. Each allocation specifies user_id, amount, and fee for the allocated part of the trade. For broker client allocations, a client_info object will be included.",
                            "name": "trade_allocations",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_broker_trades_response_trade_allocation"
                            }
                        },
                        {
                            "comment": "Profit and loss in base currency.",
                            "name": "profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp of the trade (milliseconds since the UNIX epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Option implied volatility for the price (Option only)",
                            "name": "iv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\" or \"archive\" (if order was archived)",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Underlying price for implied volatility calculations (Options only)",
                            "name": "underlying_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ quote - when trade was part of the Block RFQ",
                            "name": "block_rfq_quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "QuoteSet of the user order (optional, present only for orders placed with private/mass_quote)",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Mark Price at the moment of trade",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ - when trade was part of the Block RFQ",
                            "name": "block_rfq_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Optional field containing combo trade identifier if the trade is a combo trade",
                            "name": "combo_trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if user order is reduce-only",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional field (only for trades caused by liquidation): \"M\" when maker side of trade was under liquidation, \"T\" when taker side was under liquidation, \"MT\" when both sides of trade were under liquidation",
                            "name": "liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The sequence number of the trade within instrument",
                            "name": "trade_seq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "true if user order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users)",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional field containing leg trades if trade is a combo trade (present when querying for only combo trades and in combo_trades events)",
                            "name": "legs",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The next start ID for pagination.",
                            "name": "next_start_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_broker_trades_response_trade"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Amount allocated to this user.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional client allocation info for brokers.",
                            "name": "client_info",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_broker_trades_response_client_info"
                            }
                        },
                        {
                            "comment": "Fee for the allocated part of the trade.",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "User ID to which part of the trade is allocated. For brokers the User ID is obstructed.",
                            "name": "user_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_broker_trades_response_trade_allocation"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "ID of a client; available to broker. Represents a group of users under a common name.",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "ID assigned to a single user in a client; available to broker.",
                            "name": "client_link_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Name of the linked user within the client; available to broker.",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_broker_trades_response_client_info"
                }
            ]
        },
        "name": "private_get_broker_trades",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "history",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_broker_trades_response_history"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_broker_trades_response_result"
        }
    },
    {
        "comment": "DEPRECATED: This method is deprecated. Please use private/get_block_trade_requests instead.Provides a list of pending block trade approvals. timestamp and nonce received in response can be used to approve or reject the pending block trade. To use a block trade approval feature the additional API key setting feature called: enabled_features: block_trade_approval is required. This key has to be given to broker/registered partner who performs the trades on behalf of the user for the feature to be active. If the user wants to approve the trade, he has to approve it from different API key with doesn't have this feature enabled.",
        "endpoint": {
            "name": "private_get_pending_block_trades",
            "path": "/private/get_pending_block_trades",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": null,
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_pending_block_trades_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_pending_block_trades_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_pending_block_trades_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_pending_block_trades_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The name of the application that executed the block trade on behalf of the user (optional).",
                            "name": "app_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Broker code associated with the broker block trade.",
                            "name": "broker_code",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Name of the broker associated with the block trade.",
                            "name": "broker_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Combo instrument identifier",
                            "name": "combo_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "State of the pending block trade for the other party (optional).",
                            "name": "counterparty_state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_pending_block_trades_response_counterparty_state"
                            }
                        },
                        {
                            "comment": "Nonce that can be used to approve or reject pending block trade.",
                            "name": "nonce",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Trade role of the user: maker or taker",
                            "name": "role",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "State of the pending block trade for current user.",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_pending_block_trades_response_state"
                            }
                        },
                        {
                            "comment": "Timestamp that can be used to approve or reject pending block trade.",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "",
                            "name": "trades",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_pending_block_trades_response_trade"
                            }
                        },
                        {
                            "comment": "Unique user identifier",
                            "name": "user_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Username of the user who initiated the block trade.",
                            "name": "username",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_pending_block_trades_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "State timestamp.",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "State value.",
                            "name": "value",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_pending_block_trades_response_counterparty_state"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "State timestamp.",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "State value.",
                            "name": "value",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_pending_block_trades_response_state"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Price in base currency",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_pending_block_trades_response_trade"
                }
            ]
        },
        "name": "private_get_pending_block_trades",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "The name of the application that executed the block trade on behalf of the user (optional).",
                    "name": "app_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Broker code associated with the broker block trade.",
                    "name": "broker_code",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Name of the broker associated with the block trade.",
                    "name": "broker_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Combo instrument identifier",
                    "name": "combo_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "State of the pending block trade for the other party (optional).",
                    "name": "counterparty_state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_pending_block_trades_response_counterparty_state"
                    }
                },
                {
                    "comment": "Nonce that can be used to approve or reject pending block trade.",
                    "name": "nonce",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Trade role of the user: maker or taker",
                    "name": "role",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "State of the pending block trade for current user.",
                    "name": "state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_pending_block_trades_response_state"
                    }
                },
                {
                    "comment": "Timestamp that can be used to approve or reject pending block trade.",
                    "name": "timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "",
                    "name": "trades",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_pending_block_trades_response_trade"
                    }
                },
                {
                    "comment": "Unique user identifier",
                    "name": "user_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Username of the user who initiated the block trade.",
                    "name": "username",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_pending_block_trades_response_result"
        }
    },
    {
        "comment": "User at any time (before the private/execute_block_trade is called) can invalidate its own signature effectively cancelling block trade",
        "endpoint": {
            "name": "private_invalidate_block_trade_signature",
            "path": "/private/invalidate_block_trade_signature",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Signature of block trade that will be invalidated",
                        "name": "signature",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_invalidate_block_trade_signature_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Result of method execution. ok in case of success",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_invalidate_block_trade_signature_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Result of method execution. ok in case of success",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_invalidate_block_trade_signature_response"
                }
            ]
        },
        "name": "private_invalidate_block_trade_signature",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Used to reject a pending block trade. nonce and timestamp are used to identify the block trade while role should be opposite to the trading counterparty. To use a block trade approval feature the additional API key setting feature called: enabled_features: block_trade_approval is required. This key has to be given to broker/registered partner who performs the trades on behalf of the user for the feature to be active. If the user wants to approve the trade, he has to approve it from different API key with doesn't have this feature enabled.",
        "endpoint": {
            "name": "private_reject_block_trade",
            "path": "/private/reject_block_trade",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "maker",
                            "taker"
                        ],
                        "name": "role"
                    }
                ],
                "fields": [
                    {
                        "comment": "Timestamp, shared with other party (milliseconds since the UNIX epoch)",
                        "name": "timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Nonce, shared with other party",
                        "name": "nonce",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Describes if user wants to be maker or taker of trades",
                        "name": "role",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "role"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_reject_block_trade_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Result of method execution. ok in case of success",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_reject_block_trade_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Result of method execution. ok in case of success",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_reject_block_trade_response"
                }
            ]
        },
        "name": "private_reject_block_trade",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Checks if a block trade can be executed",
        "endpoint": {
            "name": "private_simulate_block_trade",
            "path": "/private/simulate_block_trade",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "maker",
                            "taker"
                        ],
                        "name": "role"
                    }
                ],
                "fields": [
                    {
                        "comment": "Describes if user wants to be maker or taker of trades",
                        "name": "role",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "role"
                        }
                    },
                    {
                        "comment": "List of trades for block trade",
                        "name": "trades",
                        "required": "true",
                        "type": {
                            "enums": [
                                {
                                    "items": [
                                        "sell",
                                        "buy"
                                    ],
                                    "name": "direction"
                                }
                            ],
                            "fields": [
                                {
                                    "comment": "Instrument name",
                                    "name": "instrument_name",
                                    "required": "true",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "string"
                                    }
                                },
                                {
                                    "comment": "Price for trade",
                                    "name": "price",
                                    "required": "true",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "number"
                                    }
                                },
                                {
                                    "comment": "It represents the requested trade size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                                    "name": "amount",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "number"
                                    }
                                },
                                {
                                    "comment": "Direction of trade from the maker perspective",
                                    "name": "direction",
                                    "required": "true",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "direction"
                                    }
                                }
                            ],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_simulate_block_trade_request_trade"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_simulate_block_trade_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "true if block trade can be executed, false otherwise",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_simulate_block_trade_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if block trade can be executed, false otherwise",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_simulate_block_trade_response"
                }
            ]
        },
        "name": "private_simulate_block_trade",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "boolean"
        }
    },
    {
        "comment": "Verifies and creates block trade signatureNote: In the API, the direction field is always expressed from the maker's perspective. This means that when you accept a block trade as a taker, the direction shown in the API represents the opposite side of your trade. For example, if you are buying puts as a taker, the API will show the operation as a \"sell put\" (maker's perspective), and you will be verifying and accepting a \"sell put\" block trade.\ud83d\udcd6 Related Support Article: Block Trading",
        "endpoint": {
            "name": "private_verify_block_trade",
            "path": "/private/verify_block_trade",
            "rate_limiter": "matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "maker",
                            "taker"
                        ],
                        "name": "role"
                    }
                ],
                "fields": [
                    {
                        "comment": "Timestamp, shared with other party (milliseconds since the UNIX epoch)",
                        "name": "timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Nonce, shared with other party",
                        "name": "nonce",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Describes if user wants to be maker or taker of trades",
                        "name": "role",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "role"
                        }
                    },
                    {
                        "comment": "List of trades for block trade",
                        "name": "trades",
                        "required": "true",
                        "type": {
                            "enums": [
                                {
                                    "items": [
                                        "sell",
                                        "buy"
                                    ],
                                    "name": "direction"
                                }
                            ],
                            "fields": [
                                {
                                    "comment": "Instrument name",
                                    "name": "instrument_name",
                                    "required": "true",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "string"
                                    }
                                },
                                {
                                    "comment": "Price for trade",
                                    "name": "price",
                                    "required": "true",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "number"
                                    }
                                },
                                {
                                    "comment": "It represents the requested trade size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                                    "name": "amount",
                                    "required": "false",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "number"
                                    }
                                },
                                {
                                    "comment": "Direction of trade from the maker perspective",
                                    "name": "direction",
                                    "required": "true",
                                    "type": {
                                        "enums": [],
                                        "fields": [],
                                        "is_array": false,
                                        "is_nested_array": false,
                                        "is_primitive": true,
                                        "name": "direction"
                                    }
                                }
                            ],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_verify_block_trade_request_trade"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_verify_block_trade_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_verify_block_trade_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_verify_block_trade_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_verify_block_trade_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_verify_block_trade_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Signature of block trade It is valid only for 5 minutes around given timestamp",
                            "name": "signature",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_verify_block_trade_response_result"
                }
            ]
        },
        "name": "private_verify_block_trade",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Signature of block trade It is valid only for 5 minutes around given timestamp",
                    "name": "signature",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_verify_block_trade_response_result"
        }
    },
    {
        "comment": "Adds new entry to address book of given type",
        "endpoint": {
            "name": "private_add_to_address_book",
            "path": "/private/add_to_address_book",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "USDT",
                            "XRP",
                            "ETH",
                            "PAXG",
                            "USYC",
                            "STETH",
                            "MATIC",
                            "BTC",
                            "BNB",
                            "SOL",
                            "ETHW",
                            "USDC",
                            "USDE"
                        ],
                        "name": "currency"
                    },
                    {
                        "items": [
                            "transfer",
                            "deposit_source",
                            "withdrawal"
                        ],
                        "name": "type"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Address book type",
                        "name": "type",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "type"
                        }
                    },
                    {
                        "comment": "Address in currency format",
                        "name": "address",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Label of the address book entry",
                        "name": "label",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Name of beneficiary VASP",
                        "name": "beneficiary_vasp_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "DID of beneficiary VASP",
                        "name": "beneficiary_vasp_did",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Website of the beneficiary VASP. Required if the address book entry is associated with a VASP that is not included in the list of known VASPs",
                        "name": "beneficiary_vasp_website",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "First name of beneficiary (if beneficiary is a person)",
                        "name": "beneficiary_first_name",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "First name of beneficiary (if beneficiary is a person)",
                        "name": "beneficiary_last_name",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Beneficiary company name (if beneficiary is a company)",
                        "name": "beneficiary_company_name",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Geographical address of the beneficiary",
                        "name": "beneficiary_address",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Indicates that the user agreed to shared provided information with 3rd parties",
                        "name": "agreed",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "The user confirms that he provided address belongs to him and he has access to it via an un-hosted wallet software",
                        "name": "personal",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "The user can pass a list of currencies to add the address for. It is currently available ONLY for ERC20 currencies. Without passing this paramater for an ERC20 currency, the address will be added to ALL of the ERC20 currencies.",
                        "name": "extra_currencies",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_add_to_address_book_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_add_to_address_book_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_add_to_address_book_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_add_to_address_book_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_add_to_address_book_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Address in proper format for currency",
                            "name": "address",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Indicates that the user agreed to shared provided information with 3rd parties",
                            "name": "agreed",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Geographical address of the beneficiary",
                            "name": "beneficiary_address",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Company name of the beneficiary (if beneficiary is a company)",
                            "name": "beneficiary_company_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "First name of the beneficiary (if beneficiary is a person)",
                            "name": "beneficiary_first_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Last name of the beneficiary (if beneficiary is a person)",
                            "name": "beneficiary_last_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "DID of beneficiary VASP",
                            "name": "beneficiary_vasp_did",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Name of beneficiary VASP",
                            "name": "beneficiary_vasp_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Website of the beneficiary VASP",
                            "name": "beneficiary_vasp_website",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Signalises that addition information regarding the beneficiary of the address is required",
                            "name": "info_required",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Label of the address book entry",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The user confirms that he provided address belongs to him and he has access to it via an un-hosted wallet software",
                            "name": "personal",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "If address requires email confirmation for withdrawals",
                            "name": "requires_confirmation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "If email confirmation change is in progress",
                            "name": "requires_confirmation_change",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Wallet address status, values: [admin_locked, waiting, confirmed, ready]",
                            "name": "status",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Address book type",
                            "name": "type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Timestamp when the address will be ready",
                            "name": "waiting_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_add_to_address_book_response_result"
                }
            ]
        },
        "name": "private_add_to_address_book",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Address in proper format for currency",
                    "name": "address",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Indicates that the user agreed to shared provided information with 3rd parties",
                    "name": "agreed",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Geographical address of the beneficiary",
                    "name": "beneficiary_address",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Company name of the beneficiary (if beneficiary is a company)",
                    "name": "beneficiary_company_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "First name of the beneficiary (if beneficiary is a person)",
                    "name": "beneficiary_first_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Last name of the beneficiary (if beneficiary is a person)",
                    "name": "beneficiary_last_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "DID of beneficiary VASP",
                    "name": "beneficiary_vasp_did",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Name of beneficiary VASP",
                    "name": "beneficiary_vasp_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Website of the beneficiary VASP",
                    "name": "beneficiary_vasp_website",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                    "name": "currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Signalises that addition information regarding the beneficiary of the address is required",
                    "name": "info_required",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Label of the address book entry",
                    "name": "label",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The user confirms that he provided address belongs to him and he has access to it via an un-hosted wallet software",
                    "name": "personal",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "If address requires email confirmation for withdrawals",
                    "name": "requires_confirmation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "If email confirmation change is in progress",
                    "name": "requires_confirmation_change",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Wallet address status, values: [admin_locked, waiting, confirmed, ready]",
                    "name": "status",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Address book type",
                    "name": "type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Timestamp when the address will be ready",
                    "name": "waiting_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_add_to_address_book_response_result"
        }
    },
    {
        "comment": "Cancel transfer",
        "endpoint": {
            "name": "private_cancel_transfer_by_id",
            "path": "/private/cancel_transfer_by_id",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Id of transfer",
                        "name": "id",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_cancel_transfer_by_id_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_cancel_transfer_by_id_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_cancel_transfer_by_id_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_cancel_transfer_by_id_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_cancel_transfer_by_id_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Amount of funds in given currency",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "created_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Transfer direction",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of transfer",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "For transfer from/to subaccount returns this subaccount name, for transfer to other account returns address, for transfer from other account returns that accounts username.",
                            "name": "other_side",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Transfer state, allowed values : prepared, confirmed, cancelled, waiting_for_admin, insufficient_funds, withdrawal_limit otherwise rejection reason",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Type of transfer: user - sent to user, subaccount - sent to subaccount",
                            "name": "type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "updated_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_cancel_transfer_by_id_response_result"
                }
            ]
        },
        "name": "private_cancel_transfer_by_id",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Amount of funds in given currency",
                    "name": "amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "created_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                    "name": "currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Transfer direction",
                    "name": "direction",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Id of transfer",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "For transfer from/to subaccount returns this subaccount name, for transfer to other account returns address, for transfer from other account returns that accounts username.",
                    "name": "other_side",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Transfer state, allowed values : prepared, confirmed, cancelled, waiting_for_admin, insufficient_funds, withdrawal_limit otherwise rejection reason",
                    "name": "state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Type of transfer: user - sent to user, subaccount - sent to subaccount",
                    "name": "type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "updated_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_cancel_transfer_by_id_response_result"
        }
    },
    {
        "comment": "Cancels withdrawal request",
        "endpoint": {
            "name": "private_cancel_withdrawal",
            "path": "/private/cancel_withdrawal",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "The withdrawal id",
                        "name": "id",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_cancel_withdrawal_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_cancel_withdrawal_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_cancel_withdrawal_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_cancel_withdrawal_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_cancel_withdrawal_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Address in proper format for currency",
                            "name": "address",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Amount of funds in given currency",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch) of withdrawal confirmation, null when not confirmed",
                            "name": "confirmed_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "created_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Fee in currency",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Withdrawal id in Deribit system",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Id of priority level",
                            "name": "priority",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Withdrawal state, allowed values : unconfirmed, confirmed, cancelled, completed, interrupted, rejected",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Transaction id in proper format for currency, null if id is not available",
                            "name": "transaction_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "updated_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_cancel_withdrawal_response_result"
                }
            ]
        },
        "name": "private_cancel_withdrawal",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Address in proper format for currency",
                    "name": "address",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Amount of funds in given currency",
                    "name": "amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch) of withdrawal confirmation, null when not confirmed",
                    "name": "confirmed_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "created_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                    "name": "currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Fee in currency",
                    "name": "fee",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Withdrawal id in Deribit system",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Id of priority level",
                    "name": "priority",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Withdrawal state, allowed values : unconfirmed, confirmed, cancelled, completed, interrupted, rejected",
                    "name": "state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Transaction id in proper format for currency, null if id is not available",
                    "name": "transaction_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "updated_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_cancel_withdrawal_response_result"
        }
    },
    {
        "comment": "Creates deposit address in currency",
        "endpoint": {
            "name": "private_create_deposit_address",
            "path": "/private/create_deposit_address",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_create_deposit_address_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Object if address is created, null otherwise",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_create_deposit_address_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_create_deposit_address_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Object if address is created, null otherwise",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_create_deposit_address_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_create_deposit_address_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Address in proper format for currency",
                            "name": "address",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Address type/purpose, allowed values : deposit",
                            "name": "type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_create_deposit_address_response_result"
                }
            ]
        },
        "name": "private_create_deposit_address",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Address in proper format for currency",
                    "name": "address",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                    "name": "currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Address type/purpose, allowed values : deposit",
                    "name": "type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_create_deposit_address_response_result"
        }
    },
    {
        "comment": "Deletes address beneficiary information",
        "endpoint": {
            "name": "private_delete_address_beneficiary",
            "path": "/private/delete_address_beneficiary",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "USDT",
                            "XRP",
                            "ETH",
                            "PAXG",
                            "USYC",
                            "STETH",
                            "MATIC",
                            "BTC",
                            "BNB",
                            "SOL",
                            "ETHW",
                            "USDC",
                            "USDE"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Address in currency format",
                        "name": "address",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Tag for XRP addresses",
                        "name": "tag",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_delete_address_beneficiary_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "ok",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_delete_address_beneficiary_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "ok",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_delete_address_beneficiary_response"
                }
            ]
        },
        "name": "private_delete_address_beneficiary",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Retrieves address beneficiary information",
        "endpoint": {
            "name": "private_get_address_beneficiary",
            "path": "/private/get_address_beneficiary",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "USDT",
                            "XRP",
                            "ETH",
                            "PAXG",
                            "USYC",
                            "STETH",
                            "MATIC",
                            "BTC",
                            "BNB",
                            "SOL",
                            "ETHW",
                            "USDC",
                            "USDE"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Address in currency format",
                        "name": "address",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Tag for XRP addresses",
                        "name": "tag",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_address_beneficiary_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_address_beneficiary_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_address_beneficiary_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_address_beneficiary_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_address_beneficiary_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Address in proper format for currency",
                            "name": "address",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Indicates that the user agreed to shared provided information with 3rd parties",
                            "name": "agreed",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Geographical address of the beneficiary",
                            "name": "beneficiary_address",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Company name of the beneficiary (if beneficiary is a company)",
                            "name": "beneficiary_company_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "First name of the beneficiary (if beneficiary is a person)",
                            "name": "beneficiary_first_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Last name of the beneficiary (if beneficiary is a person)",
                            "name": "beneficiary_last_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "DID of beneficiary VASP",
                            "name": "beneficiary_vasp_did",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Name of beneficiary VASP",
                            "name": "beneficiary_vasp_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Website of the beneficiary VASP",
                            "name": "beneficiary_vasp_website",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The user confirms that he provided address belongs to him and he has access to it via an un-hosted wallet software",
                            "name": "personal",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Tag for XRP addresses (optional)",
                            "name": "tag",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Indicates if the address belongs to an unhosted wallet",
                            "name": "unhosted",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "update_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_address_beneficiary_response_result"
                }
            ]
        },
        "name": "private_get_address_beneficiary",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Address in proper format for currency",
                    "name": "address",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Indicates that the user agreed to shared provided information with 3rd parties",
                    "name": "agreed",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Geographical address of the beneficiary",
                    "name": "beneficiary_address",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Company name of the beneficiary (if beneficiary is a company)",
                    "name": "beneficiary_company_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "First name of the beneficiary (if beneficiary is a person)",
                    "name": "beneficiary_first_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Last name of the beneficiary (if beneficiary is a person)",
                    "name": "beneficiary_last_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "DID of beneficiary VASP",
                    "name": "beneficiary_vasp_did",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Name of beneficiary VASP",
                    "name": "beneficiary_vasp_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Website of the beneficiary VASP",
                    "name": "beneficiary_vasp_website",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                    "name": "currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The user confirms that he provided address belongs to him and he has access to it via an un-hosted wallet software",
                    "name": "personal",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Tag for XRP addresses (optional)",
                    "name": "tag",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Indicates if the address belongs to an unhosted wallet",
                    "name": "unhosted",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "update_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_address_beneficiary_response_result"
        }
    },
    {
        "comment": "Retrieves address book of given type",
        "endpoint": {
            "name": "private_get_address_book",
            "path": "/private/get_address_book",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "USDT",
                            "XRP",
                            "ETH",
                            "PAXG",
                            "USYC",
                            "STETH",
                            "MATIC",
                            "BTC",
                            "BNB",
                            "SOL",
                            "ETHW",
                            "USDC",
                            "USDE"
                        ],
                        "name": "currency"
                    },
                    {
                        "items": [
                            "transfer",
                            "deposit_source",
                            "withdrawal"
                        ],
                        "name": "type"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Address book type",
                        "name": "type",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "type"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_address_book_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_address_book_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_address_book_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_address_book_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_address_book_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Address in proper format for currency",
                            "name": "address",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Indicates that the user agreed to shared provided information with 3rd parties",
                            "name": "agreed",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Geographical address of the beneficiary",
                            "name": "beneficiary_address",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Company name of the beneficiary (if beneficiary is a company)",
                            "name": "beneficiary_company_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "First name of the beneficiary (if beneficiary is a person)",
                            "name": "beneficiary_first_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Last name of the beneficiary (if beneficiary is a person)",
                            "name": "beneficiary_last_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "DID of beneficiary VASP",
                            "name": "beneficiary_vasp_did",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Name of beneficiary VASP",
                            "name": "beneficiary_vasp_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Website of the beneficiary VASP",
                            "name": "beneficiary_vasp_website",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Signalises that addition information regarding the beneficiary of the address is required",
                            "name": "info_required",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Label of the address book entry",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The user confirms that he provided address belongs to him and he has access to it via an un-hosted wallet software",
                            "name": "personal",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "If address requires email confirmation for withdrawals",
                            "name": "requires_confirmation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "If email confirmation change is in progress",
                            "name": "requires_confirmation_change",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Wallet address status, values: [admin_locked, waiting, confirmed, ready]",
                            "name": "status",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Address book type",
                            "name": "type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Timestamp when the address will be ready",
                            "name": "waiting_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_address_book_response_result"
                }
            ]
        },
        "name": "private_get_address_book",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Address in proper format for currency",
                    "name": "address",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Indicates that the user agreed to shared provided information with 3rd parties",
                    "name": "agreed",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Geographical address of the beneficiary",
                    "name": "beneficiary_address",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Company name of the beneficiary (if beneficiary is a company)",
                    "name": "beneficiary_company_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "First name of the beneficiary (if beneficiary is a person)",
                    "name": "beneficiary_first_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Last name of the beneficiary (if beneficiary is a person)",
                    "name": "beneficiary_last_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "DID of beneficiary VASP",
                    "name": "beneficiary_vasp_did",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Name of beneficiary VASP",
                    "name": "beneficiary_vasp_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Website of the beneficiary VASP",
                    "name": "beneficiary_vasp_website",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                    "name": "currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Signalises that addition information regarding the beneficiary of the address is required",
                    "name": "info_required",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Label of the address book entry",
                    "name": "label",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The user confirms that he provided address belongs to him and he has access to it via an un-hosted wallet software",
                    "name": "personal",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "If address requires email confirmation for withdrawals",
                    "name": "requires_confirmation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "If email confirmation change is in progress",
                    "name": "requires_confirmation_change",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Wallet address status, values: [admin_locked, waiting, confirmed, ready]",
                    "name": "status",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Address book type",
                    "name": "type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Timestamp when the address will be ready",
                    "name": "waiting_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_address_book_response_result"
        }
    },
    {
        "comment": "Retrieve deposit address for currency",
        "endpoint": {
            "name": "private_get_current_deposit_address",
            "path": "/private/get_current_deposit_address",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_current_deposit_address_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Object if address is created, null otherwise",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_current_deposit_address_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_current_deposit_address_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Object if address is created, null otherwise",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_current_deposit_address_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_current_deposit_address_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Address in proper format for currency",
                            "name": "address",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Address type/purpose, allowed values : deposit",
                            "name": "type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_current_deposit_address_response_result"
                }
            ]
        },
        "name": "private_get_current_deposit_address",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Address in proper format for currency",
                    "name": "address",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                    "name": "currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Address type/purpose, allowed values : deposit",
                    "name": "type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_current_deposit_address_response_result"
        }
    },
    {
        "comment": "Retrieve the latest users deposits",
        "endpoint": {
            "name": "private_get_deposits",
            "path": "/private/get_deposits",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Number of requested items, default - 10, maximum - 1000",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The offset for pagination, default - 0",
                        "name": "offset",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_deposits_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_deposits_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_deposits_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_deposits_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_deposits_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Total number of results available",
                            "name": "count",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "",
                            "name": "data",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_deposits_response_datum"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_deposits_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Address in proper format for currency",
                            "name": "address",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Amount of funds in given currency",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Clearance state indicating the current status of the transaction clearance process. Allowed values: in_progress: clearance process is in progress pending_admin_decision: transaction is under manual review by Deribit admin pending_user_input: user should provide additional information regarding the transaction success: clearance process completed successfully failed: clearance process failed, transaction is rejected cancelled: transaction is cancelled (currently used only for withdrawals, meaning the withdrawal is cancelled) refund_initiated: clearance process failed, transaction refund is initiated, funds are removed from Deribit balance (valid for deposits only) refunded: clearance process failed, deposit amount is refunded back to the client (valid for deposits only)",
                            "name": "clearance_state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "note",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "received_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Transaction id in proper format for currency, null if id is not available",
                            "name": "refund_transaction_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Address in proper format for currency",
                            "name": "source_address",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Deposit state. Allowed values: pending: deposit detected on blockchain/system, compliance not yet finished completed: compliance check finished successfully rejected: deposit failed compliance and must be handled manually replaced: deposit transaction was replaced on the blockchain and should have a new transaction hash",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Transaction id in proper format for currency, null if id is not available",
                            "name": "transaction_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "updated_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_deposits_response_datum"
                }
            ]
        },
        "name": "private_get_deposits",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Total number of results available",
                    "name": "count",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "",
                    "name": "data",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_deposits_response_datum"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_deposits_response_result"
        }
    },
    {
        "comment": "Returns reward eligibility status and APR data for all supported currencies.",
        "endpoint": {
            "name": "private_get_reward_eligibility",
            "path": "/private/get_reward_eligibility",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": null,
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_reward_eligibility_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_reward_eligibility_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_reward_eligibility_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_reward_eligibility_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Simple Moving Average (SMA) of the last 7 days of rewards for the currency",
                            "name": "apr_sma7",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "eligible: User can get reward for specific currency for all its equity partially_eligible: User can get reward for specific currency, but custody balance is excluded non_eligible: User can not get reward for specific currency",
                            "name": "eligibility_status",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_reward_eligibility_response_result"
                }
            ]
        },
        "name": "private_get_reward_eligibility",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Simple Moving Average (SMA) of the last 7 days of rewards for the currency",
                    "name": "apr_sma7",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "eligible: User can get reward for specific currency for all its equity partially_eligible: User can get reward for specific currency, but custody balance is excluded non_eligible: User can not get reward for specific currency",
                    "name": "eligibility_status",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_reward_eligibility_response_result"
        }
    },
    {
        "comment": "Retrieve the user's transfers list",
        "endpoint": {
            "name": "private_get_transfers",
            "path": "/private/get_transfers",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Number of requested items, default - 10, maximum - 1000",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The offset for pagination, default - 0",
                        "name": "offset",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_transfers_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_transfers_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_transfers_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_transfers_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_transfers_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Total number of results available",
                            "name": "count",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "",
                            "name": "data",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_transfers_response_datum"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_transfers_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Amount of funds in given currency",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "created_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Transfer direction",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of transfer",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "For transfer from/to subaccount returns this subaccount name, for transfer to other account returns address, for transfer from other account returns that accounts username.",
                            "name": "other_side",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Transfer state, allowed values : prepared, confirmed, cancelled, waiting_for_admin, insufficient_funds, withdrawal_limit otherwise rejection reason",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Type of transfer: user - sent to user, subaccount - sent to subaccount",
                            "name": "type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "updated_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_transfers_response_datum"
                }
            ]
        },
        "name": "private_get_transfers",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Total number of results available",
                    "name": "count",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "",
                    "name": "data",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_transfers_response_datum"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_transfers_response_result"
        }
    },
    {
        "comment": "Retrieve the latest users withdrawals",
        "endpoint": {
            "name": "private_get_withdrawals",
            "path": "/private/get_withdrawals",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Number of requested items, default - 10, maximum - 1000",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The offset for pagination, default - 0",
                        "name": "offset",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_withdrawals_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_withdrawals_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_withdrawals_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_withdrawals_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_withdrawals_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Total number of results available",
                            "name": "count",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "",
                            "name": "data",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_withdrawals_response_datum"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_withdrawals_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Address in proper format for currency",
                            "name": "address",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Amount of funds in given currency",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch) of withdrawal confirmation, null when not confirmed",
                            "name": "confirmed_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "created_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Fee in currency",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Withdrawal id in Deribit system",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Id of priority level",
                            "name": "priority",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Withdrawal state, allowed values : unconfirmed, confirmed, cancelled, completed, interrupted, rejected",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Transaction id in proper format for currency, null if id is not available",
                            "name": "transaction_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "updated_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_withdrawals_response_datum"
                }
            ]
        },
        "name": "private_get_withdrawals",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Total number of results available",
                    "name": "count",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "",
                    "name": "data",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_withdrawals_response_datum"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_withdrawals_response_result"
        }
    },
    {
        "comment": "Lists address beneficiaries with optional filtering and pagination",
        "endpoint": {
            "name": "private_list_address_beneficiaries",
            "path": "/private/list_address_beneficiaries",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "USDT",
                            "XRP",
                            "ETH",
                            "PAXG",
                            "USYC",
                            "STETH",
                            "MATIC",
                            "BTC",
                            "BNB",
                            "SOL",
                            "ETHW",
                            "USDC",
                            "USDE"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Address in currency format",
                        "name": "address",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Tag for XRP addresses",
                        "name": "tag",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Filter by creation timestamp (before)",
                        "name": "created_before",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Filter by creation timestamp (after)",
                        "name": "created_after",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Filter by update timestamp (before)",
                        "name": "updated_before",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Filter by update timestamp (after)",
                        "name": "updated_after",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Filter by personal wallet flag",
                        "name": "personal",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Filter by unhosted wallet flag",
                        "name": "unhosted",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Filter by beneficiary VASP name",
                        "name": "beneficiary_vasp_name",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Filter by beneficiary VASP DID",
                        "name": "beneficiary_vasp_did",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Website of the beneficiary VASP. Required if the address book entry is associated with a VASP that is not included in the list of known VASPs",
                        "name": "beneficiary_vasp_website",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Maximum number of results to return",
                        "name": "limit",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Continuation token for pagination",
                        "name": "continuation",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_list_address_beneficiaries_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_list_address_beneficiaries_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_list_address_beneficiaries_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_list_address_beneficiaries_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_list_address_beneficiaries_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Continuation token for pagination.",
                            "name": "continuation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Total number of results available",
                            "name": "count",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "",
                            "name": "data",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_list_address_beneficiaries_response_datum"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_list_address_beneficiaries_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Address in proper format for currency",
                            "name": "address",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Indicates that the user agreed to shared provided information with 3rd parties",
                            "name": "agreed",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Geographical address of the beneficiary",
                            "name": "beneficiary_address",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Company name of the beneficiary (if beneficiary is a company)",
                            "name": "beneficiary_company_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "First name of the beneficiary (if beneficiary is a person)",
                            "name": "beneficiary_first_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Last name of the beneficiary (if beneficiary is a person)",
                            "name": "beneficiary_last_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "DID of beneficiary VASP",
                            "name": "beneficiary_vasp_did",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Name of beneficiary VASP",
                            "name": "beneficiary_vasp_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Website of the beneficiary VASP",
                            "name": "beneficiary_vasp_website",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The user confirms that he provided address belongs to him and he has access to it via an un-hosted wallet software",
                            "name": "personal",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Tag for XRP addresses (optional)",
                            "name": "tag",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Indicates if the address belongs to an unhosted wallet",
                            "name": "unhosted",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "update_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_list_address_beneficiaries_response_datum"
                }
            ]
        },
        "name": "private_list_address_beneficiaries",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Continuation token for pagination.",
                    "name": "continuation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Total number of results available",
                    "name": "count",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "",
                    "name": "data",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_list_address_beneficiaries_response_datum"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_list_address_beneficiaries_response_result"
        }
    },
    {
        "comment": "Removes address book entry",
        "endpoint": {
            "name": "private_remove_from_address_book",
            "path": "/private/remove_from_address_book",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "USDT",
                            "XRP",
                            "ETH",
                            "PAXG",
                            "USYC",
                            "STETH",
                            "MATIC",
                            "BTC",
                            "BNB",
                            "SOL",
                            "ETHW",
                            "USDC",
                            "USDE"
                        ],
                        "name": "currency"
                    },
                    {
                        "items": [
                            "transfer",
                            "deposit_source",
                            "withdrawal"
                        ],
                        "name": "type"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Address book type",
                        "name": "type",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "type"
                        }
                    },
                    {
                        "comment": "Address in currency format, it must be in address book",
                        "name": "address",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_remove_from_address_book_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "ok",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_remove_from_address_book_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "ok",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_remove_from_address_book_response"
                }
            ]
        },
        "name": "private_remove_from_address_book",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Saves address beneficiary information",
        "endpoint": {
            "name": "private_save_address_beneficiary",
            "path": "/private/save_address_beneficiary",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "USDT",
                            "XRP",
                            "ETH",
                            "PAXG",
                            "USYC",
                            "STETH",
                            "MATIC",
                            "BTC",
                            "BNB",
                            "SOL",
                            "ETHW",
                            "USDC",
                            "USDE"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Address in currency format",
                        "name": "address",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Tag for XRP addresses",
                        "name": "tag",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Indicates that the user agreed to shared provided information with 3rd parties",
                        "name": "agreed",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "The user confirms that he provided address belongs to him and he has access to it via an un-hosted wallet software",
                        "name": "personal",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Indicates if the address belongs to an unhosted wallet",
                        "name": "unhosted",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Name of beneficiary VASP",
                        "name": "beneficiary_vasp_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "DID of beneficiary VASP",
                        "name": "beneficiary_vasp_did",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Website of the beneficiary VASP. Required if the address book entry is associated with a VASP that is not included in the list of known VASPs",
                        "name": "beneficiary_vasp_website",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "First name of beneficiary (if beneficiary is a person)",
                        "name": "beneficiary_first_name",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "First name of beneficiary (if beneficiary is a person)",
                        "name": "beneficiary_last_name",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Beneficiary company name (if beneficiary is a company)",
                        "name": "beneficiary_company_name",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Geographical address of the beneficiary",
                        "name": "beneficiary_address",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_save_address_beneficiary_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_save_address_beneficiary_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_save_address_beneficiary_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_save_address_beneficiary_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_save_address_beneficiary_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Address in proper format for currency",
                            "name": "address",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Indicates that the user agreed to shared provided information with 3rd parties",
                            "name": "agreed",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Geographical address of the beneficiary",
                            "name": "beneficiary_address",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Company name of the beneficiary (if beneficiary is a company)",
                            "name": "beneficiary_company_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "First name of the beneficiary (if beneficiary is a person)",
                            "name": "beneficiary_first_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Last name of the beneficiary (if beneficiary is a person)",
                            "name": "beneficiary_last_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "DID of beneficiary VASP",
                            "name": "beneficiary_vasp_did",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Name of beneficiary VASP",
                            "name": "beneficiary_vasp_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Website of the beneficiary VASP",
                            "name": "beneficiary_vasp_website",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The user confirms that he provided address belongs to him and he has access to it via an un-hosted wallet software",
                            "name": "personal",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Tag for XRP addresses (optional)",
                            "name": "tag",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Indicates if the address belongs to an unhosted wallet",
                            "name": "unhosted",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "update_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_save_address_beneficiary_response_result"
                }
            ]
        },
        "name": "private_save_address_beneficiary",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Address in proper format for currency",
                    "name": "address",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Indicates that the user agreed to shared provided information with 3rd parties",
                    "name": "agreed",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Geographical address of the beneficiary",
                    "name": "beneficiary_address",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Company name of the beneficiary (if beneficiary is a company)",
                    "name": "beneficiary_company_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "First name of the beneficiary (if beneficiary is a person)",
                    "name": "beneficiary_first_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Last name of the beneficiary (if beneficiary is a person)",
                    "name": "beneficiary_last_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "DID of beneficiary VASP",
                    "name": "beneficiary_vasp_did",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Name of beneficiary VASP",
                    "name": "beneficiary_vasp_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Website of the beneficiary VASP",
                    "name": "beneficiary_vasp_website",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                    "name": "currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The user confirms that he provided address belongs to him and he has access to it via an un-hosted wallet software",
                    "name": "personal",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Tag for XRP addresses (optional)",
                    "name": "tag",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Indicates if the address belongs to an unhosted wallet",
                    "name": "unhosted",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "update_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_save_address_beneficiary_response_result"
        }
    },
    {
        "comment": "Transfer funds between two (sub)accounts.",
        "endpoint": {
            "name": "private_submit_transfer_between_subaccounts",
            "path": "/private/submit_transfer_between_subaccounts",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Amount of funds to be transferred",
                        "name": "amount",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "Id of destination subaccount. Can be found in My Account >> Subaccounts tab",
                        "name": "destination",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Id of the source (sub)account. Can be found in My Account >> Subaccounts tab. By default, it is the Id of the account which made the request. However, if a different \"source\" is specified, the user must possess the mainaccount scope, and only other subaccounts can be designated as the source.",
                        "name": "source",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_submit_transfer_between_subaccounts_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_submit_transfer_between_subaccounts_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_submit_transfer_between_subaccounts_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_submit_transfer_between_subaccounts_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_submit_transfer_between_subaccounts_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Amount of funds in given currency",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "created_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Transfer direction",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of transfer",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "For transfer from/to subaccount returns this subaccount name, for transfer to other account returns address, for transfer from other account returns that accounts username.",
                            "name": "other_side",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Transfer state, allowed values : prepared, confirmed, cancelled, waiting_for_admin, insufficient_funds, withdrawal_limit otherwise rejection reason",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Type of transfer: user - sent to user, subaccount - sent to subaccount",
                            "name": "type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "updated_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_submit_transfer_between_subaccounts_response_result"
                }
            ]
        },
        "name": "private_submit_transfer_between_subaccounts",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Amount of funds in given currency",
                    "name": "amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "created_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                    "name": "currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Transfer direction",
                    "name": "direction",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Id of transfer",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "For transfer from/to subaccount returns this subaccount name, for transfer to other account returns address, for transfer from other account returns that accounts username.",
                    "name": "other_side",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Transfer state, allowed values : prepared, confirmed, cancelled, waiting_for_admin, insufficient_funds, withdrawal_limit otherwise rejection reason",
                    "name": "state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Type of transfer: user - sent to user, subaccount - sent to subaccount",
                    "name": "type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "updated_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_submit_transfer_between_subaccounts_response_result"
        }
    },
    {
        "comment": "Transfer funds to subaccount.",
        "endpoint": {
            "name": "private_submit_transfer_to_subaccount",
            "path": "/private/submit_transfer_to_subaccount",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Amount of funds to be transferred",
                        "name": "amount",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "Id of destination subaccount. Can be found in My Account >> Subaccounts tab",
                        "name": "destination",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_submit_transfer_to_subaccount_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_submit_transfer_to_subaccount_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_submit_transfer_to_subaccount_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_submit_transfer_to_subaccount_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_submit_transfer_to_subaccount_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Amount of funds in given currency",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "created_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Transfer direction",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of transfer",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "For transfer from/to subaccount returns this subaccount name, for transfer to other account returns address, for transfer from other account returns that accounts username.",
                            "name": "other_side",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Transfer state, allowed values : prepared, confirmed, cancelled, waiting_for_admin, insufficient_funds, withdrawal_limit otherwise rejection reason",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Type of transfer: user - sent to user, subaccount - sent to subaccount",
                            "name": "type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "updated_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_submit_transfer_to_subaccount_response_result"
                }
            ]
        },
        "name": "private_submit_transfer_to_subaccount",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Amount of funds in given currency",
                    "name": "amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "created_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                    "name": "currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Transfer direction",
                    "name": "direction",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Id of transfer",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "For transfer from/to subaccount returns this subaccount name, for transfer to other account returns address, for transfer from other account returns that accounts username.",
                    "name": "other_side",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Transfer state, allowed values : prepared, confirmed, cancelled, waiting_for_admin, insufficient_funds, withdrawal_limit otherwise rejection reason",
                    "name": "state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Type of transfer: user - sent to user, subaccount - sent to subaccount",
                    "name": "type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "updated_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_submit_transfer_to_subaccount_response_result"
        }
    },
    {
        "comment": "Transfer funds to another user.",
        "endpoint": {
            "name": "private_submit_transfer_to_user",
            "path": "/private/submit_transfer_to_user",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Amount of funds to be transferred",
                        "name": "amount",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "Destination wallet's address taken from address book",
                        "name": "destination",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_submit_transfer_to_user_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_submit_transfer_to_user_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_submit_transfer_to_user_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_submit_transfer_to_user_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_submit_transfer_to_user_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Amount of funds in given currency",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "created_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Transfer direction",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of transfer",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "For transfer from/to subaccount returns this subaccount name, for transfer to other account returns address, for transfer from other account returns that accounts username.",
                            "name": "other_side",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Transfer state, allowed values : prepared, confirmed, cancelled, waiting_for_admin, insufficient_funds, withdrawal_limit otherwise rejection reason",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Type of transfer: user - sent to user, subaccount - sent to subaccount",
                            "name": "type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "updated_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_submit_transfer_to_user_response_result"
                }
            ]
        },
        "name": "private_submit_transfer_to_user",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Amount of funds in given currency",
                    "name": "amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "created_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                    "name": "currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Transfer direction",
                    "name": "direction",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Id of transfer",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "For transfer from/to subaccount returns this subaccount name, for transfer to other account returns address, for transfer from other account returns that accounts username.",
                    "name": "other_side",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Transfer state, allowed values : prepared, confirmed, cancelled, waiting_for_admin, insufficient_funds, withdrawal_limit otherwise rejection reason",
                    "name": "state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Type of transfer: user - sent to user, subaccount - sent to subaccount",
                    "name": "type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "updated_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_submit_transfer_to_user_response_result"
        }
    },
    {
        "comment": "Allows to provide beneficiary information for the address",
        "endpoint": {
            "name": "private_update_in_address_book",
            "path": "/private/update_in_address_book",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "USDT",
                            "XRP",
                            "ETH",
                            "PAXG",
                            "USYC",
                            "STETH",
                            "MATIC",
                            "BTC",
                            "BNB",
                            "SOL",
                            "ETHW",
                            "USDC",
                            "USDE"
                        ],
                        "name": "currency"
                    },
                    {
                        "items": [
                            "transfer",
                            "deposit_source",
                            "withdrawal"
                        ],
                        "name": "type"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Address book type",
                        "name": "type",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "type"
                        }
                    },
                    {
                        "comment": "Address in currency format, it must be in address book",
                        "name": "address",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Name of beneficiary VASP",
                        "name": "beneficiary_vasp_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "DID of beneficiary VASP",
                        "name": "beneficiary_vasp_did",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Website of the beneficiary VASP. Required if the address book entry is associated with a VASP that is not included in the list of known VASPs",
                        "name": "beneficiary_vasp_website",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "First name of beneficiary (if beneficiary is a person)",
                        "name": "beneficiary_first_name",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "First name of beneficiary (if beneficiary is a person)",
                        "name": "beneficiary_last_name",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Beneficiary company name (if beneficiary is a company)",
                        "name": "beneficiary_company_name",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Geographical address of the beneficiary",
                        "name": "beneficiary_address",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Indicates that the user agreed to shared provided information with 3rd parties",
                        "name": "agreed",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "The user confirms that he provided address belongs to him and he has access to it via an un-hosted wallet software",
                        "name": "personal",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Label of the address book entry",
                        "name": "label",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_update_in_address_book_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "ok",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_update_in_address_book_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "ok",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_update_in_address_book_response"
                }
            ]
        },
        "name": "private_update_in_address_book",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Creates a new withdrawal request",
        "endpoint": {
            "name": "private_withdraw",
            "path": "/private/withdraw",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    },
                    {
                        "items": [
                            "insane",
                            "mid",
                            "very_high",
                            "high",
                            "low",
                            "extreme_high",
                            "very_low"
                        ],
                        "name": "priority"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Address in currency format, it must be in address book",
                        "name": "address",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Amount of funds to be withdrawn",
                        "name": "amount",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    },
                    {
                        "comment": "Withdrawal priority, optional for BTC, default: high",
                        "name": "priority",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "priority"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_withdraw_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_withdraw_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_withdraw_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_withdraw_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_withdraw_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Address in proper format for currency",
                            "name": "address",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Amount of funds in given currency",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch) of withdrawal confirmation, null when not confirmed",
                            "name": "confirmed_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "created_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Fee in currency",
                            "name": "fee",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Withdrawal id in Deribit system",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Id of priority level",
                            "name": "priority",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Withdrawal state, allowed values : unconfirmed, confirmed, cancelled, completed, interrupted, rejected",
                            "name": "state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Transaction id in proper format for currency, null if id is not available",
                            "name": "transaction_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "updated_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_withdraw_response_result"
                }
            ]
        },
        "name": "private_withdraw",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Address in proper format for currency",
                    "name": "address",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Amount of funds in given currency",
                    "name": "amount",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch) of withdrawal confirmation, null when not confirmed",
                    "name": "confirmed_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "created_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                    "name": "currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Fee in currency",
                    "name": "fee",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Withdrawal id in Deribit system",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Id of priority level",
                    "name": "priority",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Withdrawal state, allowed values : unconfirmed, confirmed, cancelled, completed, interrupted, rejected",
                    "name": "state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Transaction id in proper format for currency, null if id is not available",
                    "name": "transaction_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "updated_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_withdraw_response_result"
        }
    },
    {
        "comment": "Retrieves announcements. Default \"start_timestamp\" parameter value is current timestamp, \"count\" parameter value must be between 1 and 50, default is 5.",
        "endpoint": {
            "name": "public_get_announcements",
            "path": "/public/get_announcements",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The most recent timestamp to return the results for (milliseconds since the UNIX epoch)",
                        "name": "start_timestamp",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Maximum count of returned announcements, default - 5, maximum - 50",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_announcements_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "public_get_announcements_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "public_get_announcements_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "public_get_announcements_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_announcements_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The HTML body of the announcement",
                            "name": "body",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Whether the user confirmation is required for this announcement",
                            "name": "confirmation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "A unique identifier for the announcement",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Whether the announcement is marked as important",
                            "name": "important",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch) of announcement publication",
                            "name": "publication_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The title of the announcement",
                            "name": "title",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "public_get_announcements_response_result"
                }
            ]
        },
        "name": "public_get_announcements",
        "requires_auth": false,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "The HTML body of the announcement",
                    "name": "body",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Whether the user confirmation is required for this announcement",
                    "name": "confirmation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "A unique identifier for the announcement",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Whether the announcement is marked as important",
                    "name": "important",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch) of announcement publication",
                    "name": "publication_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "The title of the announcement",
                    "name": "title",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "public_get_announcements_response_result"
        }
    },
    {
        "comment": "Changes name for key with given id. Important notes.",
        "endpoint": {
            "name": "private_change_api_key_name",
            "path": "/private/change_api_key_name",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Id of key",
                        "name": "id",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Name of key (only letters, numbers and underscores allowed; maximum length - 16 characters)",
                        "name": "name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_change_api_key_name_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_change_api_key_name_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_change_api_key_name_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_change_api_key_name_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_change_api_key_name_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Client identifier used for authentication",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Client secret or MD5 fingerprint of public key used for authentication",
                            "name": "client_secret",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Informs whether this api key is default (field is deprecated and will be removed in the future)",
                            "name": "default",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Informs whether api key is enabled and can be used for authentication",
                            "name": "enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "List of enabled advanced on-key features. Available options:  - restricted_block_trades: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key  - block_trade_approval: Block trades created using this API key require additional user approval. Methods that use block_rfq scope are not affected by Block Trade approval feature",
                            "name": "enabled_features",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "key identifier",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "List of IP addresses whitelisted for a selected key",
                            "name": "ip_whitelist",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes maximal access for tokens generated with given key, possible values: trade:[read, read_write, none], wallet:[read, read_write, none], account:[read, read_write, none], block_trade:[read, read_write, none], block_rfq:[read, read_write, none]. If scope is not provided, its value is set as none. Please check details described in Access scope",
                            "name": "max_scope",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Api key name that can be displayed in transaction log",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "PEM encoded public key (Ed25519/RSA) used for asymmetric signatures (optional)",
                            "name": "public_key",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_change_api_key_name_response_result"
                }
            ]
        },
        "name": "private_change_api_key_name",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Client identifier used for authentication",
                    "name": "client_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Client secret or MD5 fingerprint of public key used for authentication",
                    "name": "client_secret",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Informs whether this api key is default (field is deprecated and will be removed in the future)",
                    "name": "default",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Informs whether api key is enabled and can be used for authentication",
                    "name": "enabled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "List of enabled advanced on-key features. Available options:  - restricted_block_trades: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key  - block_trade_approval: Block trades created using this API key require additional user approval. Methods that use block_rfq scope are not affected by Block Trade approval feature",
                    "name": "enabled_features",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "key identifier",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "List of IP addresses whitelisted for a selected key",
                    "name": "ip_whitelist",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Describes maximal access for tokens generated with given key, possible values: trade:[read, read_write, none], wallet:[read, read_write, none], account:[read, read_write, none], block_trade:[read, read_write, none], block_rfq:[read, read_write, none]. If scope is not provided, its value is set as none. Please check details described in Access scope",
                    "name": "max_scope",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Api key name that can be displayed in transaction log",
                    "name": "name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "PEM encoded public key (Ed25519/RSA) used for asymmetric signatures (optional)",
                    "name": "public_key",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_change_api_key_name_response_result"
        }
    },
    {
        "comment": "Change margin model",
        "endpoint": {
            "name": "private_change_margin_model",
            "path": "/private/change_margin_model",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "segregated_pm",
                            "cross_sm",
                            "segregated_sm",
                            "cross_pm"
                        ],
                        "name": "margin_model"
                    }
                ],
                "fields": [
                    {
                        "comment": "Id of a (sub)account - by default current user id is used",
                        "name": "user_id",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Margin model",
                        "name": "margin_model",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "margin_model"
                        }
                    },
                    {
                        "comment": "If true request returns the result without switching the margining model. Default: false",
                        "name": "dry_run",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_change_margin_model_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_change_margin_model_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_change_margin_model_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_change_margin_model_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_change_margin_model_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Represents portfolio state after change",
                            "name": "new_state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_change_margin_model_response_new_state"
                            }
                        },
                        {
                            "comment": "Represents portfolio state before change",
                            "name": "old_state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_change_margin_model_response_old_state"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_change_margin_model_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Available balance after change",
                            "name": "available_balance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Initial margin rate after change",
                            "name": "initial_margin_rate",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Maintenance margin rate after change",
                            "name": "maintenance_margin_rate",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_change_margin_model_response_new_state"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Available balance before change",
                            "name": "available_balance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Initial margin rate before change",
                            "name": "initial_margin_rate",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Maintenance margin rate before change",
                            "name": "maintenance_margin_rate",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_change_margin_model_response_old_state"
                }
            ]
        },
        "name": "private_change_margin_model",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                    "name": "currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Represents portfolio state after change",
                    "name": "new_state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_change_margin_model_response_new_state"
                    }
                },
                {
                    "comment": "Represents portfolio state before change",
                    "name": "old_state",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_change_margin_model_response_old_state"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_change_margin_model_response_result"
        }
    },
    {
        "comment": "Changes scope for key with given id. Important notes. TFA required",
        "endpoint": {
            "name": "private_change_scope_in_api_key",
            "path": "/private/change_scope_in_api_key",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Describes maximal access for tokens generated with given key, possible values: trade:[read, read_write, none], wallet:[read, read_write, none], account:[read, read_write, none], block_trade:[read, read_write, none]. If scope is not provided, its value is set as none. Please check details described in Access scope",
                        "name": "max_scope",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Id of key",
                        "name": "id",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_change_scope_in_api_key_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_change_scope_in_api_key_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_change_scope_in_api_key_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_change_scope_in_api_key_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_change_scope_in_api_key_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Client identifier used for authentication",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Client secret or MD5 fingerprint of public key used for authentication",
                            "name": "client_secret",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Informs whether this api key is default (field is deprecated and will be removed in the future)",
                            "name": "default",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Informs whether api key is enabled and can be used for authentication",
                            "name": "enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "List of enabled advanced on-key features. Available options:  - restricted_block_trades: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key  - block_trade_approval: Block trades created using this API key require additional user approval. Methods that use block_rfq scope are not affected by Block Trade approval feature",
                            "name": "enabled_features",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "key identifier",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "List of IP addresses whitelisted for a selected key",
                            "name": "ip_whitelist",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes maximal access for tokens generated with given key, possible values: trade:[read, read_write, none], wallet:[read, read_write, none], account:[read, read_write, none], block_trade:[read, read_write, none], block_rfq:[read, read_write, none]. If scope is not provided, its value is set as none. Please check details described in Access scope",
                            "name": "max_scope",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Api key name that can be displayed in transaction log",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "PEM encoded public key (Ed25519/RSA) used for asymmetric signatures (optional)",
                            "name": "public_key",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_change_scope_in_api_key_response_result"
                }
            ]
        },
        "name": "private_change_scope_in_api_key",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Client identifier used for authentication",
                    "name": "client_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Client secret or MD5 fingerprint of public key used for authentication",
                    "name": "client_secret",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Informs whether this api key is default (field is deprecated and will be removed in the future)",
                    "name": "default",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Informs whether api key is enabled and can be used for authentication",
                    "name": "enabled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "List of enabled advanced on-key features. Available options:  - restricted_block_trades: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key  - block_trade_approval: Block trades created using this API key require additional user approval. Methods that use block_rfq scope are not affected by Block Trade approval feature",
                    "name": "enabled_features",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "key identifier",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "List of IP addresses whitelisted for a selected key",
                    "name": "ip_whitelist",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Describes maximal access for tokens generated with given key, possible values: trade:[read, read_write, none], wallet:[read, read_write, none], account:[read, read_write, none], block_trade:[read, read_write, none], block_rfq:[read, read_write, none]. If scope is not provided, its value is set as none. Please check details described in Access scope",
                    "name": "max_scope",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Api key name that can be displayed in transaction log",
                    "name": "name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "PEM encoded public key (Ed25519/RSA) used for asymmetric signatures (optional)",
                    "name": "public_key",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_change_scope_in_api_key_response_result"
        }
    },
    {
        "comment": "Change the user name for a subaccount",
        "endpoint": {
            "name": "private_change_subaccount_name",
            "path": "/private/change_subaccount_name",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The user id for the subaccount",
                        "name": "sid",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The new user name",
                        "name": "name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_change_subaccount_name_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Result of method execution. ok in case of success",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_change_subaccount_name_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Result of method execution. ok in case of success",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_change_subaccount_name_response"
                }
            ]
        },
        "name": "private_change_subaccount_name",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Creates a new api key with a given scope. Important notes TFA required",
        "endpoint": {
            "name": "private_create_api_key",
            "path": "/private/create_api_key",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Describes maximal access for tokens generated with given key, possible values: trade:[read, read_write, none], wallet:[read, read_write, none], account:[read, read_write, none], block_trade:[read, read_write, none]. If scope is not provided, its value is set as none. Please check details described in Access scope",
                        "name": "max_scope",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Name of key (only letters, numbers and underscores allowed; maximum length - 16 characters)",
                        "name": "name",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "ED25519 or RSA PEM Encoded public key that should be used to create asymmetric API Key for signing requests/authentication requests with user's private key.  \ud83d\udcd6 Related Support Article: Asymmetric API keys",
                        "name": "public_key",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "List of enabled advanced on-key features. Available options:  - restricted_block_trades: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key  - block_trade_approval: Block trades created using this API key require additional user approval. Methods that use block_rfq scope are not affected by Block Trade approval feature",
                        "name": "enabled_features",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_create_api_key_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_create_api_key_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_create_api_key_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_create_api_key_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_create_api_key_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Client identifier used for authentication",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Client secret or MD5 fingerprint of public key used for authentication",
                            "name": "client_secret",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Informs whether this api key is default (field is deprecated and will be removed in the future)",
                            "name": "default",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Informs whether api key is enabled and can be used for authentication",
                            "name": "enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "List of enabled advanced on-key features. Available options:  - restricted_block_trades: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key  - block_trade_approval: Block trades created using this API key require additional user approval. Methods that use block_rfq scope are not affected by Block Trade approval feature",
                            "name": "enabled_features",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "key identifier",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "List of IP addresses whitelisted for a selected key",
                            "name": "ip_whitelist",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes maximal access for tokens generated with given key, possible values: trade:[read, read_write, none], wallet:[read, read_write, none], account:[read, read_write, none], block_trade:[read, read_write, none], block_rfq:[read, read_write, none]. If scope is not provided, its value is set as none. Please check details described in Access scope",
                            "name": "max_scope",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Api key name that can be displayed in transaction log",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "PEM encoded public key (Ed25519/RSA) used for asymmetric signatures (optional)",
                            "name": "public_key",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_create_api_key_response_result"
                }
            ]
        },
        "name": "private_create_api_key",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Client identifier used for authentication",
                    "name": "client_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Client secret or MD5 fingerprint of public key used for authentication",
                    "name": "client_secret",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Informs whether this api key is default (field is deprecated and will be removed in the future)",
                    "name": "default",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Informs whether api key is enabled and can be used for authentication",
                    "name": "enabled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "List of enabled advanced on-key features. Available options:  - restricted_block_trades: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key  - block_trade_approval: Block trades created using this API key require additional user approval. Methods that use block_rfq scope are not affected by Block Trade approval feature",
                    "name": "enabled_features",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "key identifier",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "List of IP addresses whitelisted for a selected key",
                    "name": "ip_whitelist",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Describes maximal access for tokens generated with given key, possible values: trade:[read, read_write, none], wallet:[read, read_write, none], account:[read, read_write, none], block_trade:[read, read_write, none], block_rfq:[read, read_write, none]. If scope is not provided, its value is set as none. Please check details described in Access scope",
                    "name": "max_scope",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Api key name that can be displayed in transaction log",
                    "name": "name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "PEM encoded public key (Ed25519/RSA) used for asymmetric signatures (optional)",
                    "name": "public_key",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_create_api_key_response_result"
        }
    },
    {
        "comment": "Create a new subaccount",
        "endpoint": {
            "name": "private_create_subaccount",
            "path": "/private/create_subaccount",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": null,
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_create_subaccount_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_create_subaccount_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_create_subaccount_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_create_subaccount_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "User email",
                            "name": "email",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Subaccount identifier",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "true when password for the subaccount has been configured",
                            "name": "is_password",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Informs whether login to the subaccount is enabled",
                            "name": "login_enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "",
                            "name": "portfolio",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_create_subaccount_response_portfolio"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_create_subaccount_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "btc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_create_subaccount_response_btc"
                            }
                        },
                        {
                            "comment": "",
                            "name": "eth",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_create_subaccount_response_eth"
                            }
                        },
                        {
                            "comment": "When true - receive all notification emails on the main email",
                            "name": "receive_notifications",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Whether the Security Keys authentication is enabled",
                            "name": "security_keys_enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "System generated user nickname",
                            "name": "system_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Account type",
                            "name": "type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Account name (given by user)",
                            "name": "username",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_create_subaccount_response_portfolio"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The account's balance reserved in other orders",
                            "name": "additional_reserve",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "available_funds",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "available_withdrawal_funds",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "balance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "equity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "initial_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "maintenance_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "margin_balance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "spot_reserve",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_create_subaccount_response_btc"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The account's balance reserved in other orders",
                            "name": "additional_reserve",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "available_funds",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "available_withdrawal_funds",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "balance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "equity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "initial_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "maintenance_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "margin_balance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "spot_reserve",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_create_subaccount_response_eth"
                }
            ]
        },
        "name": "private_create_subaccount",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "User email",
                    "name": "email",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Subaccount identifier",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "true when password for the subaccount has been configured",
                    "name": "is_password",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Informs whether login to the subaccount is enabled",
                    "name": "login_enabled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "",
                    "name": "portfolio",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_create_subaccount_response_portfolio"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_create_subaccount_response_result"
        }
    },
    {
        "comment": "Disables api key with given id. Important notes.",
        "endpoint": {
            "name": "private_disable_api_key",
            "path": "/private/disable_api_key",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Id of key",
                        "name": "id",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_disable_api_key_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_disable_api_key_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_disable_api_key_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_disable_api_key_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_disable_api_key_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Client identifier used for authentication",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Client secret or MD5 fingerprint of public key used for authentication",
                            "name": "client_secret",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Informs whether this api key is default (field is deprecated and will be removed in the future)",
                            "name": "default",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Informs whether api key is enabled and can be used for authentication",
                            "name": "enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "List of enabled advanced on-key features. Available options:  - restricted_block_trades: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key  - block_trade_approval: Block trades created using this API key require additional user approval. Methods that use block_rfq scope are not affected by Block Trade approval feature",
                            "name": "enabled_features",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "key identifier",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "List of IP addresses whitelisted for a selected key",
                            "name": "ip_whitelist",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes maximal access for tokens generated with given key, possible values: trade:[read, read_write, none], wallet:[read, read_write, none], account:[read, read_write, none], block_trade:[read, read_write, none], block_rfq:[read, read_write, none]. If scope is not provided, its value is set as none. Please check details described in Access scope",
                            "name": "max_scope",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Api key name that can be displayed in transaction log",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "PEM encoded public key (Ed25519/RSA) used for asymmetric signatures (optional)",
                            "name": "public_key",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_disable_api_key_response_result"
                }
            ]
        },
        "name": "private_disable_api_key",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Client identifier used for authentication",
                    "name": "client_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Client secret or MD5 fingerprint of public key used for authentication",
                    "name": "client_secret",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Informs whether this api key is default (field is deprecated and will be removed in the future)",
                    "name": "default",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Informs whether api key is enabled and can be used for authentication",
                    "name": "enabled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "List of enabled advanced on-key features. Available options:  - restricted_block_trades: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key  - block_trade_approval: Block trades created using this API key require additional user approval. Methods that use block_rfq scope are not affected by Block Trade approval feature",
                    "name": "enabled_features",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "key identifier",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "List of IP addresses whitelisted for a selected key",
                    "name": "ip_whitelist",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Describes maximal access for tokens generated with given key, possible values: trade:[read, read_write, none], wallet:[read, read_write, none], account:[read, read_write, none], block_trade:[read, read_write, none], block_rfq:[read, read_write, none]. If scope is not provided, its value is set as none. Please check details described in Access scope",
                    "name": "max_scope",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Api key name that can be displayed in transaction log",
                    "name": "name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "PEM encoded public key (Ed25519/RSA) used for asymmetric signatures (optional)",
                    "name": "public_key",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_disable_api_key_response_result"
        }
    },
    {
        "comment": "Edits existing API key. At least one parameter is required. Important notes TFA required",
        "endpoint": {
            "name": "private_edit_api_key",
            "path": "/private/edit_api_key",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Id of key",
                        "name": "id",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Describes maximal access for tokens generated with given key, possible values: trade:[read, read_write, none], wallet:[read, read_write, none], account:[read, read_write, none], block_trade:[read, read_write, none]. If scope is not provided, its value is set as none. Please check details described in Access scope",
                        "name": "max_scope",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Name of key (only letters, numbers and underscores allowed; maximum length - 16 characters)",
                        "name": "name",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Enables/disables the API key. true to enable, false to disable",
                        "name": "enabled",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "List of enabled advanced on-key features. Available options:  - restricted_block_trades: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key  - block_trade_approval: Block trades created using this API key require additional user approval. Methods that use block_rfq scope are not affected by Block Trade approval feature",
                        "name": "enabled_features",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Whitelist provided IP address on a selected key",
                        "name": "ip_whitelist",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_edit_api_key_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_edit_api_key_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_edit_api_key_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_edit_api_key_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_edit_api_key_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Client identifier used for authentication",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Client secret or MD5 fingerprint of public key used for authentication",
                            "name": "client_secret",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Informs whether this api key is default (field is deprecated and will be removed in the future)",
                            "name": "default",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Informs whether api key is enabled and can be used for authentication",
                            "name": "enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "List of enabled advanced on-key features. Available options:  - restricted_block_trades: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key  - block_trade_approval: Block trades created using this API key require additional user approval. Methods that use block_rfq scope are not affected by Block Trade approval feature",
                            "name": "enabled_features",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "key identifier",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "List of IP addresses whitelisted for a selected key",
                            "name": "ip_whitelist",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes maximal access for tokens generated with given key, possible values: trade:[read, read_write, none], wallet:[read, read_write, none], account:[read, read_write, none], block_trade:[read, read_write, none], block_rfq:[read, read_write, none]. If scope is not provided, its value is set as none. Please check details described in Access scope",
                            "name": "max_scope",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Api key name that can be displayed in transaction log",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "PEM encoded public key (Ed25519/RSA) used for asymmetric signatures (optional)",
                            "name": "public_key",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_edit_api_key_response_result"
                }
            ]
        },
        "name": "private_edit_api_key",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Client identifier used for authentication",
                    "name": "client_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Client secret or MD5 fingerprint of public key used for authentication",
                    "name": "client_secret",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Informs whether this api key is default (field is deprecated and will be removed in the future)",
                    "name": "default",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Informs whether api key is enabled and can be used for authentication",
                    "name": "enabled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "List of enabled advanced on-key features. Available options:  - restricted_block_trades: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key  - block_trade_approval: Block trades created using this API key require additional user approval. Methods that use block_rfq scope are not affected by Block Trade approval feature",
                    "name": "enabled_features",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "key identifier",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "List of IP addresses whitelisted for a selected key",
                    "name": "ip_whitelist",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Describes maximal access for tokens generated with given key, possible values: trade:[read, read_write, none], wallet:[read, read_write, none], account:[read, read_write, none], block_trade:[read, read_write, none], block_rfq:[read, read_write, none]. If scope is not provided, its value is set as none. Please check details described in Access scope",
                    "name": "max_scope",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Api key name that can be displayed in transaction log",
                    "name": "name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "PEM encoded public key (Ed25519/RSA) used for asymmetric signatures (optional)",
                    "name": "public_key",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_edit_api_key_response_result"
        }
    },
    {
        "comment": "Enables affiliate program for user",
        "endpoint": {
            "name": "private_enable_affiliate_program",
            "path": "/private/enable_affiliate_program",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": null,
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Result of method execution. ok in case of success",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_enable_affiliate_program_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Result of method execution. ok in case of success",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_enable_affiliate_program_response"
                }
            ]
        },
        "name": "private_enable_affiliate_program",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Enables api key with given id. Important notes.",
        "endpoint": {
            "name": "private_enable_api_key",
            "path": "/private/enable_api_key",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Id of key",
                        "name": "id",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_enable_api_key_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_enable_api_key_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_enable_api_key_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_enable_api_key_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_enable_api_key_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Client identifier used for authentication",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Client secret or MD5 fingerprint of public key used for authentication",
                            "name": "client_secret",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Informs whether this api key is default (field is deprecated and will be removed in the future)",
                            "name": "default",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Informs whether api key is enabled and can be used for authentication",
                            "name": "enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "List of enabled advanced on-key features. Available options:  - restricted_block_trades: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key  - block_trade_approval: Block trades created using this API key require additional user approval. Methods that use block_rfq scope are not affected by Block Trade approval feature",
                            "name": "enabled_features",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "key identifier",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "List of IP addresses whitelisted for a selected key",
                            "name": "ip_whitelist",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes maximal access for tokens generated with given key, possible values: trade:[read, read_write, none], wallet:[read, read_write, none], account:[read, read_write, none], block_trade:[read, read_write, none], block_rfq:[read, read_write, none]. If scope is not provided, its value is set as none. Please check details described in Access scope",
                            "name": "max_scope",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Api key name that can be displayed in transaction log",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "PEM encoded public key (Ed25519/RSA) used for asymmetric signatures (optional)",
                            "name": "public_key",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_enable_api_key_response_result"
                }
            ]
        },
        "name": "private_enable_api_key",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Client identifier used for authentication",
                    "name": "client_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Client secret or MD5 fingerprint of public key used for authentication",
                    "name": "client_secret",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Informs whether this api key is default (field is deprecated and will be removed in the future)",
                    "name": "default",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Informs whether api key is enabled and can be used for authentication",
                    "name": "enabled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "List of enabled advanced on-key features. Available options:  - restricted_block_trades: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key  - block_trade_approval: Block trades created using this API key require additional user approval. Methods that use block_rfq scope are not affected by Block Trade approval feature",
                    "name": "enabled_features",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "key identifier",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "List of IP addresses whitelisted for a selected key",
                    "name": "ip_whitelist",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Describes maximal access for tokens generated with given key, possible values: trade:[read, read_write, none], wallet:[read, read_write, none], account:[read, read_write, none], block_trade:[read, read_write, none], block_rfq:[read, read_write, none]. If scope is not provided, its value is set as none. Please check details described in Access scope",
                    "name": "max_scope",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Api key name that can be displayed in transaction log",
                    "name": "name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "PEM encoded public key (Ed25519/RSA) used for asymmetric signatures (optional)",
                    "name": "public_key",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_enable_api_key_response_result"
        }
    },
    {
        "comment": "Lists access logs for the user",
        "endpoint": {
            "name": "private_get_access_log",
            "path": "/private/get_access_log",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The offset for pagination, default - 0",
                        "name": "offset",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Number of requested items, default - 10, maximum - 1000",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_access_log_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_access_log_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_access_log_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_access_log_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_access_log_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "City where the IP address is registered (estimated)",
                            "name": "city",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Country where the IP address is registered (estimated)",
                            "name": "country",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional, additional information about action, type depends on log value",
                            "name": "data",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique identifier",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "IP address of source that generated action",
                            "name": "ip",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Action description, values: changed_email - email was changed; changed_password - password was changed; disabled_tfa - TFA was disabled; enabled_tfa - TFA was enabled, success - successful login; failure - login failure; enabled_subaccount_login - login was enabled for subaccount (in data - subaccount uid); disabled_subaccount_login - login was disabled for subbaccount (in data - subbacount uid);new_api_key - API key was created (in data key client id); removed_api_key - API key was removed (in data key client id); changed_scope - scope of API key was changed (in data key client id); changed_whitelist - whitelist of API key was edited (in data key client id); disabled_api_key - API key was disabled (in data key client id); enabled_api_key - API key was enabled (in data key client id); reset_api_key - API key was reset (in data key client id)",
                            "name": "log",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_access_log_response_result"
                }
            ]
        },
        "name": "private_get_access_log",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "City where the IP address is registered (estimated)",
                    "name": "city",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Country where the IP address is registered (estimated)",
                    "name": "country",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional, additional information about action, type depends on log value",
                    "name": "data",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Unique identifier",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "IP address of source that generated action",
                    "name": "ip",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Action description, values: changed_email - email was changed; changed_password - password was changed; disabled_tfa - TFA was disabled; enabled_tfa - TFA was enabled, success - successful login; failure - login failure; enabled_subaccount_login - login was enabled for subaccount (in data - subaccount uid); disabled_subaccount_login - login was disabled for subbaccount (in data - subbacount uid);new_api_key - API key was created (in data key client id); removed_api_key - API key was removed (in data key client id); changed_scope - scope of API key was changed (in data key client id); changed_whitelist - whitelist of API key was edited (in data key client id); disabled_api_key - API key was disabled (in data key client id); enabled_api_key - API key was enabled (in data key client id); reset_api_key - API key was reset (in data key client id)",
                    "name": "log",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_access_log_response_result"
        }
    },
    {
        "comment": "Retrieves a per-currency list of user account summaries. To read subaccount summary use subaccount_id parameter.",
        "endpoint": {
            "name": "private_get_account_summaries",
            "path": "/private/get_account_summaries",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The user id for the subaccount",
                        "name": "subaccount_id",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Include additional fields",
                        "name": "extended",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_account_summaries_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_account_summaries_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_account_summaries_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_account_summaries_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_account_summaries_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "When Block RFQ Self Match Prevention is enabled, it ensures that RFQs cannot be executed between accounts that belong to the same legal entity. This setting is independent of the general self-match prevention settings and must be configured separately.",
                            "name": "block_rfq_self_match_prevention",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Time at which the account was created (milliseconds since the Unix epoch; available when parameter extended = true)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "User email (available when parameter extended = true)",
                            "name": "email",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Account id (available when parameter extended = true)",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "true when the inter-user transfers are enabled for user (available when parameter extended = true)",
                            "name": "interuser_transfers_enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Whether account is loginable using email and password (available when parameter extended = true and account is a subaccount)",
                            "name": "login_enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Whether MMP is enabled (available when parameter extended = true)",
                            "name": "mmp_enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Optional identifier of the referrer (of the affiliation program, and available when parameter extended = true), which link was used by this account at registration. It coincides with suffix of the affiliation link path after /reg-",
                            "name": "referrer_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Whether Security Key authentication is enabled (available when parameter extended = true)",
                            "name": "security_keys_enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if self trading rejection behavior is applied to trades between subaccounts (available when parameter extended = true)",
                            "name": "self_trading_extended_to_subaccounts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Self trading rejection behavior - reject_taker or cancel_maker (available when parameter extended = true)",
                            "name": "self_trading_reject_mode",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Aggregated list of per-currency account summaries",
                            "name": "summaries",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_account_summaries_response_summary"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_account_summaries_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Options profit and Loss",
                            "name": "options_pl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The sum of position deltas without positions that will expire during closest expiration",
                            "name": "projected_delta_total",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Map of options' thetas per index",
                            "name": "options_theta_map",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "json"
                            }
                        },
                        {
                            "comment": "Optional field returned with value true when user has non block chain equity that is excluded from proof of reserve calculations",
                            "name": "has_non_block_chain_equity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Optional (only for users using cross margin). The account's total margin balance in all cross collateral currencies, expressed in USD",
                            "name": "total_margin_balance_usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Returned object is described in separate document.",
                            "name": "limits",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "json"
                            }
                        },
                        {
                            "comment": "Optional (only for users using cross margin). The account's total delta total in all cross collateral currencies, expressed in USD",
                            "name": "total_delta_total_usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The account's available to withdrawal funds",
                            "name": "available_withdrawal_funds",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Options session realized profit and Loss",
                            "name": "options_session_rpl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Futures session realized profit and Loss",
                            "name": "futures_session_rpl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Profit and loss",
                            "name": "total_pl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The account's balance reserved in active spot orders",
                            "name": "spot_reserve",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "List of fee objects for all currency pairs and instrument types related to the currency (available when parameter extended = true and user has any discounts)",
                            "name": "fees",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_account_summaries_response_fee"
                            }
                        },
                        {
                            "comment": "System generated user nickname (available when parameter extended = true)",
                            "name": "system_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Account type (available when parameter extended = true)",
                            "name": "type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Account name (given by user) (available when parameter extended = true)",
                            "name": "username",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_account_summaries_response_summary"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The currency pair this fee applies to",
                            "name": "index_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Instrument type (e.g., future, perpetual, option)",
                            "name": "kind",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "value",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_account_summaries_response_value"
                            }
                        },
                        {
                            "comment": "The account's balance reserved in other orders",
                            "name": "additional_reserve",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Options session unrealized profit and Loss",
                            "name": "options_session_upl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "When true cross collateral is enabled for user",
                            "name": "cross_collateral_enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Options value",
                            "name": "options_value",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Map of options' vegas per index",
                            "name": "options_vega_map",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "json"
                            }
                        },
                        {
                            "comment": "The maintenance margin. When cross collateral is enabled, this aggregated value is calculated by converting the sum of each cross collateral currency's value to the given currency, using each cross collateral currency's index.",
                            "name": "maintenance_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Futures session unrealized profit and Loss",
                            "name": "futures_session_upl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true when portfolio margining is enabled for user",
                            "name": "portfolio_margining_enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Futures profit and Loss",
                            "name": "futures_pl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Map of options' gammas per index",
                            "name": "options_gamma_map",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "json"
                            }
                        },
                        {
                            "comment": "Currency of the summary",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Options summary delta",
                            "name": "options_delta",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The account's initial margin. When cross collateral is enabled, this aggregated value is calculated by converting the sum of each cross collateral currency's value to the given currency, using each cross collateral currency's index.",
                            "name": "initial_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Projected maintenance margin. When cross collateral is enabled, this aggregated value is calculated by converting the sum of each cross collateral currency's value to the given currency, using each cross collateral currency's index.",
                            "name": "projected_maintenance_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The account's available funds. When cross collateral is enabled, this aggregated value is calculated by converting the sum of each cross collateral currency's value to the given currency, using each cross collateral currency's index.",
                            "name": "available_funds",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The account's current equity",
                            "name": "equity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Name of user's currently enabled margin model",
                            "name": "margin_model",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The account's balance",
                            "name": "balance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Session unrealized profit and loss",
                            "name": "session_upl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The account's margin balance. When cross collateral is enabled, this aggregated value is calculated by converting the sum of each cross collateral currency's value to the given currency, using each cross collateral currency's index.",
                            "name": "margin_balance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The deposit address for the account (if available)",
                            "name": "deposit_address",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Options summary theta",
                            "name": "options_theta",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional (only for users using cross margin). The account's total initial margin in all cross collateral currencies, expressed in USD",
                            "name": "total_initial_margin_usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Estimated Liquidation Ratio is returned only for users without portfolio margining enabled. Multiplying it by future position's market price returns its estimated liquidation price. When cross collateral is enabled, this aggregated value is calculated by converting the sum of each cross collateral currency's value to the given currency, using each cross collateral currency's index.",
                            "name": "estimated_liquidation_ratio",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Session realized profit and loss",
                            "name": "session_rpl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The account's fee balance (it can be used to pay for fees)",
                            "name": "fee_balance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional (only for users using cross margin). The account's total maintenance margin in all cross collateral currencies, expressed in USD",
                            "name": "total_maintenance_margin_usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Options summary vega",
                            "name": "options_vega",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Projected initial margin. When cross collateral is enabled, this aggregated value is calculated by converting the sum of each cross collateral currency's value to the given currency, using each cross collateral currency's index.",
                            "name": "projected_initial_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Options summary gamma",
                            "name": "options_gamma",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional (only for users using cross margin). The account's total equity in all cross collateral currencies, expressed in USD",
                            "name": "total_equity_usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The sum of position deltas",
                            "name": "delta_total",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_account_summaries_response_fee"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Block trade fee (if applicable)",
                            "name": "block_trade",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "default",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_account_summaries_response_default"
                            }
                        },
                        {
                            "comment": "Settlement fee",
                            "name": "settlement",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_account_summaries_response_value"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Maker fee",
                            "name": "maker",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Taker fee",
                            "name": "taker",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Fee calculation type (e.g., fixed, relative)",
                            "name": "type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_account_summaries_response_default"
                }
            ]
        },
        "name": "private_get_account_summaries",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "When Block RFQ Self Match Prevention is enabled, it ensures that RFQs cannot be executed between accounts that belong to the same legal entity. This setting is independent of the general self-match prevention settings and must be configured separately.",
                    "name": "block_rfq_self_match_prevention",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Time at which the account was created (milliseconds since the Unix epoch; available when parameter extended = true)",
                    "name": "creation_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "User email (available when parameter extended = true)",
                    "name": "email",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Account id (available when parameter extended = true)",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "true when the inter-user transfers are enabled for user (available when parameter extended = true)",
                    "name": "interuser_transfers_enabled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Whether account is loginable using email and password (available when parameter extended = true and account is a subaccount)",
                    "name": "login_enabled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Whether MMP is enabled (available when parameter extended = true)",
                    "name": "mmp_enabled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Optional identifier of the referrer (of the affiliation program, and available when parameter extended = true), which link was used by this account at registration. It coincides with suffix of the affiliation link path after /reg-",
                    "name": "referrer_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Whether Security Key authentication is enabled (available when parameter extended = true)",
                    "name": "security_keys_enabled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "true if self trading rejection behavior is applied to trades between subaccounts (available when parameter extended = true)",
                    "name": "self_trading_extended_to_subaccounts",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Self trading rejection behavior - reject_taker or cancel_maker (available when parameter extended = true)",
                    "name": "self_trading_reject_mode",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Aggregated list of per-currency account summaries",
                    "name": "summaries",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_account_summaries_response_summary"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_account_summaries_response_result"
        }
    },
    {
        "comment": "Retrieves user account summary. To read subaccount summary use subaccount_id parameter.",
        "endpoint": {
            "name": "private_get_account_summary",
            "path": "/private/get_account_summary",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "USDT",
                            "XRP",
                            "ETH",
                            "PAXG",
                            "USYC",
                            "STETH",
                            "MATIC",
                            "BTC",
                            "BNB",
                            "SOL",
                            "ETHW",
                            "USDC",
                            "USDE"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "The user id for the subaccount",
                        "name": "subaccount_id",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Include additional fields",
                        "name": "extended",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_account_summary_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_account_summary_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_account_summary_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_account_summary_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_account_summary_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Options profit and Loss",
                            "name": "options_pl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The sum of position deltas without positions that will expire during closest expiration",
                            "name": "projected_delta_total",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Map of options' thetas per index",
                            "name": "options_theta_map",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "json"
                            }
                        },
                        {
                            "comment": "Optional field returned with value true when user has non block chain equity that is excluded from proof of reserve calculations",
                            "name": "has_non_block_chain_equity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Optional (only for users using cross margin). The account's total margin balance in all cross collateral currencies, expressed in USD",
                            "name": "total_margin_balance_usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Returned object is described in separate document.",
                            "name": "limits",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "json"
                            }
                        },
                        {
                            "comment": "Account type (available when parameter extended = true)",
                            "name": "type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (only for users using cross margin). The account's total delta total in all cross collateral currencies, expressed in USD",
                            "name": "total_delta_total_usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The account's available to withdrawal funds",
                            "name": "available_withdrawal_funds",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Options session realized profit and Loss",
                            "name": "options_session_rpl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Futures session realized profit and Loss",
                            "name": "futures_session_rpl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Profit and loss",
                            "name": "total_pl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The account's balance reserved in active spot orders",
                            "name": "spot_reserve",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "List of fee objects for all currency pairs and instrument types related to the currency (available when parameter extended = true and user has any discounts)",
                            "name": "fees",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_account_summary_response_fee"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_account_summary_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The currency pair this fee applies to",
                            "name": "index_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Type of the instruments the fee applies to - future for future instruments (excluding perpetual), perpetual for future perpetual instruments, option for options",
                            "name": "kind",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "value",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_account_summary_response_value"
                            }
                        },
                        {
                            "comment": "The account's balance reserved in other orders",
                            "name": "additional_reserve",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Options session unrealized profit and Loss",
                            "name": "options_session_upl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "When true cross collateral is enabled for user",
                            "name": "cross_collateral_enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Account id (available when parameter extended = true)",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Options value",
                            "name": "options_value",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Time at which the account was created (milliseconds since the Unix epoch; available when parameter extended = true)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "User email (available when parameter extended = true)",
                            "name": "email",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Map of options' vegas per index",
                            "name": "options_vega_map",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "json"
                            }
                        },
                        {
                            "comment": "The maintenance margin. When cross collateral is enabled, this aggregated value is calculated by converting the sum of each cross collateral currency's value to the given currency, using each cross collateral currency's index.",
                            "name": "maintenance_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Whether MMP is enabled (available when parameter extended = true)",
                            "name": "mmp_enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Futures session unrealized profit and Loss",
                            "name": "futures_session_upl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true when portfolio margining is enabled for user",
                            "name": "portfolio_margining_enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Futures profit and Loss",
                            "name": "futures_pl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Map of options' gammas per index",
                            "name": "options_gamma_map",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "json"
                            }
                        },
                        {
                            "comment": "The selected currency",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Options summary delta",
                            "name": "options_delta",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The account's initial margin. When cross collateral is enabled, this aggregated value is calculated by converting the sum of each cross collateral currency's value to the given currency, using each cross collateral currency's index.",
                            "name": "initial_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Projected maintenance margin. When cross collateral is enabled, this aggregated value is calculated by converting the sum of each cross collateral currency's value to the given currency, using each cross collateral currency's index.",
                            "name": "projected_maintenance_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The account's available funds. When cross collateral is enabled, this aggregated value is calculated by converting the sum of each cross collateral currency's value to the given currency, using each cross collateral currency's index.",
                            "name": "available_funds",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional identifier of the referrer (of the affiliation program, and available when parameter extended = true), which link was used by this account at registration. It coincides with suffix of the affiliation link path after /reg-",
                            "name": "referrer_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Whether account is loginable using email and password (available when parameter extended = true and account is a subaccount)",
                            "name": "login_enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The account's current equity",
                            "name": "equity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Name of user's currently enabled margin model",
                            "name": "margin_model",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The account's balance",
                            "name": "balance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Session unrealized profit and loss",
                            "name": "session_upl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The account's margin balance. When cross collateral is enabled, this aggregated value is calculated by converting the sum of each cross collateral currency's value to the given currency, using each cross collateral currency's index.",
                            "name": "margin_balance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Whether Security Key authentication is enabled (available when parameter extended = true)",
                            "name": "security_keys_enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The deposit address for the account (if available)",
                            "name": "deposit_address",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Options summary theta",
                            "name": "options_theta",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if self trading rejection behavior is applied to trades between subaccounts (available when parameter extended = true)",
                            "name": "self_trading_extended_to_subaccounts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true when the inter-user transfers are enabled for user (available when parameter extended = true)",
                            "name": "interuser_transfers_enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Optional (only for users using cross margin). The account's total initial margin in all cross collateral currencies, expressed in USD",
                            "name": "total_initial_margin_usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Estimated Liquidation Ratio is returned only for users without portfolio margining enabled. Multiplying it by future position's market price returns its estimated liquidation price. When cross collateral is enabled, this aggregated value is calculated by converting the sum of each cross collateral currency's value to the given currency, using each cross collateral currency's index.",
                            "name": "estimated_liquidation_ratio",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Session realized profit and loss",
                            "name": "session_rpl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The account's fee balance (it can be used to pay for fees)",
                            "name": "fee_balance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional (only for users using cross margin). The account's total maintenance margin in all cross collateral currencies, expressed in USD",
                            "name": "total_maintenance_margin_usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Options summary vega",
                            "name": "options_vega",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Projected initial margin. When cross collateral is enabled, this aggregated value is calculated by converting the sum of each cross collateral currency's value to the given currency, using each cross collateral currency's index.",
                            "name": "projected_initial_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Self trading rejection behavior - reject_taker or cancel_maker (available when parameter extended = true)",
                            "name": "self_trading_reject_mode",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "System generated user nickname (available when parameter extended = true)",
                            "name": "system_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Options summary gamma",
                            "name": "options_gamma",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Account name (given by user) (available when parameter extended = true)",
                            "name": "username",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (only for users using cross margin). The account's total equity in all cross collateral currencies, expressed in USD",
                            "name": "total_equity_usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The sum of position deltas",
                            "name": "delta_total",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_account_summary_response_fee"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Block trade fee (if applicable)",
                            "name": "block_trade",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "default",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_account_summary_response_default"
                            }
                        },
                        {
                            "comment": "Settlement fee",
                            "name": "settlement",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_account_summary_response_value"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Maker fee",
                            "name": "maker",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Taker fee",
                            "name": "taker",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Fee type - relative if fee is calculated as a fraction of base instrument fee, fixed if fee is calculated solely using user fee",
                            "name": "type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_account_summary_response_default"
                }
            ]
        },
        "name": "private_get_account_summary",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Options profit and Loss",
                    "name": "options_pl",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The sum of position deltas without positions that will expire during closest expiration",
                    "name": "projected_delta_total",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Map of options' thetas per index",
                    "name": "options_theta_map",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "json"
                    }
                },
                {
                    "comment": "Optional field returned with value true when user has non block chain equity that is excluded from proof of reserve calculations",
                    "name": "has_non_block_chain_equity",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Optional (only for users using cross margin). The account's total margin balance in all cross collateral currencies, expressed in USD",
                    "name": "total_margin_balance_usd",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Returned object is described in separate document.",
                    "name": "limits",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "json"
                    }
                },
                {
                    "comment": "Account type (available when parameter extended = true)",
                    "name": "type",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Optional (only for users using cross margin). The account's total delta total in all cross collateral currencies, expressed in USD",
                    "name": "total_delta_total_usd",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The account's available to withdrawal funds",
                    "name": "available_withdrawal_funds",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Options session realized profit and Loss",
                    "name": "options_session_rpl",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Futures session realized profit and Loss",
                    "name": "futures_session_rpl",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Profit and loss",
                    "name": "total_pl",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "The account's balance reserved in active spot orders",
                    "name": "spot_reserve",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "List of fee objects for all currency pairs and instrument types related to the currency (available when parameter extended = true and user has any discounts)",
                    "name": "fees",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_account_summary_response_fee"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_account_summary_response_result"
        }
    },
    {
        "comment": "Retrieves user`s affiliates count, payouts and link.",
        "endpoint": {
            "name": "private_get_affiliate_program_info",
            "path": "/private/get_affiliate_program_info",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": null,
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_affiliate_program_info_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_affiliate_program_info_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_affiliate_program_info_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_affiliate_program_info_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Status of affiliate program",
                            "name": "is_enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Affiliate link",
                            "name": "link",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Number of affiliates",
                            "name": "number_of_affiliates",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "received",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_affiliate_program_info_response_received"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_affiliate_program_info_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Total payout received in BTC",
                            "name": "btc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Total payout received in ETH",
                            "name": "eth",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_affiliate_program_info_response_received"
                }
            ]
        },
        "name": "private_get_affiliate_program_info",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Status of affiliate program",
                    "name": "is_enabled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Affiliate link",
                    "name": "link",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Number of affiliates",
                    "name": "number_of_affiliates",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "",
                    "name": "received",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_affiliate_program_info_response_received"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_affiliate_program_info_response_result"
        }
    },
    {
        "comment": "Retrieves the language to be used for emails.",
        "endpoint": {
            "name": "private_get_email_language",
            "path": "/private/get_email_language",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": null,
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "The abbreviation of the language",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_email_language_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The abbreviation of the language",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_email_language_response"
                }
            ]
        },
        "name": "private_get_email_language",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Retrieves announcements that have not been marked read by the user.",
        "endpoint": {
            "name": "private_get_new_announcements",
            "path": "/private/get_new_announcements",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": null,
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_new_announcements_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_new_announcements_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_new_announcements_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_new_announcements_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The HTML body of the announcement",
                            "name": "body",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Whether the user confirmation is required for this announcement",
                            "name": "confirmation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "A unique identifier for the announcement",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Whether the announcement is marked as important",
                            "name": "important",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch) of announcement publication",
                            "name": "publication_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The title of the announcement",
                            "name": "title",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_new_announcements_response_result"
                }
            ]
        },
        "name": "private_get_new_announcements",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "The HTML body of the announcement",
                    "name": "body",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Whether the user confirmation is required for this announcement",
                    "name": "confirmation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "A unique identifier for the announcement",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Whether the announcement is marked as important",
                    "name": "important",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch) of announcement publication",
                    "name": "publication_timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "The title of the announcement",
                    "name": "title",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_new_announcements_response_result"
        }
    },
    {
        "comment": "Retrieve user position.",
        "endpoint": {
            "name": "private_get_position",
            "path": "/private/get_position",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Instrument name",
                        "name": "instrument_name",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_position_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_position_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_position_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_position_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_position_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Average price of trades that built this position",
                            "name": "average_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Only for options, average price in USD",
                            "name": "average_price_usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Delta parameter",
                            "name": "delta",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Direction: buy, sell or zero",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Estimated liquidation price, added only for futures, for users with segregated_sm margin model",
                            "name": "estimated_liquidation_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Floating profit or loss",
                            "name": "floating_profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Only for options, floating profit or loss in USD",
                            "name": "floating_profit_loss_usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Only for options, Gamma parameter",
                            "name": "gamma",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Current index price",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Initial margin",
                            "name": "initial_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Value used to calculate realized_funding (perpetual only)",
                            "name": "interest_value",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Instrument kind: \"future\", \"option\", \"spot\", \"future_combo\", \"option_combo\"",
                            "name": "kind",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Current available leverage for future position",
                            "name": "leverage",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Maintenance margin",
                            "name": "maintenance_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Current mark price for position's instrument",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Open orders margin",
                            "name": "open_orders_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Realized Funding in current session included in session realized profit or loss, only for positions of perpetual instruments",
                            "name": "realized_funding",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Realized profit or loss",
                            "name": "realized_profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). Last settlement price for position's instrument 0 if instrument wasn't settled yet",
                            "name": "settlement_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Position size for futures size in quote currency (e.g. USD), for options size is in base currency (e.g. BTC)",
                            "name": "size",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Only for futures, position size in base currency",
                            "name": "size_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Only for options, Theta parameter",
                            "name": "theta",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Profit or loss from position",
                            "name": "total_profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Only for options, Vega parameter",
                            "name": "vega",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_position_response_result"
                }
            ]
        },
        "name": "private_get_position",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Average price of trades that built this position",
                    "name": "average_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Only for options, average price in USD",
                    "name": "average_price_usd",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Delta parameter",
                    "name": "delta",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Direction: buy, sell or zero",
                    "name": "direction",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Estimated liquidation price, added only for futures, for users with segregated_sm margin model",
                    "name": "estimated_liquidation_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Floating profit or loss",
                    "name": "floating_profit_loss",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Only for options, floating profit or loss in USD",
                    "name": "floating_profit_loss_usd",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Only for options, Gamma parameter",
                    "name": "gamma",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Current index price",
                    "name": "index_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Initial margin",
                    "name": "initial_margin",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Unique instrument identifier",
                    "name": "instrument_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Value used to calculate realized_funding (perpetual only)",
                    "name": "interest_value",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Instrument kind: \"future\", \"option\", \"spot\", \"future_combo\", \"option_combo\"",
                    "name": "kind",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Current available leverage for future position",
                    "name": "leverage",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Maintenance margin",
                    "name": "maintenance_margin",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Current mark price for position's instrument",
                    "name": "mark_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Open orders margin",
                    "name": "open_orders_margin",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Realized Funding in current session included in session realized profit or loss, only for positions of perpetual instruments",
                    "name": "realized_funding",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Realized profit or loss",
                    "name": "realized_profit_loss",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Optional (not added for spot). Last settlement price for position's instrument 0 if instrument wasn't settled yet",
                    "name": "settlement_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Position size for futures size in quote currency (e.g. USD), for options size is in base currency (e.g. BTC)",
                    "name": "size",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Only for futures, position size in base currency",
                    "name": "size_currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Only for options, Theta parameter",
                    "name": "theta",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Profit or loss from position",
                    "name": "total_profit_loss",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Only for options, Vega parameter",
                    "name": "vega",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_position_response_result"
        }
    },
    {
        "comment": "Retrieve user positions. To retrieve subaccount positions, use subaccount_id parameter.",
        "endpoint": {
            "name": "private_get_positions",
            "path": "/private/get_positions",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "any",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    },
                    {
                        "items": [
                            "future",
                            "option_combo",
                            "future_combo",
                            "option",
                            "spot"
                        ],
                        "name": "kind"
                    }
                ],
                "fields": [
                    {
                        "comment": NaN,
                        "name": "currency",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Kind filter on positions",
                        "name": "kind",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "kind"
                        }
                    },
                    {
                        "comment": "The user id for the subaccount",
                        "name": "subaccount_id",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_positions_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_positions_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_positions_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_positions_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_positions_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Average price of trades that built this position",
                            "name": "average_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Only for options, average price in USD",
                            "name": "average_price_usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Delta parameter",
                            "name": "delta",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Direction: buy, sell or zero",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Estimated liquidation price, added only for futures, for users with segregated_sm margin model",
                            "name": "estimated_liquidation_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Floating profit or loss",
                            "name": "floating_profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Only for options, floating profit or loss in USD",
                            "name": "floating_profit_loss_usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Only for options, Gamma parameter",
                            "name": "gamma",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Current index price",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Initial margin",
                            "name": "initial_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Value used to calculate realized_funding (perpetual only)",
                            "name": "interest_value",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Instrument kind: \"future\", \"option\", \"spot\", \"future_combo\", \"option_combo\"",
                            "name": "kind",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Current available leverage for future position",
                            "name": "leverage",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Maintenance margin",
                            "name": "maintenance_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Current mark price for position's instrument",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Open orders margin",
                            "name": "open_orders_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Realized Funding in current session included in session realized profit or loss, only for positions of perpetual instruments",
                            "name": "realized_funding",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Realized profit or loss",
                            "name": "realized_profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). Last settlement price for position's instrument 0 if instrument wasn't settled yet",
                            "name": "settlement_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Position size for futures size in quote currency (e.g. USD), for options size is in base currency (e.g. BTC)",
                            "name": "size",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Only for futures, position size in base currency",
                            "name": "size_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Only for options, Theta parameter",
                            "name": "theta",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Profit or loss from position",
                            "name": "total_profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Only for options, Vega parameter",
                            "name": "vega",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_positions_response_result"
                }
            ]
        },
        "name": "private_get_positions",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Average price of trades that built this position",
                    "name": "average_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Only for options, average price in USD",
                    "name": "average_price_usd",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Delta parameter",
                    "name": "delta",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Direction: buy, sell or zero",
                    "name": "direction",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Estimated liquidation price, added only for futures, for users with segregated_sm margin model",
                    "name": "estimated_liquidation_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Floating profit or loss",
                    "name": "floating_profit_loss",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Only for options, floating profit or loss in USD",
                    "name": "floating_profit_loss_usd",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Only for options, Gamma parameter",
                    "name": "gamma",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Current index price",
                    "name": "index_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Initial margin",
                    "name": "initial_margin",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Unique instrument identifier",
                    "name": "instrument_name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Value used to calculate realized_funding (perpetual only)",
                    "name": "interest_value",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Instrument kind: \"future\", \"option\", \"spot\", \"future_combo\", \"option_combo\"",
                    "name": "kind",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Current available leverage for future position",
                    "name": "leverage",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "Maintenance margin",
                    "name": "maintenance_margin",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Current mark price for position's instrument",
                    "name": "mark_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Open orders margin",
                    "name": "open_orders_margin",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Realized Funding in current session included in session realized profit or loss, only for positions of perpetual instruments",
                    "name": "realized_funding",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Realized profit or loss",
                    "name": "realized_profit_loss",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Optional (not added for spot). Last settlement price for position's instrument 0 if instrument wasn't settled yet",
                    "name": "settlement_price",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Position size for futures size in quote currency (e.g. USD), for options size is in base currency (e.g. BTC)",
                    "name": "size",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Only for futures, position size in base currency",
                    "name": "size_currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Only for options, Theta parameter",
                    "name": "theta",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Profit or loss from position",
                    "name": "total_profit_loss",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Only for options, Vega parameter",
                    "name": "vega",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_positions_response_result"
        }
    },
    {
        "comment": "Get information about subaccounts. When called from subaccount, the response will include limited details for the main account and details for the subaccount initiating the request. The portfolio information will be included in the response only if the with_portfolio parameter is set to true.",
        "endpoint": {
            "name": "private_get_subaccounts",
            "path": "/private/get_subaccounts",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Portfolio flag: true for portfolio information, false for subaccount information only. false by default",
                        "name": "with_portfolio",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_subaccounts_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_subaccounts_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_subaccounts_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_subaccounts_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_subaccounts_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "User email",
                            "name": "email",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Account/Subaccount identifier",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "true when password for the subaccount has been configured",
                            "name": "is_password",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Informs whether login to the subaccount is enabled",
                            "name": "login_enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Margin model",
                            "name": "margin_model",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "New email address that has not yet been confirmed. This field is only included if with_portfolio == true.",
                            "name": "not_confirmed_email",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "portfolio",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_subaccounts_response_portfolio"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_subaccounts_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "btc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_subaccounts_response_btc"
                            }
                        },
                        {
                            "comment": "",
                            "name": "eth",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_subaccounts_response_eth"
                            }
                        },
                        {
                            "comment": "hashed identifier used in the Proof Of Liability for the subaccount. This identifier allows you to find your entries in the Deribit Proof-Of-Reserves files. IMPORTANT: Keep it secret to not disclose your entries in the Proof-Of-Reserves.",
                            "name": "proof_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "signature used as a base string for proof_id hash. IMPORTANT: Keep it secret to not disclose your entries in the Proof-Of-Reserves.",
                            "name": "proof_id_signature",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "When true - receive all notification emails on the main email",
                            "name": "receive_notifications",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Names of assignments with Security Keys assigned",
                            "name": "security_keys_assignments",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Whether the Security Keys authentication is enabled",
                            "name": "security_keys_enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "System generated user nickname",
                            "name": "system_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "username",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_subaccounts_response_portfolio"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The account's balance reserved in other orders",
                            "name": "additional_reserve",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "available_funds",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "available_withdrawal_funds",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "balance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "equity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "initial_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "maintenance_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "margin_balance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "spot_reserve",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_subaccounts_response_btc"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The account's balance reserved in other orders",
                            "name": "additional_reserve",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "available_funds",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "available_withdrawal_funds",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "balance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "equity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "initial_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "maintenance_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "margin_balance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "",
                            "name": "spot_reserve",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_subaccounts_response_eth"
                }
            ]
        },
        "name": "private_get_subaccounts",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "User email",
                    "name": "email",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Account/Subaccount identifier",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "true when password for the subaccount has been configured",
                    "name": "is_password",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Informs whether login to the subaccount is enabled",
                    "name": "login_enabled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Margin model",
                    "name": "margin_model",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "New email address that has not yet been confirmed. This field is only included if with_portfolio == true.",
                    "name": "not_confirmed_email",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "",
                    "name": "portfolio",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_subaccounts_response_portfolio"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_subaccounts_response_result"
        }
    },
    {
        "comment": "Get subaccounts positions",
        "endpoint": {
            "name": "private_get_subaccounts_details",
            "path": "/private/get_subaccounts_details",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "Optional parameter to ask for open orders list, default: false",
                        "name": "with_open_orders",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_subaccounts_details_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_subaccounts_details_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_subaccounts_details_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_subaccounts_details_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_subaccounts_details_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "",
                            "name": "open_orders",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_subaccounts_details_response_open_order"
                            }
                        },
                        {
                            "comment": "",
                            "name": "positions",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_subaccounts_details_response_position"
                            }
                        },
                        {
                            "comment": "Account/Subaccount identifier",
                            "name": "uid",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_subaccounts_details_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "If order is a quote. Present only if true.",
                            "name": "quote",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Whether the trigger order has been triggered",
                            "name": "triggered",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "optional field with value true added only when created with Mobile Application",
                            "name": "mobile",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The name of the application that placed the order on behalf of the user (optional).",
                            "name": "app_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Implied volatility in percent. (Only if advanced=\"implv\")",
                            "name": "implv",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The initial display amount of iceberg order. Iceberg order display amount will be refreshed to that value after match consuming actual display amount. Absent for other types of orders",
                            "name": "refresh_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Option price in USD (Only if advanced=\"usd\")",
                            "name": "usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The Ids of the orders that will be triggered if the order is filled",
                            "name": "oto_order_ids",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if created with API",
                            "name": "api",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Average fill price of the order",
                            "name": "average_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "advanced type: \"usd\" or \"implv\" (Only for options; field is omitted if not applicable).",
                            "name": "advanced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true for post-only orders only",
                            "name": "post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
                            "name": "filled_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trigger type (only for trigger orders). Allowed values: \"index_price\", \"mark_price\", \"last_price\".",
                            "name": "trigger",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
                            "name": "trigger_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Direction: buy, or sell",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can be triggered by another order, otherwise not present.",
                            "name": "is_secondary_oto",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise false.",
                            "name": "replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Name of the MMP group supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "mmp_group",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is a MMP order, otherwise false.",
                            "name": "mmp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "last_update_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "creation_timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Enumerated reason behind cancel \"user_request\", \"autoliquidation\", \"cancel_on_disconnect\", \"risk_mitigation\", \"pme_risk_reduction\" (portfolio margining risk reduction), \"pme_account_locked\" (portfolio margining account locked per currency), \"position_locked\", \"mmp_trigger\" (market maker protection), \"mmp_config_curtailment\" (market maker configured quantity decreased), \"edit_post_only_reject\" (cancelled on edit because of reject_post_only setting), \"oco_other_closed\" (the oco order linked to this order was closed), \"oto_primary_closed\" (the oto primary order that was going to trigger this order was cancelled), \"settlement\" (closed because of a settlement)",
                            "name": "cancel_reason",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order was cancelled by mmp trigger (optional)",
                            "name": "mmp_cancelled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "The same QuoteID as supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Order state: \"open\", \"filled\", \"rejected\", \"cancelled\", \"untriggered\"",
                            "name": "order_state",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (only for spot). true if order was automatically created during cross-collateral balance restoration",
                            "name": "is_rebalance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "true if order has reject_post_only flag (field is present only when post_only is true)",
                            "name": "reject_post_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "User defined label (up to 64 characters)",
                            "name": "label",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). true if order was automatically created during liquidation",
                            "name": "is_liquidation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Price in base currency or \"market_price\" in case of open trigger market orders",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number or string"
                            }
                        },
                        {
                            "comment": "true if created via Deribit frontend (optional)",
                            "name": "web",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Order time in force: \"good_til_cancelled\", \"good_til_day\", \"fill_or_kill\" or \"immediate_or_cancel\"",
                            "name": "time_in_force",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
                            "name": "trigger_reference_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The actual display amount of iceberg order. Absent for other types of orders.",
                            "name": "display_amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Order type: \"limit\", \"market\", \"stop_limit\", \"stop_market\"",
                            "name": "order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if the order is an order that can trigger an OCO pair, otherwise not present.",
                            "name": "is_primary_otoco",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Original order type. Optional field",
                            "name": "original_order_type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "true if order made from block_trade trade, added only in that case.",
                            "name": "block_trade",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Trigger price (Only for future trigger orders)",
                            "name": "trigger_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique reference that identifies a one_cancels_others (OCO) pair.",
                            "name": "oco_ref",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
                            "name": "trigger_offset",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Identifier of the QuoteSet supplied in the private/mass_quote request. Only present for quote orders.",
                            "name": "quote_set_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Options, advanced orders only - true if last modification of the order was performed by the pricing engine, otherwise false.",
                            "name": "auto_replaced",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). 'true for reduce-only orders only'",
                            "name": "reduce_only",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "true if the order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users), otherwise false.",
                            "name": "risk_reducing",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The fill condition of the linked order (Only for linked order types), default: first_hit. \"first_hit\" - any execution of the primary order will fully cancel/place all secondary orders. \"complete_fill\" - a complete execution (meaning the primary order no longer exists) will cancel/place the secondary orders. \"incremental\" - any fill of the primary order will cause proportional partial cancellation/placement of the secondary order. The amount that will be subtracted/added to the secondary order will be rounded down to the contract size.",
                            "name": "trigger_fill_condition",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "primary_order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_subaccounts_details_response_open_order"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Average price of trades that built this position",
                            "name": "average_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Only for options, average price in USD",
                            "name": "average_price_usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Delta parameter",
                            "name": "delta",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Direction: buy, sell or zero",
                            "name": "direction",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Floating profit or loss",
                            "name": "floating_profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Only for options, floating profit or loss in USD",
                            "name": "floating_profit_loss_usd",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Only for options, Gamma parameter",
                            "name": "gamma",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Current index price",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Initial margin",
                            "name": "initial_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Value used to calculate realized_funding (perpetual only)",
                            "name": "interest_value",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Instrument kind: \"future\", \"option\", \"spot\", \"future_combo\", \"option_combo\"",
                            "name": "kind",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Current available leverage for future position",
                            "name": "leverage",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Maintenance margin",
                            "name": "maintenance_margin",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Current mark price for position's instrument",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Realized Funding in current session included in session realized profit or loss, only for positions of perpetual instruments",
                            "name": "realized_funding",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Realized profit or loss",
                            "name": "realized_profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Optional (not added for spot). Last settlement price for position's instrument 0 if instrument wasn't settled yet",
                            "name": "settlement_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Position size for futures size in quote currency (e.g. USD), for options size is in base currency (e.g. BTC)",
                            "name": "size",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Only for futures, position size in base currency",
                            "name": "size_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Only for options, Theta parameter",
                            "name": "theta",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Profit or loss from position",
                            "name": "total_profit_loss",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Only for options, Vega parameter",
                            "name": "vega",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_subaccounts_details_response_position"
                }
            ]
        },
        "name": "private_get_subaccounts_details",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "",
                    "name": "open_orders",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_subaccounts_details_response_open_order"
                    }
                },
                {
                    "comment": "",
                    "name": "positions",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_subaccounts_details_response_position"
                    }
                },
                {
                    "comment": "Account/Subaccount identifier",
                    "name": "uid",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_subaccounts_details_response_result"
        }
    },
    {
        "comment": "Retrieve the latest user trades that have occurred for a specific instrument and within a given time range.",
        "endpoint": {
            "name": "private_get_transaction_log",
            "path": "/private/get_transaction_log",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "USDT",
                            "XRP",
                            "ETH",
                            "PAXG",
                            "USYC",
                            "STETH",
                            "MATIC",
                            "BTC",
                            "BNB",
                            "SOL",
                            "ETHW",
                            "USDC",
                            "USDE"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "The earliest timestamp to return result from (milliseconds since the UNIX epoch)",
                        "name": "start_timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The most recent timestamp to return result from (milliseconds since the UNIX epoch)",
                        "name": "end_timestamp",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The following keywords can be used to filter the results: trade, maker, taker, open, close, liquidation, buy, sell, withdrawal, delivery, settlement, deposit, transfer, option, future, correction, block_trade, swap. Plus withdrawal or transfer addresses",
                        "name": "query",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Count of transaction log entries returned, default - 100, maximum - 250",
                        "name": "count",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Id of a subaccount",
                        "name": "subaccount_id",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "Continuation token for pagination",
                        "name": "continuation",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_transaction_log_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_transaction_log_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_transaction_log_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_transaction_log_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_transaction_log_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Continuation token for pagination. NULL when no continuation.",
                            "name": "continuation",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "",
                            "name": "logs",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_transaction_log_response_log"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_transaction_log_response_result"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Change in cash balance. For trades: fees and options premium paid/received. For settlement: Futures session PNL and perpetual session funding.",
                            "name": "change",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "For futures and perpetual contracts: Realized session PNL (since last settlement). For options: the amount paid or received for the options traded.",
                            "name": "cashflow",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Unique user identifier",
                            "name": "user_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Unique (per currency) trade identifier",
                            "name": "trade_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Transaction category/type. The most common are: trade, deposit, withdrawal, settlement, delivery, transfer, swap, correction. New types can be added any time in the future",
                            "name": "type",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique order identifier",
                            "name": "order_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Updated position size after the transaction",
                            "name": "position",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "One of: short or long in case of settlements, close sell or close buy in case of deliveries, open sell, open buy, close sell, close buy in case of trades",
                            "name": "side",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "It represents the order size in contract units. (Optional, may be absent in historical data).",
                            "name": "contracts",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Actual funding rate of trades and settlements on perpetual instruments",
                            "name": "interest_pl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Trade role of the user: maker or taker",
                            "name": "user_role",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Fee role of the user: maker or taker. Can be different from trade role of the user when iceberg order was involved in matching.",
                            "name": "fee_role",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique identifier",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The index price for the instrument during the delivery",
                            "name": "index_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Additional information regarding transaction. Strongly dependent on the log entry type",
                            "name": "info",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "json"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Settlement/delivery price or the price level of the traded contracts",
                            "name": "price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Sequential identifier of user transaction",
                            "name": "user_seq",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The settlement price for the instrument during the delivery",
                            "name": "settlement_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Currency symbol associated with the price field value",
                            "name": "price_currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Updated equity value after the transaction",
                            "name": "equity",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Total session funding rate",
                            "name": "total_interest_pl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Cash balance after the transaction",
                            "name": "balance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Session unrealized profit and loss",
                            "name": "session_upl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "Indicator informing whether the cashflow is waiting for settlement or not",
                            "name": "profit_as_cashflow",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Commission paid so far (in base currency)",
                            "name": "commission",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Session realized profit and loss",
                            "name": "session_rpl",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Market price during the trade",
                            "name": "mark_price",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "ID of the Block RFQ - when trade was part of the Block RFQ",
                            "name": "block_rfq_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The IP address from which the trade was initiated",
                            "name": "ip",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.",
                            "name": "amount",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "System name or user defined subaccount alias",
                            "name": "username",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Unique instrument identifier",
                            "name": "instrument_name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_transaction_log_response_log"
                }
            ]
        },
        "name": "private_get_transaction_log",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Continuation token for pagination. NULL when no continuation.",
                    "name": "continuation",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "",
                    "name": "logs",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "private_get_transaction_log_response_log"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_transaction_log_response_result"
        }
    },
    {
        "comment": "Retrieves information about locks on user account",
        "endpoint": {
            "name": "private_get_user_locks",
            "path": "/private/get_user_locks",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": null,
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_get_user_locks_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_get_user_locks_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_get_user_locks_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_locks_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Value is set to 'true' when user account is locked in currency",
                            "name": "enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Optional information for user why his account is locked",
                            "name": "message",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_get_user_locks_response_result"
                }
            ]
        },
        "name": "private_get_user_locks",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                    "name": "currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Value is set to 'true' when user account is locked in currency",
                    "name": "enabled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Optional information for user why his account is locked",
                    "name": "message",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_get_user_locks_response_result"
        }
    },
    {
        "comment": "Retrieves list of api keys. Important notes.  TFA required",
        "endpoint": {
            "name": "private_list_api_keys",
            "path": "/private/list_api_keys",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": null,
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_list_api_keys_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_list_api_keys_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_list_api_keys_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_list_api_keys_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Client identifier used for authentication",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Client secret or MD5 fingerprint of public key used for authentication",
                            "name": "client_secret",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Informs whether this api key is default (field is deprecated and will be removed in the future)",
                            "name": "default",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Informs whether api key is enabled and can be used for authentication",
                            "name": "enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "List of enabled advanced on-key features. Available options:  - restricted_block_trades: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key  - block_trade_approval: Block trades created using this API key require additional user approval. Methods that use block_rfq scope are not affected by Block Trade approval feature",
                            "name": "enabled_features",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "key identifier",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "List of IP addresses whitelisted for a selected key",
                            "name": "ip_whitelist",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes maximal access for tokens generated with given key, possible values: trade:[read, read_write, none], wallet:[read, read_write, none], account:[read, read_write, none], block_trade:[read, read_write, none], block_rfq:[read, read_write, none]. If scope is not provided, its value is set as none. Please check details described in Access scope",
                            "name": "max_scope",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Api key name that can be displayed in transaction log",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "PEM encoded public key (Ed25519/RSA) used for asymmetric signatures (optional)",
                            "name": "public_key",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_list_api_keys_response_result"
                }
            ]
        },
        "name": "private_list_api_keys",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Client identifier used for authentication",
                    "name": "client_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Client secret or MD5 fingerprint of public key used for authentication",
                    "name": "client_secret",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Informs whether this api key is default (field is deprecated and will be removed in the future)",
                    "name": "default",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Informs whether api key is enabled and can be used for authentication",
                    "name": "enabled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "List of enabled advanced on-key features. Available options:  - restricted_block_trades: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key  - block_trade_approval: Block trades created using this API key require additional user approval. Methods that use block_rfq scope are not affected by Block Trade approval feature",
                    "name": "enabled_features",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "key identifier",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "List of IP addresses whitelisted for a selected key",
                    "name": "ip_whitelist",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Describes maximal access for tokens generated with given key, possible values: trade:[read, read_write, none], wallet:[read, read_write, none], account:[read, read_write, none], block_trade:[read, read_write, none], block_rfq:[read, read_write, none]. If scope is not provided, its value is set as none. Please check details described in Access scope",
                    "name": "max_scope",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Api key name that can be displayed in transaction log",
                    "name": "name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "PEM encoded public key (Ed25519/RSA) used for asymmetric signatures (optional)",
                    "name": "public_key",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_list_api_keys_response_result"
        }
    },
    {
        "comment": "Retrieves user custody accounts list.",
        "endpoint": {
            "name": "private_list_custody_accounts",
            "path": "/private/list_custody_accounts",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_list_custody_accounts_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Custody account",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_list_custody_accounts_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_list_custody_accounts_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Custody account",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_list_custody_accounts_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_list_custody_accounts_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "When set to 'true' all new funds added to custody balance will be automatically transferred to trading balance",
                            "name": "auto_deposit",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Amount of funds in given currency",
                            "name": "balance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "API key 'client id' used to reserve/release funds in custody platform, requires scope 'custody:read_write'",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                            "name": "currency",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Address that can be used for deposits",
                            "name": "deposit_address",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "User ID in external systems",
                            "name": "external_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Custody name",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "New withdrawal address that will be used after 'withdrawal_address_change'",
                            "name": "pending_withdrawal_addres",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Amount of funds in given currency",
                            "name": "pending_withdrawal_balance",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        },
                        {
                            "comment": "Address that is used for withdrawals",
                            "name": "withdrawal_address",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "UNIX timestamp after when new withdrawal address will be used for withdrawals",
                            "name": "withdrawal_address_change",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "number"
                            }
                        }
                    ],
                    "is_array": true,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_list_custody_accounts_response_result"
                }
            ]
        },
        "name": "private_list_custody_accounts",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "When set to 'true' all new funds added to custody balance will be automatically transferred to trading balance",
                    "name": "auto_deposit",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Amount of funds in given currency",
                    "name": "balance",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "API key 'client id' used to reserve/release funds in custody platform, requires scope 'custody:read_write'",
                    "name": "client_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Currency, i.e \"BTC\", \"ETH\", \"USDC\"",
                    "name": "currency",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Address that can be used for deposits",
                    "name": "deposit_address",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "User ID in external systems",
                    "name": "external_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Custody name",
                    "name": "name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "New withdrawal address that will be used after 'withdrawal_address_change'",
                    "name": "pending_withdrawal_addres",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Amount of funds in given currency",
                    "name": "pending_withdrawal_balance",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                },
                {
                    "comment": "Address that is used for withdrawals",
                    "name": "withdrawal_address",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "UNIX timestamp after when new withdrawal address will be used for withdrawals",
                    "name": "withdrawal_address_change",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "number"
                    }
                }
            ],
            "is_array": true,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_list_custody_accounts_response_result"
        }
    },
    {
        "comment": "Calculates the Extended Risk Matrix and margin information for the selected currency or against the entire Cross-Collateral portfolio.",
        "endpoint": {
            "name": "private_pme_simulate",
            "path": "/private/pme/simulate",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "ETH",
                            "CROSS",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency for which the Extended Risk Matrix will be calculated. Use CROSS for Cross Collateral simulation.",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "If true, adds simulated positions to current positions, otherwise uses only simulated positions. By default true",
                        "name": "add_positions",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Object with positions in following form: {InstrumentName1: Position1, InstrumentName2: Position2...}, for example {\"BTC-PERPETUAL\": -1.0} (or corresponding URI-encoding for GET). Size in base currency.",
                        "name": "simulated_positions",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "object"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_pme_simulate_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Simulation details",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "json"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_pme_simulate_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Simulation details",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "json"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_pme_simulate_response"
                }
            ]
        },
        "name": "private_pme_simulate",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "json"
        }
    },
    {
        "comment": "Removes api key. Important notes.",
        "endpoint": {
            "name": "private_remove_api_key",
            "path": "/private/remove_api_key",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Id of key",
                        "name": "id",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_remove_api_key_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Result of method execution. ok in case of success",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_remove_api_key_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Result of method execution. ok in case of success",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_remove_api_key_response"
                }
            ]
        },
        "name": "private_remove_api_key",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Remove empty subaccount. TFA required",
        "endpoint": {
            "name": "private_remove_subaccount",
            "path": "/private/remove_subaccount",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The user id for the subaccount",
                        "name": "subaccount_id",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_remove_subaccount_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Result of method execution. ok in case of success",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_remove_subaccount_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Result of method execution. ok in case of success",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_remove_subaccount_response"
                }
            ]
        },
        "name": "private_remove_subaccount",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Resets secret in api key. Important notes.",
        "endpoint": {
            "name": "private_reset_api_key",
            "path": "/private/reset_api_key",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Id of key",
                        "name": "id",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_reset_api_key_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "private_reset_api_key_response_result"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_reset_api_key_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "private_reset_api_key_response_result"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_reset_api_key_response"
                },
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "Client identifier used for authentication",
                            "name": "client_id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Client secret or MD5 fingerprint of public key used for authentication",
                            "name": "client_secret",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Informs whether this api key is default (field is deprecated and will be removed in the future)",
                            "name": "default",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "Informs whether api key is enabled and can be used for authentication",
                            "name": "enabled",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "boolean"
                            }
                        },
                        {
                            "comment": "List of enabled advanced on-key features. Available options:  - restricted_block_trades: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key  - block_trade_approval: Block trades created using this API key require additional user approval. Methods that use block_rfq scope are not affected by Block Trade approval feature",
                            "name": "enabled_features",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "key identifier",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "List of IP addresses whitelisted for a selected key",
                            "name": "ip_whitelist",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": true,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Describes maximal access for tokens generated with given key, possible values: trade:[read, read_write, none], wallet:[read, read_write, none], account:[read, read_write, none], block_trade:[read, read_write, none], block_rfq:[read, read_write, none]. If scope is not provided, its value is set as none. Please check details described in Access scope",
                            "name": "max_scope",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Api key name that can be displayed in transaction log",
                            "name": "name",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "PEM encoded public key (Ed25519/RSA) used for asymmetric signatures (optional)",
                            "name": "public_key",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "The timestamp (milliseconds since the Unix epoch)",
                            "name": "timestamp",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_reset_api_key_response_result"
                }
            ]
        },
        "name": "private_reset_api_key",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [
                {
                    "comment": "Client identifier used for authentication",
                    "name": "client_id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Client secret or MD5 fingerprint of public key used for authentication",
                    "name": "client_secret",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Informs whether this api key is default (field is deprecated and will be removed in the future)",
                    "name": "default",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "Informs whether api key is enabled and can be used for authentication",
                    "name": "enabled",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "boolean"
                    }
                },
                {
                    "comment": "List of enabled advanced on-key features. Available options:  - restricted_block_trades: Limit the block_trade read the scope of the API key to block trades that have been made using this specific API key  - block_trade_approval: Block trades created using this API key require additional user approval. Methods that use block_rfq scope are not affected by Block Trade approval feature",
                    "name": "enabled_features",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "key identifier",
                    "name": "id",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                },
                {
                    "comment": "List of IP addresses whitelisted for a selected key",
                    "name": "ip_whitelist",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": true,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Describes maximal access for tokens generated with given key, possible values: trade:[read, read_write, none], wallet:[read, read_write, none], account:[read, read_write, none], block_trade:[read, read_write, none], block_rfq:[read, read_write, none]. If scope is not provided, its value is set as none. Please check details described in Access scope",
                    "name": "max_scope",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "Api key name that can be displayed in transaction log",
                    "name": "name",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "PEM encoded public key (Ed25519/RSA) used for asymmetric signatures (optional)",
                    "name": "public_key",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "string"
                    }
                },
                {
                    "comment": "The timestamp (milliseconds since the Unix epoch)",
                    "name": "timestamp",
                    "required": false,
                    "type": {
                        "enums": [],
                        "fields": [],
                        "is_array": false,
                        "is_nested_array": false,
                        "is_primitive": false,
                        "name": "integer"
                    }
                }
            ],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": false,
            "name": "private_reset_api_key_response_result"
        }
    },
    {
        "comment": "Marks an announcement as read, so it will not be shown in get_new_announcements.",
        "endpoint": {
            "name": "private_set_announcement_as_read",
            "path": "/private/set_announcement_as_read",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "the ID of the announcement",
                        "name": "announcement_id",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "number"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_set_announcement_as_read_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Result of method execution. ok in case of success",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_set_announcement_as_read_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Result of method execution. ok in case of success",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_set_announcement_as_read_response"
                }
            ]
        },
        "name": "private_set_announcement_as_read",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Configure disabled trading products for subaccounts. Only main accounts can modify this for subaccounts. TFA required",
        "endpoint": {
            "name": "private_set_disabled_trading_products",
            "path": "/private/set_disabled_trading_products",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "Id of a (sub)account",
                        "name": "user_id",
                        "required": true,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "List of available trading products. Available products: perpetual, futures, options, future_combos, option_combos, spots",
                        "name": "trading_products",
                        "required": true,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": true,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_set_disabled_trading_products_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Result of method execution. ok in case of success",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_set_disabled_trading_products_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Result of method execution. ok in case of success",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_set_disabled_trading_products_response"
                }
            ]
        },
        "name": "private_set_disabled_trading_products",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Assign an email address to a subaccount. User will receive an email with a confirmation link. TFA required",
        "endpoint": {
            "name": "private_set_email_for_subaccount",
            "path": "/private/set_email_for_subaccount",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The user id for the subaccount",
                        "name": "sid",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The email address for the subaccount",
                        "name": "email",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_set_email_for_subaccount_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Result of method execution. ok in case of success",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_set_email_for_subaccount_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Result of method execution. ok in case of success",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_set_email_for_subaccount_response"
                }
            ]
        },
        "name": "private_set_email_for_subaccount",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Changes the language to be used for emails.",
        "endpoint": {
            "name": "private_set_email_language",
            "path": "/private/set_email_language",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The abbreviated language name. Valid values include \"en\", \"ko\", \"zh\", \"ja\", \"ru\"",
                        "name": "language",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_set_email_language_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Result of method execution. ok in case of success",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_set_email_language_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Result of method execution. ok in case of success",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_set_email_language_response"
                }
            ]
        },
        "name": "private_set_email_language",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Configure self trading behavior",
        "endpoint": {
            "name": "private_set_self_trading_config",
            "path": "/private/set_self_trading_config",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "cancel_maker",
                            "reject_taker"
                        ],
                        "name": "mode"
                    }
                ],
                "fields": [
                    {
                        "comment": "Self trading prevention behavior: reject_taker (reject the incoming order), cancel_maker (cancel the matched order in the book)",
                        "name": "mode",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "mode"
                        }
                    },
                    {
                        "comment": "If value is true trading is prevented between subaccounts of given account, otherwise they are treated separately",
                        "name": "extended_to_subaccounts",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "When Block RFQ Self Match Prevention is enabled, it ensures that RFQs cannot be executed between accounts that belong to the same legal entity. This setting is independent of the general self-match prevention settings and must be configured separately.",
                        "name": "block_rfq_self_match_prevention",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_set_self_trading_config_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Result of method execution. ok in case of success",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_set_self_trading_config_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Result of method execution. ok in case of success",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_set_self_trading_config_response"
                }
            ]
        },
        "name": "private_set_self_trading_config",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Calculates portfolio margin info for simulated position or current position of the user. This request has a special restricted rate limit (not more than once per a second).",
        "endpoint": {
            "name": "private_simulate_portfolio",
            "path": "/private/simulate_portfolio",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "EURR",
                            "ETH",
                            "BTC",
                            "USDT",
                            "USDC"
                        ],
                        "name": "currency"
                    }
                ],
                "fields": [
                    {
                        "comment": "The currency symbol",
                        "name": "currency",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "currency"
                        }
                    },
                    {
                        "comment": "If true, adds simulated positions to current positions, otherwise uses only simulated positions. By default true",
                        "name": "add_positions",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    },
                    {
                        "comment": "Object with positions in following form: {InstrumentName1: Position1, InstrumentName2: Position2...}, for example {\"BTC-PERPETUAL\": -1000.0} (or corresponding URI-encoding for GET). For futures in USD, for options in base currency.",
                        "name": "simulated_positions",
                        "required": "false",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "object"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_simulate_portfolio_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Portfolio details",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "json"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_simulate_portfolio_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Portfolio details",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "json"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_simulate_portfolio_response"
                }
            ]
        },
        "name": "private_simulate_portfolio",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "json"
        }
    },
    {
        "comment": "Enable or disable sending of notifications for the subaccount. TFA required",
        "endpoint": {
            "name": "private_toggle_notifications_from_subaccount",
            "path": "/private/toggle_notifications_from_subaccount",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The user id for the subaccount",
                        "name": "sid",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "enable (true) or disable (false) notifications",
                        "name": "state",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "boolean"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_toggle_notifications_from_subaccount_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Result of method execution. ok in case of success",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_toggle_notifications_from_subaccount_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Result of method execution. ok in case of success",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_toggle_notifications_from_subaccount_response"
                }
            ]
        },
        "name": "private_toggle_notifications_from_subaccount",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    },
    {
        "comment": "Enable or disable login for a subaccount. If login is disabled and a session for the subaccount exists, this session will be terminated. TFA required",
        "endpoint": {
            "name": "private_toggle_subaccount_login",
            "path": "/private/toggle_subaccount_login",
            "rate_limiter": "non_matching_engine_request_log_call",
            "request_type": {
                "enums": [
                    {
                        "items": [
                            "enable",
                            "disable"
                        ],
                        "name": "state"
                    }
                ],
                "fields": [
                    {
                        "comment": "The user id for the subaccount",
                        "name": "sid",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "enable or disable login.",
                        "name": "state",
                        "required": "true",
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": true,
                            "name": "state"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_toggle_subaccount_login_request"
            },
            "response_type": {
                "enums": [],
                "fields": [
                    {
                        "comment": "The id that was sent in the request",
                        "name": "id",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "integer"
                        }
                    },
                    {
                        "comment": "The JSON-RPC version (2.0)",
                        "name": "jsonrpc",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    },
                    {
                        "comment": "Result of method execution. ok in case of success",
                        "name": "result",
                        "required": false,
                        "type": {
                            "enums": [],
                            "fields": [],
                            "is_array": false,
                            "is_nested_array": false,
                            "is_primitive": false,
                            "name": "string"
                        }
                    }
                ],
                "is_array": false,
                "is_nested_array": false,
                "is_primitive": false,
                "name": "private_toggle_subaccount_login_response"
            },
            "response_types": [
                {
                    "enums": [],
                    "fields": [
                        {
                            "comment": "The id that was sent in the request",
                            "name": "id",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "integer"
                            }
                        },
                        {
                            "comment": "The JSON-RPC version (2.0)",
                            "name": "jsonrpc",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        },
                        {
                            "comment": "Result of method execution. ok in case of success",
                            "name": "result",
                            "required": false,
                            "type": {
                                "enums": [],
                                "fields": [],
                                "is_array": false,
                                "is_nested_array": false,
                                "is_primitive": false,
                                "name": "string"
                            }
                        }
                    ],
                    "is_array": false,
                    "is_nested_array": false,
                    "is_primitive": false,
                    "name": "private_toggle_subaccount_login_response"
                }
            ]
        },
        "name": "private_toggle_subaccount_login",
        "requires_auth": true,
        "response_type": {
            "enums": [],
            "fields": [],
            "is_array": false,
            "is_nested_array": false,
            "is_primitive": true,
            "name": "string"
        }
    }
]