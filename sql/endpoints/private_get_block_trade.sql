/*
* AUTO-GENERATED FILE - DO NOT MODIFY
*
* This SQL file was generated by a code generation tool. Any modifications
* made to this file may be overwritten by subsequent code generation
* processes and could lead to inconsistencies or errors in the application.
*
* For any required changes, please modify the source templates or the
* code generation tool's configurations and regenerate this file.
*
* WARNING: MODIFYING THIS FILE DIRECTLY CAN LEAD TO UNEXPECTED BEHAVIOR
* AND IS STRONGLY DISCOURAGED.
*/
create type deribit.private_get_block_trade_request as (
    "id" text
);

comment on column deribit.private_get_block_trade_request."id" is '(Required) Block trade id';

create type deribit.private_get_block_trade_response_client_info as (
    "client_id" bigint,
    "client_link_id" bigint,
    "name" text
);

comment on column deribit.private_get_block_trade_response_client_info."client_id" is 'ID of a client; available to broker. Represents a group of users under a common name.';
comment on column deribit.private_get_block_trade_response_client_info."client_link_id" is 'ID assigned to a single user in a client; available to broker.';
comment on column deribit.private_get_block_trade_response_client_info."name" is 'Name of the linked user within the client; available to broker.';

create type deribit.private_get_block_trade_response_trade_allocation as (
    "amount" double precision,
    "client_info" deribit.private_get_block_trade_response_client_info,
    "fee" double precision,
    "user_id" bigint
);

comment on column deribit.private_get_block_trade_response_trade_allocation."amount" is 'Amount allocated to this user.';
comment on column deribit.private_get_block_trade_response_trade_allocation."client_info" is 'Optional client allocation info for brokers.';
comment on column deribit.private_get_block_trade_response_trade_allocation."fee" is 'Fee for the allocated part of the trade.';
comment on column deribit.private_get_block_trade_response_trade_allocation."user_id" is 'User ID to which part of the trade is allocated. For brokers the User ID is obstructed.';

create type deribit.private_get_block_trade_response_trade as (
    "trade_id" text,
    "tick_direction" bigint,
    "fee_currency" text,
    "api" boolean,
    "advanced" text,
    "order_id" text,
    "liquidity" text,
    "post_only" text,
    "direction" text,
    "contracts" double precision,
    "mmp" boolean,
    "fee" double precision,
    "quote_id" text,
    "index_price" double precision,
    "label" text,
    "block_trade_id" text,
    "price" double precision,
    "combo_id" text,
    "matching_id" text,
    "order_type" text,
    "trade_allocations" deribit.private_get_block_trade_response_trade_allocation[],
    "profit_loss" double precision,
    "timestamp" bigint,
    "iv" double precision,
    "state" text,
    "underlying_price" double precision,
    "block_rfq_quote_id" bigint,
    "quote_set_id" text,
    "mark_price" double precision,
    "block_rfq_id" bigint,
    "combo_trade_id" double precision,
    "reduce_only" text,
    "amount" double precision,
    "liquidation" text,
    "trade_seq" bigint,
    "risk_reducing" boolean,
    "instrument_name" text,
    "legs" text[]
);

comment on column deribit.private_get_block_trade_response_trade."trade_id" is 'Unique (per currency) trade identifier';
comment on column deribit.private_get_block_trade_response_trade."tick_direction" is 'Direction of the "tick" (0 = Plus Tick, 1 = Zero-Plus Tick, 2 = Minus Tick, 3 = Zero-Minus Tick).';
comment on column deribit.private_get_block_trade_response_trade."fee_currency" is 'Currency, i.e "BTC", "ETH", "USDC"';
comment on column deribit.private_get_block_trade_response_trade."api" is 'true if user order was created with API';
comment on column deribit.private_get_block_trade_response_trade."advanced" is 'Advanced type of user order: "usd" or "implv" (only for options; omitted if not applicable)';
comment on column deribit.private_get_block_trade_response_trade."order_id" is 'Id of the user order (maker or taker), i.e. subscriber''s order id that took part in the trade';
comment on column deribit.private_get_block_trade_response_trade."liquidity" is 'Describes what was role of users order: "M" when it was maker order, "T" when it was taker order';
comment on column deribit.private_get_block_trade_response_trade."post_only" is 'true if user order is post-only';
comment on column deribit.private_get_block_trade_response_trade."direction" is 'Direction: buy, or sell';
comment on column deribit.private_get_block_trade_response_trade."contracts" is 'Trade size in contract units (optional, may be absent in historical trades)';
comment on column deribit.private_get_block_trade_response_trade."mmp" is 'true if user order is MMP';
comment on column deribit.private_get_block_trade_response_trade."fee" is 'User''s fee in units of the specified fee_currency';
comment on column deribit.private_get_block_trade_response_trade."quote_id" is 'QuoteID of the user order (optional, present only for orders placed with private/mass_quote)';
comment on column deribit.private_get_block_trade_response_trade."index_price" is 'Index Price at the moment of trade';
comment on column deribit.private_get_block_trade_response_trade."label" is 'User defined label (presented only when previously set for order by user)';
comment on column deribit.private_get_block_trade_response_trade."block_trade_id" is 'Block trade id - when trade was part of a block trade';
comment on column deribit.private_get_block_trade_response_trade."price" is 'Price in base currency';
comment on column deribit.private_get_block_trade_response_trade."combo_id" is 'Optional field containing combo instrument name if the trade is a combo trade';
comment on column deribit.private_get_block_trade_response_trade."matching_id" is 'Always null';
comment on column deribit.private_get_block_trade_response_trade."order_type" is 'Order type: "limit, "market", or "liquidation"';
comment on column deribit.private_get_block_trade_response_trade."trade_allocations" is 'List of allocations for Block RFQ pre-allocation. Each allocation specifies user_id, amount, and fee for the allocated part of the trade. For broker client allocations, a client_info object will be included.';
comment on column deribit.private_get_block_trade_response_trade."profit_loss" is 'Profit and loss in base currency.';
comment on column deribit.private_get_block_trade_response_trade."timestamp" is 'The timestamp of the trade (milliseconds since the UNIX epoch)';
comment on column deribit.private_get_block_trade_response_trade."iv" is 'Option implied volatility for the price (Option only)';
comment on column deribit.private_get_block_trade_response_trade."state" is 'Order state: "open", "filled", "rejected", "cancelled", "untriggered" or "archive" (if order was archived)';
comment on column deribit.private_get_block_trade_response_trade."underlying_price" is 'Underlying price for implied volatility calculations (Options only)';
comment on column deribit.private_get_block_trade_response_trade."block_rfq_quote_id" is 'ID of the Block RFQ quote - when trade was part of the Block RFQ';
comment on column deribit.private_get_block_trade_response_trade."quote_set_id" is 'QuoteSet of the user order (optional, present only for orders placed with private/mass_quote)';
comment on column deribit.private_get_block_trade_response_trade."mark_price" is 'Mark Price at the moment of trade';
comment on column deribit.private_get_block_trade_response_trade."block_rfq_id" is 'ID of the Block RFQ - when trade was part of the Block RFQ';
comment on column deribit.private_get_block_trade_response_trade."combo_trade_id" is 'Optional field containing combo trade identifier if the trade is a combo trade';
comment on column deribit.private_get_block_trade_response_trade."reduce_only" is 'true if user order is reduce-only';
comment on column deribit.private_get_block_trade_response_trade."amount" is 'Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.';
comment on column deribit.private_get_block_trade_response_trade."liquidation" is 'Optional field (only for trades caused by liquidation): "M" when maker side of trade was under liquidation, "T" when taker side was under liquidation, "MT" when both sides of trade were under liquidation';
comment on column deribit.private_get_block_trade_response_trade."trade_seq" is 'The sequence number of the trade within instrument';
comment on column deribit.private_get_block_trade_response_trade."risk_reducing" is 'true if user order is marked by the platform as a risk reducing order (can apply only to orders placed by PM users)';
comment on column deribit.private_get_block_trade_response_trade."instrument_name" is 'Unique instrument identifier';
comment on column deribit.private_get_block_trade_response_trade."legs" is 'Optional field containing leg trades if trade is a combo trade (present when querying for only combo trades and in combo_trades events)';

create type deribit.private_get_block_trade_response_result as (
    "app_name" text,
    "broker_code" text,
    "broker_name" text,
    "id" text,
    "timestamp" bigint,
    "trades" deribit.private_get_block_trade_response_trade[]
);

comment on column deribit.private_get_block_trade_response_result."app_name" is 'The name of the application that executed the block trade on behalf of the user (optional).';
comment on column deribit.private_get_block_trade_response_result."broker_code" is 'Broker code associated with the broker block trade.';
comment on column deribit.private_get_block_trade_response_result."broker_name" is 'Name of the broker associated with the block trade.';
comment on column deribit.private_get_block_trade_response_result."id" is 'Block trade id';
comment on column deribit.private_get_block_trade_response_result."timestamp" is 'The timestamp (milliseconds since the Unix epoch)';

create type deribit.private_get_block_trade_response as (
    "id" bigint,
    "jsonrpc" text,
    "result" deribit.private_get_block_trade_response_result
);

comment on column deribit.private_get_block_trade_response."id" is 'The id that was sent in the request';
comment on column deribit.private_get_block_trade_response."jsonrpc" is 'The JSON-RPC version (2.0)';

create function deribit.private_get_block_trade(
    "id" text
)
returns deribit.private_get_block_trade_response_result
language sql
as $$
    
    with request as (
        select row(
            "id"
        )::deribit.private_get_block_trade_request as payload
    ), 
    http_response as (
        select deribit.private_jsonrpc_request(
            auth := deribit.get_auth(),
            url := '/private/get_block_trade'::deribit.endpoint,
            request := request.payload,
            rate_limiter := 'deribit.non_matching_engine_request_log_call'::name
        ) as http_response
        from request
    )
    select (
        jsonb_populate_record(
            null::deribit.private_get_block_trade_response,
            convert_from((a.http_response).body, 'utf-8')::jsonb
        )
    ).result
    from http_response a

$$;

comment on function deribit.private_get_block_trade is 'Returns information about the users block trade';
