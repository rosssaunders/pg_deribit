/*
* AUTO-GENERATED FILE - DO NOT MODIFY
*
* This SQL file was generated by a code generation tool. Any modifications
* made to this file may be overwritten by subsequent code generation
* processes and could lead to inconsistencies or errors in the application.
*
* For any required changes, please modify the source templates or the
* code generation tool's configurations and regenerate this file.
*
* WARNING: MODIFYING THIS FILE DIRECTLY CAN LEAD TO UNEXPECTED BEHAVIOR
* AND IS STRONGLY DISCOURAGED.
*/
create type deribit.public_get_index_price_request_index_name as enum (
    'ada_usd',
    'ada_usdc',
    'ada_usdt',
    'algo_usd',
    'algo_usdc',
    'algo_usdt',
    'avax_usd',
    'avax_usdc',
    'avax_usdt',
    'bch_usd',
    'bch_usdc',
    'bch_usdt',
    'bnb_usdt',
    'btc_usd',
    'btc_usdc',
    'btc_usde',
    'btc_usdt',
    'btc_usyc',
    'btcdvol_usdc',
    'doge_usd',
    'doge_usdc',
    'doge_usdt',
    'dot_usd',
    'dot_usdc',
    'dot_usdt',
    'eth_usd',
    'eth_usdc',
    'eth_usde',
    'eth_usdt',
    'eth_usyc',
    'ethdvol_usdc',
    'link_usd',
    'link_usdc',
    'link_usdt',
    'ltc_usd',
    'ltc_usdc',
    'ltc_usdt',
    'luna_usdt',
    'matic_usd',
    'matic_usdc',
    'matic_usdt',
    'near_usd',
    'near_usdc',
    'near_usdt',
    'paxg_btc',
    'paxg_usd',
    'paxg_usdc',
    'paxg_usdt',
    'shib_usd',
    'shib_usdc',
    'shib_usdt',
    'sol_usd',
    'sol_usdc',
    'sol_usdt',
    'steth_eth',
    'steth_usd',
    'steth_usdc',
    'steth_usdt',
    'trx_usd',
    'trx_usdc',
    'trx_usdt',
    'uni_usd',
    'uni_usdc',
    'uni_usdt',
    'usdc_usd',
    'usde_usd',
    'usde_usdc',
    'usde_usdt',
    'usyc_usdc',
    'xrp_usd',
    'xrp_usdc',
    'xrp_usdt'
);

create type deribit.public_get_index_price_request as (
    "index_name" deribit.public_get_index_price_request_index_name
);

comment on column deribit.public_get_index_price_request."index_name" is '(Required) Index identifier, matches (base) cryptocurrency with quote currency';

create type deribit.public_get_index_price_response_result as (
    "estimated_delivery_price" double precision,
    "index_price" double precision
);

comment on column deribit.public_get_index_price_response_result."estimated_delivery_price" is 'Estimated delivery price for the market. For more details, see Documentation > General > Expiration Price';
comment on column deribit.public_get_index_price_response_result."index_price" is 'Value of requested index';

create type deribit.public_get_index_price_response as (
    "id" bigint,
    "jsonrpc" text,
    "result" deribit.public_get_index_price_response_result
);

comment on column deribit.public_get_index_price_response."id" is 'The id that was sent in the request';
comment on column deribit.public_get_index_price_response."jsonrpc" is 'The JSON-RPC version (2.0)';

create function deribit.public_get_index_price(
    "index_name" deribit.public_get_index_price_request_index_name
)
returns deribit.public_get_index_price_response_result
language sql
as $$
    
    with request as (
        select row(
            "index_name"
        )::deribit.public_get_index_price_request as payload
    ), 
    http_response as (
        select deribit.public_jsonrpc_request(
            url := '/public/get_index_price'::deribit.endpoint,
            request := request.payload,
            rate_limiter := 'deribit.non_matching_engine_request_log_call'::name
        ) as http_response
        from request
    )
    select (
        jsonb_populate_record(
            null::deribit.public_get_index_price_response,
            convert_from((a.http_response).body, 'utf-8')::jsonb
        )
    ).result
    from http_response a

$$;

comment on function deribit.public_get_index_price is 'Retrieves the current index price value for given index name.';
