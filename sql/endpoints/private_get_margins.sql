/*
* AUTO-GENERATED FILE - DO NOT MODIFY
*
* This SQL file was generated by a code generation tool. Any modifications
* made to this file may be overwritten by subsequent code generation
* processes and could lead to inconsistencies or errors in the application.
*
* For any required changes, please modify the source templates or the
* code generation tool's configurations and regenerate this file.
*
* WARNING: MODIFYING THIS FILE DIRECTLY CAN LEAD TO UNEXPECTED BEHAVIOR
* AND IS STRONGLY DISCOURAGED.
*/
create type deribit.private_get_margins_request as (
    "instrument_name" text,
    "amount" double precision,
    "price" double precision
);

comment on column deribit.private_get_margins_request."instrument_name" is '(Required) Instrument name';
comment on column deribit.private_get_margins_request."amount" is '(Required) It represents the requested order size. For perpetual and inverse futures the amount is in USD units. For linear futures it is the underlying base currency coin. For options it is the amount of corresponding cryptocurrency contracts, e.g., BTC or ETH.';
comment on column deribit.private_get_margins_request."price" is '(Required) Price';

create type deribit.private_get_margins_response_result as (
    "buy" double precision,
    "max_price" double precision,
    "min_price" double precision,
    "sell" double precision
);

comment on column deribit.private_get_margins_response_result."buy" is 'Margin when buying';
comment on column deribit.private_get_margins_response_result."max_price" is 'The maximum price for the future. Any buy orders you submit higher than this price, will be clamped to this maximum.';
comment on column deribit.private_get_margins_response_result."min_price" is 'The minimum price for the future. Any sell orders you submit lower than this price will be clamped to this minimum.';
comment on column deribit.private_get_margins_response_result."sell" is 'Margin when selling';

create type deribit.private_get_margins_response as (
    "id" bigint,
    "jsonrpc" text,
    "result" deribit.private_get_margins_response_result
);

comment on column deribit.private_get_margins_response."id" is 'The id that was sent in the request';
comment on column deribit.private_get_margins_response."jsonrpc" is 'The JSON-RPC version (2.0)';

create function deribit.private_get_margins(
    auth deribit.auth
,    "instrument_name" text,
    "amount" double precision,
    "price" double precision
)
returns deribit.private_get_margins_response_result
language sql
as $$
    
    with request as (
        select row(
            "instrument_name",
            "amount",
            "price"
        )::deribit.private_get_margins_request as payload
    ), 
    http_response as (
        select deribit.private_jsonrpc_request(
            auth := auth,             
            url := '/private/get_margins'::deribit.endpoint, 
            request := request.payload, 
            rate_limiter := 'deribit.non_matching_engine_request_log_call'::name
        ) as http_response
        from request
    )
    select (jsonb_populate_record(
        null::deribit.private_get_margins_response, 
        convert_from((a.http_response).body, 'utf-8')::jsonb)).result
    from http_response a

$$;

comment on function deribit.private_get_margins is 'Get margins for a given instrument, amount and price.';
