/*
* AUTO-GENERATED FILE - DO NOT MODIFY
*
* This SQL file was generated by a code generation tool. Any modifications
* made to this file may be overwritten by subsequent code generation
* processes and could lead to inconsistencies or errors in the application.
*
* For any required changes, please modify the source templates or the
* code generation tool's configurations and regenerate this file.
*
* WARNING: MODIFYING THIS FILE DIRECTLY CAN LEAD TO UNEXPECTED BEHAVIOR
* AND IS STRONGLY DISCOURAGED.
*/
create type deribit.public_get_last_trades_by_currency_request_currency as enum (
    'BTC',
    'ETH',
    'EURR',
    'USDC',
    'USDT'
);

create type deribit.public_get_last_trades_by_currency_request_kind as enum (
    'any',
    'combo',
    'future',
    'future_combo',
    'option',
    'option_combo',
    'spot'
);

create type deribit.public_get_last_trades_by_currency_request_sorting as enum (
    'asc',
    'default',
    'desc'
);

create type deribit.public_get_last_trades_by_currency_request as (
    "currency" deribit.public_get_last_trades_by_currency_request_currency,
    "kind" deribit.public_get_last_trades_by_currency_request_kind,
    "start_id" text,
    "end_id" text,
    "start_timestamp" bigint,
    "end_timestamp" bigint,
    "count" bigint,
    "sorting" deribit.public_get_last_trades_by_currency_request_sorting
);

comment on column deribit.public_get_last_trades_by_currency_request."currency" is '(Required) The currency symbol';
comment on column deribit.public_get_last_trades_by_currency_request."kind" is 'Instrument kind, "combo" for any combo or "any" for all. If not provided instruments of all kinds are considered';
comment on column deribit.public_get_last_trades_by_currency_request."start_id" is 'The ID of the first trade to be returned. Number for BTC trades, or hyphen name in ex. "ETH-15" # "ETH_USDC-16"';
comment on column deribit.public_get_last_trades_by_currency_request."end_id" is 'The ID of the last trade to be returned. Number for BTC trades, or hyphen name in ex. "ETH-15" # "ETH_USDC-16"';
comment on column deribit.public_get_last_trades_by_currency_request."start_timestamp" is 'The earliest timestamp to return result from (milliseconds since the UNIX epoch). When param is provided trades are returned from the earliest';
comment on column deribit.public_get_last_trades_by_currency_request."end_timestamp" is 'The most recent timestamp to return result from (milliseconds since the UNIX epoch). Only one of params: start_timestamp, end_timestamp is truly required';
comment on column deribit.public_get_last_trades_by_currency_request."count" is 'Number of requested items, default - 10';
comment on column deribit.public_get_last_trades_by_currency_request."sorting" is 'Direction of results sorting (default value means no sorting, results will be returned in order in which they left the database)';

create type deribit.public_get_last_trades_by_currency_response_trade as (
    "amount" double precision,
    "block_rfq_id" bigint,
    "block_trade_id" text,
    "block_trade_leg_count" bigint,
    "combo_id" text,
    "combo_trade_id" double precision,
    "contracts" double precision,
    "direction" text,
    "index_price" double precision,
    "instrument_name" text,
    "iv" double precision,
    "liquidation" text,
    "mark_price" double precision,
    "price" double precision,
    "tick_direction" bigint,
    "timestamp" bigint,
    "trade_id" text,
    "trade_seq" bigint
);

comment on column deribit.public_get_last_trades_by_currency_response_trade."amount" is 'Trade amount. For perpetual and inverse futures the amount is in USD units. For options and linear futures and it is the underlying base currency coin.';
comment on column deribit.public_get_last_trades_by_currency_response_trade."block_rfq_id" is 'ID of the Block RFQ - when trade was part of the Block RFQ';
comment on column deribit.public_get_last_trades_by_currency_response_trade."block_trade_id" is 'Block trade id - when trade was part of a block trade';
comment on column deribit.public_get_last_trades_by_currency_response_trade."block_trade_leg_count" is 'Block trade leg count - when trade was part of a block trade';
comment on column deribit.public_get_last_trades_by_currency_response_trade."combo_id" is 'Optional field containing combo instrument name if the trade is a combo trade';
comment on column deribit.public_get_last_trades_by_currency_response_trade."combo_trade_id" is 'Optional field containing combo trade identifier if the trade is a combo trade';
comment on column deribit.public_get_last_trades_by_currency_response_trade."contracts" is 'Trade size in contract units (optional, may be absent in historical trades)';
comment on column deribit.public_get_last_trades_by_currency_response_trade."direction" is 'Direction: buy, or sell';
comment on column deribit.public_get_last_trades_by_currency_response_trade."index_price" is 'Index Price at the moment of trade';
comment on column deribit.public_get_last_trades_by_currency_response_trade."instrument_name" is 'Unique instrument identifier';
comment on column deribit.public_get_last_trades_by_currency_response_trade."iv" is 'Option implied volatility for the price (Option only)';
comment on column deribit.public_get_last_trades_by_currency_response_trade."liquidation" is 'Optional field (only for trades caused by liquidation): "M" when maker side of trade was under liquidation, "T" when taker side was under liquidation, "MT" when both sides of trade were under liquidation';
comment on column deribit.public_get_last_trades_by_currency_response_trade."mark_price" is 'Mark Price at the moment of trade';
comment on column deribit.public_get_last_trades_by_currency_response_trade."price" is 'Price in base currency';
comment on column deribit.public_get_last_trades_by_currency_response_trade."tick_direction" is 'Direction of the "tick" (0 = Plus Tick, 1 = Zero-Plus Tick, 2 = Minus Tick, 3 = Zero-Minus Tick).';
comment on column deribit.public_get_last_trades_by_currency_response_trade."timestamp" is 'The timestamp of the trade (milliseconds since the UNIX epoch)';
comment on column deribit.public_get_last_trades_by_currency_response_trade."trade_id" is 'Unique (per currency) trade identifier';
comment on column deribit.public_get_last_trades_by_currency_response_trade."trade_seq" is 'The sequence number of the trade within instrument';

create type deribit.public_get_last_trades_by_currency_response_result as (
    "has_more" boolean,
    "trades" deribit.public_get_last_trades_by_currency_response_trade[]
);

create type deribit.public_get_last_trades_by_currency_response as (
    "id" bigint,
    "jsonrpc" text,
    "result" deribit.public_get_last_trades_by_currency_response_result
);

comment on column deribit.public_get_last_trades_by_currency_response."id" is 'The id that was sent in the request';
comment on column deribit.public_get_last_trades_by_currency_response."jsonrpc" is 'The JSON-RPC version (2.0)';

create function deribit.public_get_last_trades_by_currency(
    "currency" deribit.public_get_last_trades_by_currency_request_currency,
    "kind" deribit.public_get_last_trades_by_currency_request_kind default null,
    "start_id" text default null,
    "end_id" text default null,
    "start_timestamp" bigint default null,
    "end_timestamp" bigint default null,
    "count" bigint default null,
    "sorting" deribit.public_get_last_trades_by_currency_request_sorting default null
)
returns deribit.public_get_last_trades_by_currency_response_result
language sql
as $$
    
    with request as (
        select row(
            "currency",
            "kind",
            "start_id",
            "end_id",
            "start_timestamp",
            "end_timestamp",
            "count",
            "sorting"
        )::deribit.public_get_last_trades_by_currency_request as payload
    ), 
    http_response as (
        select deribit.public_jsonrpc_request(
            url := '/public/get_last_trades_by_currency'::deribit.endpoint,
            request := request.payload,
            rate_limiter := 'deribit.non_matching_engine_request_log_call'::name
        ) as http_response
        from request
    )
    select (
        jsonb_populate_record(
            null::deribit.public_get_last_trades_by_currency_response,
            convert_from((a.http_response).body, 'utf-8')::jsonb
        )
    ).result
    from http_response a

$$;

comment on function deribit.public_get_last_trades_by_currency is 'Retrieve the latest trades that have occurred for instruments in a specific currency symbol.';
