/*
* AUTO-GENERATED FILE - DO NOT MODIFY
*
* This SQL file was generated by a code generation tool. Any modifications
* made to this file may be overwritten by subsequent code generation
* processes and could lead to inconsistencies or errors in the application.
*
* For any required changes, please modify the source templates or the
* code generation tool's configurations and regenerate this file.
*
* WARNING: MODIFYING THIS FILE DIRECTLY CAN LEAD TO UNEXPECTED BEHAVIOR
* AND IS STRONGLY DISCOURAGED.
*/
create type deribit.private_move_positions_request_currency as enum (
    'BTC',
    'ETH',
    'EURR',
    'USDC',
    'USDT'
);

create type deribit.private_move_positions_request_trade as (
    "instrument_name" text,
    "price" double precision,
    "amount" double precision
);

comment on column deribit.private_move_positions_request_trade."instrument_name" is '(Required) Instrument name';
comment on column deribit.private_move_positions_request_trade."price" is 'Price for trade - if not provided average price of the position is used';
comment on column deribit.private_move_positions_request_trade."amount" is '(Required) It represents the requested trade size. For perpetual and futures the amount is in USD units, for options it is the amount of corresponding cryptocurrency contracts, e.g., BTC or ETH. Amount can''t exceed position size.';

create type deribit.private_move_positions_request as (
    "currency" deribit.private_move_positions_request_currency,
    "source_uid" bigint,
    "target_uid" bigint,
    "trades" deribit.private_move_positions_request_trade[]
);

comment on column deribit.private_move_positions_request."currency" is 'The currency symbol';
comment on column deribit.private_move_positions_request."source_uid" is '(Required) Id of source subaccount. Can be found in My Account >> Subaccounts tab';
comment on column deribit.private_move_positions_request."target_uid" is '(Required) Id of target subaccount. Can be found in My Account >> Subaccounts tab';
comment on column deribit.private_move_positions_request."trades" is '(Required) List of trades for position move';

create type deribit.private_move_positions_response_trade as (
    "amount" double precision,
    "direction" text,
    "instrument_name" text,
    "price" double precision,
    "source_uid" bigint,
    "target_uid" bigint
);

comment on column deribit.private_move_positions_response_trade."amount" is 'Trade amount. For perpetual and futures - in USD units, for options it is the amount of corresponding cryptocurrency contracts, e.g., BTC or ETH.';
comment on column deribit.private_move_positions_response_trade."direction" is 'Direction: buy, or sell';
comment on column deribit.private_move_positions_response_trade."instrument_name" is 'Unique instrument identifier';
comment on column deribit.private_move_positions_response_trade."price" is 'Price in base currency';
comment on column deribit.private_move_positions_response_trade."source_uid" is 'Trade source uid';
comment on column deribit.private_move_positions_response_trade."target_uid" is 'Trade target uid';

create type deribit.private_move_positions_response_result as (
    "trades" deribit.private_move_positions_response_trade[]
);

create type deribit.private_move_positions_response as (
    "id" bigint,
    "jsonrpc" text,
    "result" deribit.private_move_positions_response_result
);

comment on column deribit.private_move_positions_response."id" is 'The id that was sent in the request';
comment on column deribit.private_move_positions_response."jsonrpc" is 'The JSON-RPC version (2.0)';

create function deribit.private_move_positions(
    "source_uid" bigint,
    "target_uid" bigint,
    "trades" deribit.private_move_positions_request_trade[],
    "currency" deribit.private_move_positions_request_currency default null
)
returns deribit.private_move_positions_response_result
language sql
as $$
    
    with request as (
        select row(
            "currency",
            "source_uid",
            "target_uid",
            "trades"
        )::deribit.private_move_positions_request as payload
    ), 
    http_response as (
        select deribit.private_jsonrpc_request(
            auth := deribit.get_auth(),
            url := '/private/move_positions'::deribit.endpoint,
            request := request.payload,
            rate_limiter := 'deribit.matching_engine_request_log_call'::name
        ) as http_response
        from request
    )
    select (
        jsonb_populate_record(
            null::deribit.private_move_positions_response,
            convert_from((a.http_response).body, 'utf-8')::jsonb
        )
    ).result
    from http_response a

$$;

comment on function deribit.private_move_positions is 'Moves positions from source subaccount to target subaccount';
