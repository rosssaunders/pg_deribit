/*
* AUTO-GENERATED FILE - DO NOT MODIFY
*
* This SQL file was generated by a code generation tool. Any modifications
* made to this file may be overwritten by subsequent code generation
* processes and could lead to inconsistencies or errors in the application.
*
* For any required changes, please modify the source templates or the
* code generation tool's configurations and regenerate this file.
*
* WARNING: MODIFYING THIS FILE DIRECTLY CAN LEAD TO UNEXPECTED BEHAVIOR
* AND IS STRONGLY DISCOURAGED.
*/
create type deribit.private_set_self_trading_config_request_mode as enum (
    'cancel_maker',
    'reject_taker'
);

create type deribit.private_set_self_trading_config_request as (
    "mode" deribit.private_set_self_trading_config_request_mode,
    "extended_to_subaccounts" boolean,
    "block_rfq_self_match_prevention" boolean
);

comment on column deribit.private_set_self_trading_config_request."mode" is '(Required) Self trading prevention behavior: reject_taker (reject the incoming order), cancel_maker (cancel the matched order in the book)';
comment on column deribit.private_set_self_trading_config_request."extended_to_subaccounts" is '(Required) If value is true trading is prevented between subaccounts of given account, otherwise they are treated separately';
comment on column deribit.private_set_self_trading_config_request."block_rfq_self_match_prevention" is 'When Block RFQ Self Match Prevention is enabled, it ensures that RFQs cannot be executed between accounts that belong to the same legal entity. This setting is independent of the general self-match prevention settings and must be configured separately.';

create type deribit.private_set_self_trading_config_response as (
    "id" bigint,
    "jsonrpc" text,
    "result" text
);

comment on column deribit.private_set_self_trading_config_response."id" is 'The id that was sent in the request';
comment on column deribit.private_set_self_trading_config_response."jsonrpc" is 'The JSON-RPC version (2.0)';
comment on column deribit.private_set_self_trading_config_response."result" is 'Result of method execution. ok in case of success';

create function deribit.private_set_self_trading_config(
    "mode" deribit.private_set_self_trading_config_request_mode,
    "extended_to_subaccounts" boolean,
    "block_rfq_self_match_prevention" boolean default null
)
returns text
language sql
as $$
    
    with request as (
        select row(
            "mode",
            "extended_to_subaccounts",
            "block_rfq_self_match_prevention"
        )::deribit.private_set_self_trading_config_request as payload
    ), 
    http_response as (
        select deribit.private_jsonrpc_request(
            auth := deribit.get_auth(),
            url := '/private/set_self_trading_config'::deribit.endpoint,
            request := request.payload,
            rate_limiter := 'deribit.non_matching_engine_request_log_call'::name
        ) as http_response
        from request
    )
    select (
        jsonb_populate_record(
            null::deribit.private_set_self_trading_config_response,
            convert_from((a.http_response).body, 'utf-8')::jsonb
        )
    ).result
    from http_response a

$$;

comment on function deribit.private_set_self_trading_config is 'Configure self trading behavior';
