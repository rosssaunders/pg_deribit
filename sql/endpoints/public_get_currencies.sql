/*
* AUTO-GENERATED FILE - DO NOT MODIFY
*
* This SQL file was generated by a code generation tool. Any modifications
* made to this file may be overwritten by subsequent code generation
* processes and could lead to inconsistencies or errors in the application.
*
* For any required changes, please modify the source templates or the
* code generation tool's configurations and regenerate this file.
*
* WARNING: MODIFYING THIS FILE DIRECTLY CAN LEAD TO UNEXPECTED BEHAVIOR
* AND IS STRONGLY DISCOURAGED.
*/
create type deribit.public_get_currencies_response_withdrawal_priority as (
    "name" text,
    "value" double precision
);

create type deribit.public_get_currencies_response_result as (
    "coin_type" text,
    "currency" text,
    "currency_long" text,
    "fee_precision" bigint,
    "in_cross_collateral_pool" boolean,
    "min_confirmations" bigint,
    "min_withdrawal_fee" double precision,
    "withdrawal_fee" double precision,
    "withdrawal_priorities" deribit.public_get_currencies_response_withdrawal_priority[]
);

comment on column deribit.public_get_currencies_response_result."coin_type" is 'The type of the currency.';
comment on column deribit.public_get_currencies_response_result."currency" is 'The abbreviation of the currency. This abbreviation is used elsewhere in the API to identify the currency.';
comment on column deribit.public_get_currencies_response_result."currency_long" is 'The full name for the currency.';
comment on column deribit.public_get_currencies_response_result."fee_precision" is 'fee precision';
comment on column deribit.public_get_currencies_response_result."in_cross_collateral_pool" is 'true if the currency is part of the cross collateral pool';
comment on column deribit.public_get_currencies_response_result."min_confirmations" is 'Minimum number of block chain confirmations before deposit is accepted.';
comment on column deribit.public_get_currencies_response_result."min_withdrawal_fee" is 'The minimum transaction fee paid for withdrawals';
comment on column deribit.public_get_currencies_response_result."withdrawal_fee" is 'The total transaction fee paid for withdrawals';

create type deribit.public_get_currencies_response as (
    "id" bigint,
    "jsonrpc" text,
    "result" deribit.public_get_currencies_response_result[]
);

comment on column deribit.public_get_currencies_response."id" is 'The id that was sent in the request';
comment on column deribit.public_get_currencies_response."jsonrpc" is 'The JSON-RPC version (2.0)';

create function deribit.public_get_currencies()
returns setof deribit.public_get_currencies_response_result
language sql
as $$
    with http_response as (
        select deribit.public_jsonrpc_request(
            url := '/public/get_currencies'::deribit.endpoint,
            request := null::text,
            rate_limiter := 'deribit.non_matching_engine_request_log_call'::name
        ) as http_response
    ),
    result as (
        select (jsonb_populate_record(
            null::deribit.public_get_currencies_response,
            convert_from((http_response.http_response).body, 'utf-8')::jsonb)
        ).result
        from http_response
    )
    select
        (b)."coin_type"::text,
        (b)."currency"::text,
        (b)."currency_long"::text,
        (b)."fee_precision"::bigint,
        (b)."in_cross_collateral_pool"::boolean,
        (b)."min_confirmations"::bigint,
        (b)."min_withdrawal_fee"::double precision,
        (b)."withdrawal_fee"::double precision,
        (b)."withdrawal_priorities"::deribit.public_get_currencies_response_withdrawal_priority[]
    from (
        select (unnest(r.data)) b
        from result r(data)
    ) a
    
$$;

comment on function deribit.public_get_currencies is 'Retrieves all cryptocurrencies supported by the API.';
