/*
* AUTO-GENERATED FILE - DO NOT MODIFY
*
* This SQL file was generated by a code generation tool. Any modifications
* made to this file may be overwritten by subsequent code generation
* processes and could lead to inconsistencies or errors in the application.
*
* For any required changes, please modify the source templates or the
* code generation tool's configurations and regenerate this file.
*
* WARNING: MODIFYING THIS FILE DIRECTLY CAN LEAD TO UNEXPECTED BEHAVIOR
* AND IS STRONGLY DISCOURAGED.
*/
create type deribit.private_set_disabled_trading_products_request as (
    "user_id" bigint,
    "trading_products" text[]
);

comment on column deribit.private_set_disabled_trading_products_request."user_id" is '(Required) Id of a (sub)account';
comment on column deribit.private_set_disabled_trading_products_request."trading_products" is '(Required) List of available trading products. Available products: perpetual, futures, options, future_combos, option_combos, spots';

create type deribit.private_set_disabled_trading_products_response as (
    "id" bigint,
    "jsonrpc" text,
    "result" text
);

comment on column deribit.private_set_disabled_trading_products_response."id" is 'The id that was sent in the request';
comment on column deribit.private_set_disabled_trading_products_response."jsonrpc" is 'The JSON-RPC version (2.0)';
comment on column deribit.private_set_disabled_trading_products_response."result" is 'Result of method execution. ok in case of success';

create function deribit.private_set_disabled_trading_products(
    "user_id" bigint,
    "trading_products" text[]
)
returns text
language sql
as $$
    
    with request as (
        select row(
            "user_id",
            "trading_products"
        )::deribit.private_set_disabled_trading_products_request as payload
    ), 
    http_response as (
        select deribit.private_jsonrpc_request(
            auth := deribit.get_auth(),
            url := '/private/set_disabled_trading_products'::deribit.endpoint,
            request := request.payload,
            rate_limiter := 'deribit.non_matching_engine_request_log_call'::name
        ) as http_response
        from request
    )
    select (
        jsonb_populate_record(
            null::deribit.private_set_disabled_trading_products_response,
            convert_from((a.http_response).body, 'utf-8')::jsonb
        )
    ).result
    from http_response a

$$;

comment on function deribit.private_set_disabled_trading_products is 'Configure disabled trading products for subaccounts. Only main accounts can modify this for subaccounts.';
