/*
* AUTO-GENERATED FILE - DO NOT MODIFY
*
* This SQL file was generated by a code generation tool. Any modifications
* made to this file may be overwritten by subsequent code generation
* processes and could lead to inconsistencies or errors in the application.
*
* For any required changes, please modify the source templates or the
* code generation tool's configurations and regenerate this file.
*
* WARNING: MODIFYING THIS FILE DIRECTLY CAN LEAD TO UNEXPECTED BEHAVIOR
* AND IS STRONGLY DISCOURAGED.
*/
create type deribit.public_get_funding_rate_value_request as (
    "instrument_name" text,
    "start_timestamp" bigint,
    "end_timestamp" bigint
);

comment on column deribit.public_get_funding_rate_value_request."instrument_name" is '(Required) Instrument name';
comment on column deribit.public_get_funding_rate_value_request."start_timestamp" is '(Required) The earliest timestamp to return result from (milliseconds since the UNIX epoch)';
comment on column deribit.public_get_funding_rate_value_request."end_timestamp" is '(Required) The most recent timestamp to return result from (milliseconds since the UNIX epoch)';

create type deribit.public_get_funding_rate_value_response as (
    "id" bigint,
    "jsonrpc" text,
    "result" double precision
);

comment on column deribit.public_get_funding_rate_value_response."id" is 'The id that was sent in the request';
comment on column deribit.public_get_funding_rate_value_response."jsonrpc" is 'The JSON-RPC version (2.0)';

create function deribit.public_get_funding_rate_value(    "instrument_name" text,
    "start_timestamp" bigint,
    "end_timestamp" bigint
)
returns double precision
language sql
as $$
    
    with request as (
        select row(
            "instrument_name",
            "start_timestamp",
            "end_timestamp"
        )::deribit.public_get_funding_rate_value_request as payload
    ), 
    http_response as (
        select deribit.public_jsonrpc_request(            
            url := '/public/get_funding_rate_value'::deribit.endpoint, 
            request := request.payload, 
            rate_limiter := 'deribit.non_matching_engine_request_log_call'::name
        ) as http_response
        from request
    )
    select (jsonb_populate_record(
        null::deribit.public_get_funding_rate_value_response, 
        convert_from((a.http_response).body, 'utf-8')::jsonb)).result
    from http_response a

$$;

comment on function deribit.public_get_funding_rate_value is 'Retrieves interest rate value for requested period. Applicable only for PERPETUAL instruments.';
