/*
* AUTO-GENERATED FILE - DO NOT MODIFY
*
* This SQL file was generated by a code generation tool. Any modifications
* made to this file may be overwritten by subsequent code generation
* processes and could lead to inconsistencies or errors in the application.
*
* For any required changes, please modify the source templates or the
* code generation tool's configurations and regenerate this file.
*
* WARNING: MODIFYING THIS FILE DIRECTLY CAN LEAD TO UNEXPECTED BEHAVIOR
* AND IS STRONGLY DISCOURAGED.
*/
create type deribit.private_get_subaccounts_request as (
    "with_portfolio" boolean
);

comment on column deribit.private_get_subaccounts_request."with_portfolio" is 'Portfolio flag: true for portfolio information, false for subaccount information only. false by default';

create type deribit.private_get_subaccounts_response_eth as (
    "additional_reserve" double precision,
    "available_funds" double precision,
    "available_withdrawal_funds" double precision,
    "balance" double precision,
    "currency" text,
    "equity" double precision,
    "initial_margin" double precision,
    "maintenance_margin" double precision,
    "margin_balance" double precision,
    "spot_reserve" double precision
);

comment on column deribit.private_get_subaccounts_response_eth."additional_reserve" is 'The account''s balance reserved in other orders';

create type deribit.private_get_subaccounts_response_btc as (
    "additional_reserve" double precision,
    "available_funds" double precision,
    "available_withdrawal_funds" double precision,
    "balance" double precision,
    "currency" text,
    "equity" double precision,
    "initial_margin" double precision,
    "maintenance_margin" double precision,
    "margin_balance" double precision,
    "spot_reserve" double precision
);

comment on column deribit.private_get_subaccounts_response_btc."additional_reserve" is 'The account''s balance reserved in other orders';

create type deribit.private_get_subaccounts_response_portfolio as (
    "btc" deribit.private_get_subaccounts_response_btc,
    "eth" deribit.private_get_subaccounts_response_eth,
    "proof_id" text,
    "proof_id_signature" text,
    "receive_notifications" boolean,
    "security_keys_assignments" text[],
    "security_keys_enabled" boolean,
    "system_name" text,
    "type" text,
    "username" text
);

comment on column deribit.private_get_subaccounts_response_portfolio."proof_id" is 'hashed identifier used in the Proof Of Liability for the subaccount. This identifier allows you to find your entries in the Deribit Proof-Of-Reserves files. IMPORTANT: Keep it secret to not disclose your entries in the Proof-Of-Reserves.';
comment on column deribit.private_get_subaccounts_response_portfolio."proof_id_signature" is 'signature used as a base string for proof_id hash. IMPORTANT: Keep it secret to not disclose your entries in the Proof-Of-Reserves.';
comment on column deribit.private_get_subaccounts_response_portfolio."receive_notifications" is 'When true - receive all notification emails on the main email';
comment on column deribit.private_get_subaccounts_response_portfolio."security_keys_assignments" is 'Names of assignments with Security Keys assigned';
comment on column deribit.private_get_subaccounts_response_portfolio."security_keys_enabled" is 'Whether the Security Keys authentication is enabled';
comment on column deribit.private_get_subaccounts_response_portfolio."system_name" is 'System generated user nickname';

create type deribit.private_get_subaccounts_response_result as (
    "email" text,
    "id" bigint,
    "is_password" boolean,
    "login_enabled" boolean,
    "margin_model" text,
    "not_confirmed_email" text,
    "portfolio" deribit.private_get_subaccounts_response_portfolio
);

comment on column deribit.private_get_subaccounts_response_result."email" is 'User email';
comment on column deribit.private_get_subaccounts_response_result."id" is 'Account/Subaccount identifier';
comment on column deribit.private_get_subaccounts_response_result."is_password" is 'true when password for the subaccount has been configured';
comment on column deribit.private_get_subaccounts_response_result."login_enabled" is 'Informs whether login to the subaccount is enabled';
comment on column deribit.private_get_subaccounts_response_result."margin_model" is 'Margin model';
comment on column deribit.private_get_subaccounts_response_result."not_confirmed_email" is 'New email address that has not yet been confirmed. This field is only included if with_portfolio == true.';

create type deribit.private_get_subaccounts_response as (
    "id" bigint,
    "jsonrpc" text,
    "result" deribit.private_get_subaccounts_response_result[]
);

comment on column deribit.private_get_subaccounts_response."id" is 'The id that was sent in the request';
comment on column deribit.private_get_subaccounts_response."jsonrpc" is 'The JSON-RPC version (2.0)';

create function deribit.private_get_subaccounts(
    "with_portfolio" boolean default null
)
returns setof deribit.private_get_subaccounts_response_result
language sql
as $$
    
    with request as (
        select row(
            "with_portfolio"
        )::deribit.private_get_subaccounts_request as payload
    ), 
    http_response as (
        select deribit.private_jsonrpc_request(
            auth := deribit.get_auth(),
            url := '/private/get_subaccounts'::deribit.endpoint,
            request := request.payload,
            rate_limiter := 'deribit.non_matching_engine_request_log_call'::name
        ) as http_response
        from request
    ),
    result as (
        select (jsonb_populate_record(
            null::deribit.private_get_subaccounts_response,
            convert_from((http_response.http_response).body, 'utf-8')::jsonb)
        ).result
        from http_response
    )
    select
        (b)."email"::text,
        (b)."id"::bigint,
        (b)."is_password"::boolean,
        (b)."login_enabled"::boolean,
        (b)."margin_model"::text,
        (b)."not_confirmed_email"::text,
        (b)."portfolio"::deribit.private_get_subaccounts_response_portfolio
    from (
        select (unnest(r.data)) b
        from result r(data)
    ) a
    
$$;

comment on function deribit.private_get_subaccounts is 'Get information about subaccounts. When called from subaccount, the response will include limited details for the main account and details for the subaccount initiating the request. The portfolio information will be included in the response only if the with_portfolio parameter is set to true.';
